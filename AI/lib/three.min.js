// threejs.org/license
'use strict';var THREE={REVISION:"68"};"object"===typeof module&&(module.exports=THREE);THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;
THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;
THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;
THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;
THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1 6?a+6*(b-a)* c:0.5>c?b:c<2 3?a+6*(b-a)*(2 3-c):a};b="0.5">=c?c*(1+b):c+b-c*b;c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a))return a=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a),this.r=
Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=
a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<< 8^255*this.b<<0},gethexstring:function(){return("000000"+this.gethex().tostring(16)).slice(-6)},gethsl:function(a){a="a||{h:0,s:0,l:0};var" b="this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)/2;if(f===e)f=g=0;else{var" k="e-f,f=0.5">=h?k/(e+f):k/(2-e-f);switch(e){case b:g=(c-d)/k+(c<d?6:0);break;case c:g="(d-b)/k+2;break;case" d:g="(b-c)/k+4}g/=6}a.h=g;a.s=f;a.l=h;return" a},getstyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsethsl:function(a, b,c){var d="this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return" this},add:function(a){this.r+="a.r;this.g+=a.g;this.b+=a.b;return" this},addcolors:function(a,b){this.r="a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return" this},addscalar:function(a){this.r+="a;this.g+=a;this.b+=a;return" this},multiply:function(a){this.r*="a.r;this.g*=a.g;this.b*=a.b;return" this},multiplyscalar:function(a){this.r*="a;this.g*=a;this.b*=a;return" this},lerp:function(a,b){this.r+="(a.r-this.r)*b;this.g+=(a.g-this.g)*b;" this.b+="(a.b-this.b)*b;return" this},equals:function(a){return a.r="==this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return" this},toarray:function(){return[this.r,this.g,this.b]},clone:function(){return(new three.color).setrgb(this.r,this.g,this.b)}}; three.colorkeywords="{aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643," darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055, grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184, lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130, palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888, tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};three.quaternion="function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void" 0!="=d?d:1};" three.quaternion.prototype="{constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get" x(){return this._x},set x(a){this._x="a;this.onChangeCallback()},get" y(){return this._y},set y(a){this._y="a;this.onChangeCallback()},get" z(){return this._z},set z(a){this._z="a;this.onChangeCallback()},get" w(){return this._w},set w(a){this._w="a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return" this},copy:function(a){this._x="a.x;this._y=a.y;this._z=a.z;" this._w="a.w;this.onChangeCallback();return" this},setfromeuler:function(a,b){if(!1="==a" instanceof three.euler)throw error("three.quaternion: .setfromeuler() now expects a euler rotation rather than vector3 and order.");var c="Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);" xyz"="==a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):" yxz"="==a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=""" c*d*h-f*g*e,this._w="c*d*e+f*g*h):" zxy"="==a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):" zyx"="==a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"YZX"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):"XZY"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);if(!1!==b)this.onChangeCallback();return""" this},setfromaxisangle:function(a, b){var this},setfromrotationmatrix:function(a){var b="a.elements,c=b[0];a=b[4];var">f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)/c,this._x=0.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=
0.25*c,this._z=(g+k)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+k)/c,this._z=0.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=
-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},
multiply:function(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,k=b._z,l=b._w;this._x=c*l+f*g+d*k-e*h;this._y=d*l+f*h+e*g-c*k;this._z=e*l+f*k+c*h-d*g;this._w=f*l-c*g-d*h-e*k;this.onChangeCallback();return this},multiplyVector3:function(a){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
return a.applyQuaternion(this)},slerp:function(a,b){var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w="f,this._x=c,this._y=d,this._z=e,this;var" h="Math.acos(g),k=Math.sqrt(1-g*g);if(0.001">Math.abs(k))return this._w=0.5*(f+this._w),this._x=0.5*(c+this._x),this._y=0.5*(d+this._y),this._z=0.5*(e+this._z),this;g=Math.sin((1-b)*h)/k;h=Math.sin(b*h)/k;this._w=f*g+this._w*h;this._x=
c*g+this._x*h;this._y=d*g+this._y*h;this._z=e*g+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];this._w=a[3];this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,
this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},
subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a, b){this.x<a.x?this.x="a.x:this.x">b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},
roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=
this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){this.x=a[0];this.y=a[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=
a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),applyMatrix3:function(a){var b=this.x,
c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=
(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,l=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-l*-f;this.y=k*a+b*-f+l*-e-h*-g;this.z=l*a+b*-g+h*-f-k*-e;return this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;
this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x="a.x:this.x">b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=
b.z);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=
0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+
Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=
e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;this.z=c*g-d*f;return this},projectOnVector:function(){var a,b;return function(c){void 0===a&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===
a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(a,b){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},
setEulerFromQuaternion:function(a,b){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(a){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,
b){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=
a;return this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},
addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=
this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},
setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],k=a[9];c=a[2];b=a[6];var l=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(f-c)&&0.01>Math.abs(k-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(f+c)&&0.1>Math.abs(k+b)&&0.1>Math.abs(e+h+l-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;l=(l+1)/2;d=(d+g)/4;f=(f+c)/4;k=(k+b)/4;e>h&&e>l?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>l?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=
Math.sqrt(h),b=d/c,d=k/c):0.01>l?(c=b=0.707106781,d=0):(d=Math.sqrt(l),b=f/d,c=k/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-k)*(b-k)+(f-c)*(f-c)+(g-d)*(g-d));0.001>Math.abs(a)&&(a=1);this.x=(b-k)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+l-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w< a.w&&(this.w="a.w);return" this},clamp:function(a,b){this.x<a.x?this.x="a.x:this.x">b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);
this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):
Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];this.w=a[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,
this.w)}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},copy:function(a){this._x=
a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b){var c=THREE.Math.clamp,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],k=d[5],l=d[9],n=d[2],q=d[6],d=d[10];b=b||this._order;"XYZ"===b?(this._y=Math.asin(c(g,-1,1)),0.99999>Math.abs(g)?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(q,k),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(l,-1,1)),0.99999>Math.abs(l)?(this._y=Math.atan2(g,d),this._z=Math.atan2(h,k)):
(this._y=Math.atan2(-n,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(q,-1,1)),0.99999>Math.abs(q)?(this._y=Math.atan2(-n,d),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(h,e))):"ZYX"===b?(this._y=Math.asin(-c(n,-1,1)),0.99999>Math.abs(n)?(this._x=Math.atan2(q,d),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,k))):"YZX"===b?(this._z=Math.asin(c(h,-1,1)),0.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-n,e)):(this._x=0,this._y=Math.atan2(g,d))):"XZY"===b?(this._z=
Math.asin(-c(f,-1,1)),0.99999>Math.abs(f)?(this._x=Math.atan2(q,k),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-l,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b);this._order=b;this.onChangeCallback();return this},setFromQuaternion:function(a,b,c){var d=THREE.Math.clamp,e=a.x*a.x,f=a.y*a.y,g=a.z*a.z,h=a.w*a.w;b=b||this._order;"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),h-e-f+g),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w),-1,1)),this._z=Math.atan2(2*
(a.z*a.w-a.x*a.y),h+e-f-g)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z),-1,1)),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h-e-f+g),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h-e+f-g)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z),-1,1)),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),h-e-f+g),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h-e+f-g)):"ZYX"===b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),h-e-f+g),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z),-1,1)),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h+e-f-g)):"YZX"===
b?(this._x=Math.atan2(2*(a.x*a.w-a.z*a.y),h-e+f-g),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),h+e-f-g),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w),-1,1))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),h-e+f-g),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h+e-f-g),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y),-1,1))):console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);
this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};
THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,
b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandbypoint(a[b]);return this},setfromcenterandsize:function(){var a="new" three.vector2;return function(b,c){var d="a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return" this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeempty:function(){this.min.x="this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return" this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new three.vector2).addvectors(this.min,this.max).multiplyscalar(0.5)},size:function(a){return(a||new three.vector2).subvectors(this.max,this.min)},expandbypoint:function(a){this.min.min(a);this.max.max(a);return this},expandbyvector:function(a){this.min.sub(a);this.max.add(a);return this},expandbyscalar:function(a){this.min.addscalar(-a); this.max.addscalar(a);return this},containspoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getparameter:function(a,b){return(b||new three.vector2).set((a.x-this.min.x) (this.max.x-this.min.x),(a.y-this.min.y) (this.max.y-this.min.y))},isintersectionbox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>
this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&
a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandbypoint(a[b]);return this},setfromcenterandsize:function(){var a="new" three.vector3;return function(b,c){var d="a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return" this}}(),setfromobject:function(){var function(b){var c="this;b.updateMatrixWorld(!0);" this.makeempty();b.traverse(function(b){if(void 0!="=b.geometry&&void" e="b.geometry.vertices,f=0,g=e.length;f<g;f++)a.copy(e[f]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return" this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeempty:function(){this.min.x="this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return" this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}, center:function(a){return(a||new three.vector3).addvectors(this.min,this.max).multiplyscalar(0.5)},size:function(a){return(a||new three.vector3).subvectors(this.max,this.min)},expandbypoint:function(a){this.min.min(a);this.max.max(a);return this},expandbyvector:function(a){this.min.sub(a);this.max.add(a);return this},expandbyscalar:function(a){this.min.addscalar(-a);this.max.addscalar(a);return this},containspoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||
a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getparameter:function(a,b){return(b||new three.vector3).set((a.x-this.min.x) (this.max.x-this.min.x),(a.y-this.min.y) (this.max.y-this.min.y),(a.z-this.min.z) (this.max.z-this.min.z))},isintersectionbox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||
a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=0.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},
union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);
a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};
THREE.Matrix3=function(a,b,c,d,e,f,g,h,k){var l=this.elements=new Float32Array(9);l[0]=void 0!==a?a:1;l[3]=b||0;l[6]=c||0;l[1]=d||0;l[4]=void 0!==e?e:1;l[7]=f||0;l[2]=g||0;l[5]=h||0;l[8]=void 0!==k?k:1};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,k){var l=this.elements;l[0]=a;l[3]=b;l[6]=c;l[1]=d;l[4]=e;l[7]=f;l[2]=g;l[5]=h;l[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},
multiplyVector3Array:function(a){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applymatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return 0="==c&&(c=0);void" b}}(),multiplyscalar:function(a){var b="this.elements;b[0]*=a;b[3]*=a;b[6]*=" a;b[1]*="a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return" this},determinant:function(){var a="this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return" b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getinverse:function(a,b){var c="a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];" error("matrix3.getinverse(): can't invert matrix, determinant is 0");console.warn("matrix3.getinverse(): 0");this.identity();return this}this.multiplyscalar(1 c);return this},transpose:function(){var a,b="this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return" this},flattentoarrayoffset:function(a,b){var a[b+5]="c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return" a},getnormalmatrix:function(a){this.getinverse(a).transpose();return this},transposeintoarray:function(a){var this},fromarray:function(a){this.elements.set(a);return this},toarray:function(){var new three.matrix3(a[0],a[3], a[6],a[1],a[4],a[7],a[2],a[5],a[8])}};three.matrix4="function(a,b,c,d,e,f,g,h,k,l,n,q,r,t,s,p){var" v="this.elements=new" float32array(16);v[0]="void" 0!="=a?a:1;v[4]=b||0;v[8]=c||0;v[12]=d||0;v[1]=e||0;v[5]=void" three.matrix4.prototype="{constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,k,l,n,q,r,t,s,p){var" this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractposition:function(a){console.warn("threematrix4: .extractposition() has been renamed to .copyposition().");return this.copyposition(a)}, copyposition:function(a){var this},extractrotation:function(){var three.vector3;return function(b){var d="1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),f=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return" this}}(),makerotationfromeuler:function(a){!1="==a" instanceof three.euler&& console.error("three.matrix: .makerotationfromeuler() now expects euler rotation rather than vector3 and order.");var k="f*e,l=c*h,n=c*e;b[0]=g*h;b[4]=-g*e;b[8]=d;b[1]=k+l*d;b[5]=a-n*d;b[9]=-c*g;b[2]=n-a*d;b[6]=l+k*d;b[10]=f*g}else" yxz"="==a.order?(a=g*h,k=g*e,l=d*h,n=d*e,b[0]=a+n*c,b[4]=l*c-k,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=k*c-l,b[6]=n+a*c," " b[10]="f*g):" zxy"="==a.order?(a=g*h,k=g*e,l=d*h,n=d*e,b[0]=a-n*c,b[4]=-f*e,b[8]=l+k*c,b[1]=k+l*c,b[5]=f*h,b[9]=n-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):" zyx"="==a.order?(a=f*h,k=f*e,l=c*h,n=c*e,b[0]=g*h,b[4]=l*d-k,b[8]=a*d+n,b[1]=g*e,b[5]=n*d+a,b[9]=k*d-l,b[2]=-d,b[6]=c*g,b[10]=f*g):"YZX"===a.order?(a=f*g,k=f*d,l=c*g,n=c*d,b[0]=g*h,b[4]=n-a*e,b[8]=l*e+k,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=k*e+l,b[10]=a-n*e):"XZY"===a.order&&(a=f*g,k=f*d,l=c*g,n=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+n,b[5]=f*h,b[9]=k*""" e-l,b[2]="l*e-k,b[6]=c*h,b[10]=n*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return" this},setrotationfromquaternion:function(a){console.warn("three.matrix4: .setrotationfromquaternion() .makerotationfromquaternion().");return this.makerotationfromquaternion(a)},makerotationfromquaternion:function(a){var l="c*h,c=c*k,n=d*h,d=d*k,e=e*k,g=f*g,h=f*h,f=f*k;b[0]=1-(n+e);b[4]=l-f;b[8]=c+h;b[1]=l+f;b[5]=1-" (a+e);b[9]="d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+n);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return" this},lookat:function(){var three.vector3,b="new" three.vector3,c="new" function(d,e,f){var g="this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return" this}}(), multiply:function(a,b){return void .multiply() only accepts one argument. use .multiplymatrices( a, ) instead."),this.multiplymatrices(a,b)):this.multiplymatrices(this,a)},multiplymatrices:function(a,b){var q="d[7],L=d[11],d=d[15];e[0]=f*A+g*z+h*ba+k*E;e[4]=f*x+g*y+h*P+k*Q;e[8]=f*C+g*K+h*O+k*L;e[12]=f*I+g*N+h*J+k*d;e[1]=l*A+n*z+q*ba+r*E;e[5]=l*x+n*y+q*P+r*Q;e[9]=l*C+n*K+q*O+r*L;e[13]=l*I+n*N+q*J+r*d;e[2]=t*A+s*z+p*ba+v*E;e[6]=t*x+s*y+p*P+v*Q;e[10]=t*C+s*K+p*O+v*L;e[14]=t*I+s*N+p*J+v*d;e[3]=w*A+u*z+D*ba+c*E;e[7]=w*x+u*y+D*P+c*Q;e[11]=w*C+u*K+D*O+c*L;e[15]=w*I+u*N+D*J+c*d;return" this},multiplytoarray:function(a,b,c){var c[4]="d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return" this},multiplyscalar:function(a){var this},multiplyvector3:function(a){console.warn("three.matrix4: .multiplyvector3() removed. vector.applymatrix4( matrix or vector.applyprojection( instead."); return a.applyprojection(this)},multiplyvector4:function(a){console.warn("three.matrix4: .multiplyvector4() instead.");return a.applymatrix4(this)},multiplyvector3array:function(a){console.warn("three.matrix4: .multiplyvector3array() renamed. matrix.applytovector3array( array this.applytovector3array(a)},applytovector3array:function(){var function(b,c,d){void b.length);for(var e="0;e<d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix4(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return" b}}(),rotateaxis:function(a){console.warn("three.matrix4: .rotateaxis() vector3.transformdirection( instead.");a.transformdirection(this)},crossvector:function(a){console.warn("three.matrix4: .crossvector() a.applymatrix4(this)},determinant:function(){var a[0],c="a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],k=a[13],l=a[2],n=a[6],q=a[10],r=a[14];return" a[3]*(+e*h*n-d*k*n-e*g*q+c*k*q+d*g*r-c*h*r)+a[7]*(+b*h*r-b*k*q+e*f*q-d*f*r+d*k*l-e*h*l)+a[11]*(+b*k*n-b*g*r-e*f*n+c*f*r+e*g*l-c*k*l)+a[15]*(-d*g*l-b*h*n+b*g*q+d*f*n-c*f*q+c*h*l)},transpose:function(){var this},flattentoarrayoffset:function(a, b){var a},getposition:function(){var function(){console.warn("three.matrix4: .getposition() vector3.setfrommatrixposition( instead.");var a.set(b[12],b[13],b[14])}}(),setposition:function(a){var this},getinverse:function(a,b){var u+e*q*u+g*k*d-e*n*d;c[13]="g*q*r-h*n*r+h*k*s-e*q*s-g*k*p+e*n*p;c[2]=l*p*v-q*t*v+q*r*w-k*p*w-l*r*d+k*t*d;c[6]=h*t*v-f*p*v-h*r*w+e*p*w+f*r*d-e*t*d;c[10]=f*q*v-h*l*v+h*k*w-e*q*w-f*k*d+e*l*d;c[14]=h*l*r-f*q*r-h*k*t+e*q*t+f*k*p-e*l*p;c[3]=n*t*v-l*s*v-n*r*w+k*s*w+l*r*u-k*t*u;c[7]=f*s*v-g*t*v+g*r*w-e*s*w-f*r*u+e*t*u;c[11]=g*l*v-f*n*v-g*k*w+e*n*w+f*k*u-e*l*u;c[15]=f*n*r-g*l*r+g*k*t-e*n*t-f*k*s+e*l*s;c=e*c[0]+k*c[4]+r*c[8]+v*c[12];if(0==c){if(b)throw" error("matrix4.getinverse(): 0"); console.warn("matrix4.getinverse(): this},translate:function(a){console.warn("three.matrix4: .translate() removed.")},rotatex:function(a){console.warn("three.matrix4: .rotatex() removed.")},rotatey:function(a){console.warn("three.matrix4: .rotatey() removed.")},rotatez:function(a){console.warn("three.matrix4: .rotatez() removed.")},rotatebyaxis:function(a,b){console.warn("three.matrix4: .rotatebyaxis() removed.")}, scale:function(a){var this},getmaxscaleonaxis:function(){var math.sqrt(math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},maketranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makerotationx:function(a){var 0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makerotationy:function(a){var this},makerotationz:function(a){var this},makerotationaxis:function(a,b){var this},makescale:function(a,b,c){this.set(a, 0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makerotationfromquaternion(b);this.scale(c);this.setposition(a);return this},decompose:function(){var three.matrix4;return function(c,d,e){var f="this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0">this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,l=1/k;b.elements[0]*=c;b.elements[1]*=
c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(0.5*a));
var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,k=c-d,l=f-e;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/k;g[9]=0;g[13]=-((c+d)/k);g[2]=0;g[6]=0;g[10]=-2/l;g[14]=-((f+e)/l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){var a=
this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);
var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(a,b,c,d){var e=a.clone().add(b).multiplyScalar(0.5),f=b.clone().sub(a).normalize(),g=0.5*a.distanceTo(b),
h=this.origin.clone().sub(e);a=-this.direction.dot(f);b=h.dot(this.direction);var k=-h.dot(f),l=h.lengthSq(),n=Math.abs(1-a*a),q,r;0<=n?(h=a*k-b,q=a*b-k,r=g*n,0<=h?q>=-r?q<=r?(g=1 n,h*="g,q*=g,a=h*(h+a*q+2*b)+q*(a*h+q+2*k)+l):(q=g,h=Math.max(0,-(a*q+b)),a=-h*h+q*(q+2*k)+l):(q=-g,h=Math.max(0,-(a*q+b)),a=-h*h+q*(q+2*k)+l):q<=-r?(h=Math.max(0,-(-a*g+b)),q=0<h?-g:Math.min(Math.max(-g,-k),g),a=-h*h+q*(q+2*k)+l):q<=r?(h=0,q=Math.min(Math.max(-g,-k),g),a=q*(q+2*k)+l):(h=Math.max(0,-(a*g+b)),q=0<h?g:Math.min(Math.max(-g," -k),g),a="-h*h+q*(q+2*k)+l)):(q=0<a?-g:g,h=Math.max(0,-(a*q+b)),a=-h*h+q*(q+2*k)+l);c&&c.copy(this.direction.clone().multiplyScalar(h).add(this.origin));d&&d.copy(f.clone().multiplyScalar(q).add(e));return" a},isintersectionsphere:function(a){return this.distancetopoint(a.center)<="a.radius},intersectSphere:function(){var" a="new" three.vector3;return function(b,c){a.subvectors(b.center,this.origin);var d="a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;if(e">f)return null;f=Math.sqrt(f-e);e=d-f;
d+=f;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectplane:function(a,b){var c="this.distanceToPlane(a);return" null="==c?null:this.at(c,b)},isIntersectionBox:function(){var" a="new" three.vector3; return function(b){return null!="=this.intersectBox(b,a)}}(),intersectBox:function(a,b){var" c,d,e,f,g;d="1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var" h="this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c">f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*g,g*=a.min.z-h.z);if(c>g||e>d)return null;if(e>c||c!==
c)c=e;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersecttriangle:function(){var a="new" three.vector3,b="new" three.vector3,c="new" three.vector3,d="new" three.vector3;return function(e,f,g,h,k){b.subvectors(f,e);c.subvectors(g,e);d.crossvectors(b,c);f="this.direction.dot(d);if(0<f){if(h)return" null;h="1}else" if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));if(0>g||e+g>f)return null;
e=-h*a.dot(d);return 0>e?null:this.at(e/f,k)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=math.max(e,d.distancetosquared(b[f]));this.radius=math.sqrt(e);return 0 this}}(),copy:function(a){this.center.copy(a.center);this.radius="a.radius;return" this},empty:function(){return>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<= this.radius*this.radius},distancetopoint:function(a){return a.distanceto(this.center)-this.radius},intersectssphere:function(a){var b="this.radius+a.radius;return" a.center.distancetosquared(this.center)<="b*b},clampPoint:function(a,b){var" c="this.center.distanceToSquared(a),d=b||new" three.vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);
return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};
THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],k=c[6],l=c[7],n=c[8],q=c[9],r=c[10],t=c[11],s=c[12],p=c[13],v=c[14],c=c[15];b[0].setComponents(f-a,l-g,t-n,c-s).normalize();b[1].setComponents(f+
a,l+g,t+n,c+s).normalize();b[2].setComponents(f+d,l+h,t+q,c+p).normalize();b[3].setComponents(f-d,l-h,t-q,c-p).normalize();b[4].setComponents(f-e,l-k,t-r,c-v).normalize();b[5].setComponents(f+e,l+k,t+r,c+v).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,
c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsbox:function(){var a="new" three.vector3,b="new" three.vector3;return function(c){for(var d="this.planes,e=0;6">e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g="f.distanceToPoint(a),f=f.distanceToPoint(b);if(0">g&&0>f)return!1}return!0}}(),
containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,
c);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectline:function(){var a="new" three.vector3;return function(b,c){var d="c||new" three.vector3,e="b.delta(a),f=this.normal.dot(e);if(0==f){if(0==this.distanceToPoint(b.start))return" d.copy(b.start)}else return f="-(b.start.dot(this.normal)+this.constant)/f,0">f||1<f?void 0:d.copy(e).multiplyscalar(f).add(b.start)}}(), coplanarpoint:function(a){return(a||new three.vector3).copy(this.normal).multiplyscalar(-this.constant)},applymatrix4:function(){var a="new" three.vector3,b="new" three.vector3,c="new" three.matrix3;return function(d,e){var f="e||c.getNormalMatrix(d),f=a.copy(this.normal).applyMatrix3(f),g=this.coplanarPoint(b);g.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(f,g);return" this}}(),translate:function(a){this.constant-="a.dot(this.normal);return" this},equals:function(a){return a.normal.equals(this.normal)&& a.constant="=this.constant},clone:function(){return(new" three.plane).copy(this)}}; three.math="{generateUUID:function(){var" .split(""),b="Array(36),c=0,d;return" function(){for(var e="0;36">e;e++)8==e||13==e||18==e||23==e?b[e]="-":14==e?b[e]="4":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19==e?d&3|8:d]);return b.join("")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},maplinear:function(a,b,c,d,e){return d+(a-b)*(e-d) (c-b)},smoothstep:function(a,b,c){if(a<="b)return" 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0},degtorad:function(){var 0="==(a&a-1)&&0!==a}};" a="Math.PI/180;return" function(b){return b* a}}(),radtodeg:function(){var b*a}}(),ispoweroftwo:function(a){return three.spline="function(a){function" b(a,b,c,d,e,f,g){a="0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var" c="[],d={x:0,y:0,z:0},e,f,g,h,k,l,n,q,r;this.initFromArray=function(a){this.points=[];for(var" b="0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f">this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;l=this.points[c[0]];n=this.points[c[1]];q=this.points[c[2]];r=this.points[c[3]];h=g*g;k=g*h;d.x=b(l.x,n.x,q.x,r.x,g,h,k);d.y=b(l.y,n.y,q.y,r.y,g,h,k);d.z=b(l.z,n.z,q.z,r.z,g,h,k);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getlength="function(a){var" b,c,d,e="b=b=0,f=new" three.vector3,g="new" three.vector3,h="[],k=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=" a c,d="this.getPoint(b),g.copy(d),k+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=k,e=b);h[h.length]=k;return{chunks:h,total:k}};this.reparametrizeByArcLength=function(a){var" b,c,d,e,f,g,h="[],k=new" three.vector3,l="this.getLength();h.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=l.chunks[b]-l.chunks[b-1];g=Math.ceil(a*c/l.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+1/g*c*(f-e),d=this.getPoint(d),h.push(k.copy(d).clone());" h.push(k.copy(this.points[b]).clone())}this.points="h}};THREE.Triangle=function(a,b,c){this.a=void" 0!="=a?a:new" three.vector3;this.b="void" three.vector3;this.c="void" three.vector3};three.triangle.normal="function(){var" three.vector3;return function(b,c,d,e){e="e||new" three.vector3;e.subvectors(d,c);a.subvectors(b,c);e.cross(a);b="e.lengthSq();return" 0<b?e.multiplyscalar(1 math.sqrt(b)):e.set(0,0,0)}}(); three.triangle.barycoordfrompoint="function(){var" three.vector3,b="new" three.vector3,c="new" function(d,e,f,g,h){a.subvectors(g,e);b.subvectors(f,e);c.subvectors(d,e);d="a.dot(a);e=a.dot(b);f=a.dot(c);var" k="b.dot(b);g=b.dot(c);var" l="d*k-e*e;h=h||new" three.vector3;if(0="=l)return" h.set(-2,-1,-1);l="1/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return" h.set(1-k-d,d,k)}}(); three.triangle.containspoint="function(){var" function(b,c,d,e){b="THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return" 0<="b.x&&0<=b.y&&1">=b.x+b.y}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return 0.5*a.cross(b).length()}}(),midpoint:function(a){return(a||
new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&
c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=b.length,e=0;e<d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}}; 0="==this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var" (function(a){a.raycaster="function(b,c,f,g){this.ray=new" a.ray(b,c);this.near="f||0;this.far=g||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var" b="function(a,b){return" a.distance-b.distance},c="function(a,b,f,g){a.raycast(b,f);if(!0===g){a=a.children;g=0;for(var" h="a.length;g<h;g++)c(a[g],b,f,!0)}};a.Raycaster.prototype={constructor:a.Raycaster,precision:1E-4,linePrecision:1,set:function(a,b){this.ray.set(a,b)},intersectObject:function(a,e){var" f="[];c(a,this,f,e);" f.sort(b);return f},intersectobjects:function(a,e){for(var f}}})(three); three.object3d="function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name=" ";this.parent="void" " 0;this.children="[];this.up=THREE.Object3D.DefaultUp.clone();var" a="new" three.vector3,b="new" three.euler,c="new" three.quaternion,d="new" three.vector3(1,1,1);b.onchange(function(){c.setfromeuler(b,!1)});c.onchange(function(){b.setfromquaternion(c,void 0,!1)});object.defineproperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,value:b},quaternion:{enumerable:!0,value:c}, scale:{enumerable:!0,value:d}});this.renderdepth="null;this.rotationAutoUpdate=!0;this.matrix=new" three.matrix4;this.matrixworld="new" three.matrix4;this.matrixautoupdate="!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.DefaultUp=new" three.vector3(0,1,0); three.object3d.prototype="{constructor:THREE.Object3D,get" eulerorder(){console.warn("three.object3d: .eulerorder has been moved to .rotation.order.");return this.rotation.order},set eulerorder(a){console.warn("three.object3d: .rotation.order.");this.rotation.order="a},get" usequaternion(){console.warn("three.object3d: .usequaternion removed. the library now uses quaternions by default.")},set usequaternion(a){console.warn("three.object3d: default.")}, applymatrix:function(a){this.matrix.multiplymatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setrotationfromaxisangle:function(a,b){this.quaternion.setfromaxisangle(a,b)},setrotationfromeuler:function(a){this.quaternion.setfromeuler(a,!0)},setrotationfrommatrix:function(a){this.quaternion.setfromrotationmatrix(a)},setrotationfromquaternion:function(a){this.quaternion.copy(a)},rotateonaxis:function(){var three.quaternion;return function(b,c){a.setfromaxisangle(b, c);this.quaternion.multiply(a);return this}}(),rotatex:function(){var three.vector3(1,0,0);return function(b){return this.rotateonaxis(a,b)}}(),rotatey:function(){var three.vector3(0,1,0);return this.rotateonaxis(a,b)}}(),rotatez:function(){var three.vector3(0,0,1);return this.rotateonaxis(a,b)}}(),translateonaxis:function(){var three.vector3;return function(b,c){a.copy(b).applyquaternion(this.quaternion);this.position.add(a.multiplyscalar(c)); return this}}(),translate:function(a,b){console.warn("three.object3d: .translate() use .translateonaxis( axis, distance ) instead.");return this.translateonaxis(b,a)},translatex:function(){var this.translateonaxis(a,b)}}(),translatey:function(){var this.translateonaxis(a,b)}}(),translatez:function(){var this.translateonaxis(a, b)}}(),localtoworld:function(a){return a.applymatrix4(this.matrixworld)},worldtolocal:function(){var three.matrix4;return b.applymatrix4(a.getinverse(this.matrixworld))}}(),lookat:function(){var function(b){a.lookat(b,this.position,this.up);this.quaternion.setfromrotationmatrix(a)}}(),add:function(a){if(1<arguments.length){for(var this}if(a="==this)return" console.error("three.object3d.add:", a,"can't be added as child of itself."),this;if(a instanceof three.object3d){void 0!="=a.parent&&a.parent.remove(a);a.parent=this;a.dispatchEvent({type:" added"});this.children.push(a);for(b="this;void" three.scene&&b.__addobject(a)}else console.error("three.object3d.add:",a,"is not an instance three.object3d.");return this},remove:function(a){if(1<arguments.length)for(var if(-1!="=b){a.parent=void" 0;a.dispatchevent({type:"removed"});this.children.splice(b,1);for(b="this;void" three.scene&&b.__removeobject(a)}},raycast:function(){},traverse:function(a){a(this);for(var c="0,d=this.children.length;c<" d;c++){var e="this.children[c];if(e.id===a||!0===b&&(e=e.getObjectById(a,b),void" e}},getobjectbyname:function(a,b){for(var e}},getchildbyname:function(a,b){console.warn("three.object3d: .getchildbyname() renamed .getobjectbyname().");return this.getobjectbyname(a,b)},updatematrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale); this.matrixworldneedsupdate="!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void" three.object3d);void a.position.copy(this.position);a.quaternion.copy(this.quaternion);a.scale.copy(this.scale);a.renderdepth="this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===" b)for(var a}};three.eventdispatcher.prototype.apply(three.object3d.prototype);three.object3didcount="0;" three.projector="function(){function" a(){if(q="==t){var" three.renderablevertex;r.push(a);t++;q++;return a}return r[q++]}function b(){if(p="==w){var" three.renderableface;v.push(a);w++;p++;return v[p++]}function c(){if(d="==x){var" three.renderableline;a.push(a);x++;d++;return a[d++]}function d(){if(i="==y){var" three.renderablesprite;z.push(a);y++;i++;return z[i++]}function e(a,b){return a.z!="=b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function" f(a,b){var 1,e="a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0">e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var g,h,k="[],l=0,n,q,r=[],t=0,s,p,v=[],w=0,u,D,A=[],x=0,C,I,z=[],y=0,K={objects:[],lights:[],elements:[]},N=new" three.vector3,ba="new" three.vector3,p="new" three.vector3,o="new" three.vector3,j="new" three.vector4,e="new" three.box3(new three.vector3(-1, -1,-1),new three.vector3(1,1,1)),q="new" three.box3,l="Array(3),R=new" three.matrix4,b="new" three.matrix4,s,v="new" three.matrix4,w="new" three.matrix3,h="new" three.frustum,oa="new" three.vector4,$="new" three.vector4;this.projectvector="function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);B.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);return" a.applyprojection(b)};this.unprojectvector="function(){var" a="new" three.matrix4;return function(b,c){a.getinverse(c.projectionmatrix);b.multiplymatrices(c.matrixworld, a);return b.applyprojection(b)}}();this.pickingray="function(a,b){a.z=-1;var" c="new" three.vector3(a.x,a.y,1);this.unprojectvector(a,b);this.unprojectvector(c,b);c.sub(a).normalize();return new three.raycaster(a,c)};var x="new" function(){var d="[],e=[],f=null,g=null,h=new" three.matrix3,k="function(a){var" b="a.positionWorld,c=a.positionScreen;b.copy(a.position).applyMatrix4(S);c.copy(b).applyMatrix4(B);b=1/c.w;c.x*=b;c.y*=b;c.z*=b;a.visible=-1<=c.x&&1">=c.x&&-1<=c.y&&1>=c.y&&-1<=c.z&&1>=c.z},l=function(a,
b,c){if(!0===a.visible||!0===b.visible||!0===c.visible)return!0;L[0]=a.positionScreen;L[1]=b.positionScreen;L[2]=c.positionScreen;return E.isIntersectionBox(Q.setFromPoints(L))},q=function(a,b,c){return 0>(c.positionScreen.x-a.positionScreen.x)*(b.positionScreen.y-a.positionScreen.y)-(c.positionScreen.y-a.positionScreen.y)*(b.positionScreen.x-a.positionScreen.x)};return{setObject:function(a){f=a;g=f.material;h.getNormalMatrix(f.matrixWorld);d.length=0;e.length=0},projectVertex:k,checkTriangleVisibility:l,
checkBackfaceCulling:q,pushVertex:function(b,c,d){n=a();n.position.set(b,c,d);k(n)},pushNormal:function(a,b,c){d.push(a,b,c)},pushUv:function(a,b){e.push(a,b)},pushLine:function(a,b){var d=r[a],e=r[b];u=c();u.id=f.id;u.v1.copy(d);u.v2.copy(e);u.z=(d.positionScreen.z+e.positionScreen.z)/2;u.material=f.material;K.elements.push(u)},pushTriangle:function(a,c,k){var n=r[a],p=r[c],t=r[k];if(!1!==l(n,p,t)&&(g.side===THREE.DoubleSide||!0===q(n,p,t))){s=b();s.id=f.id;s.v1.copy(n);s.v2.copy(p);s.v3.copy(t);
s.z=(n.positionScreen.z+p.positionScreen.z+t.positionScreen.z)/3;for(n=0;3>n;n++)p=3*arguments[n],t=s.vertexNormalsModel[n],t.set(d[p],d[p+1],d[p+2]),t.applyMatrix3(h).normalize(),p=2*arguments[n],s.uvs[n].set(e[p],e[p+1]);s.vertexNormalsLength=3;s.material=f.material;K.elements.push(s)}}}};this.projectScene=function(n,t,w,v){I=D=p=0;K.elements.length=0;!0===n.autoUpdate&&n.updateMatrixWorld();void 0===t.parent&&t.updateMatrixWorld();R.copy(t.matrixWorldInverse.getInverse(t.matrixWorld));B.multiplyMatrices(t.projectionMatrix,
R);H.setFromMatrix(B);h=0;K.objects.length=0;K.lights.length=0;n.traverseVisible(function(a){if(a instanceof THREE.Light)K.lights.push(a);else if(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Sprite)if(!1===a.frustumCulled||!0===H.intersectsObject(a)){if(h===l){var b=new THREE.RenderableObject;k.push(b);l++;h++;g=b}else g=k[h++];g.id=a.id;g.object=a;null!==a.renderDepth?g.z=a.renderDepth:(O.setFromMatrixPosition(a.matrixWorld),O.applyProjection(B),g.z=O.z);K.objects.push(g)}});
!0===w&&K.objects.sort(e);n=0;for(w=K.objects.length;n<w;n++){var a="K.objects[n].object,x=A.geometry;X.setObject(A);S=A.matrixWorld;q=0;if(A" instanceof three.mesh)if(x three.buffergeometry){var z="x.attributes,A=x.offsets;if(void" 0!="=z.position){for(var" g="z.position.array,x=0,y=G.length;x<y;x+=3)X.pushVertex(G[x],G[x+1],G[x+2]);if(void" l="z.normal.array,x=0,y=L.length;x<y;x+=3)X.pushNormal(L[x],L[x+1],L[x+2]);if(void" l[x+1]);if(void for(x="0,y=z.length;x<y;x+=3)X.pushTriangle(z[x],z[x+1],z[x+2]);else" three.geometry){var q="x.vertices,y=x.faces,z=x.faceVertexUvs[0];W.getNormalMatrix(S);for(var" three.meshfacematerial,l="!0===G?A.material:null,E=0,ca=" q.length;e<ca;e++){var la="Q[E];X.pushVertex(la.x,la.y,la.z)}Q=0;for(E=y.length;Q<E;Q++){var" ca="y[Q],qa=!0===G?L.materials[ca.materialIndex]:A.material;if(void" ua="qa.side,la=r[ca.a],ja=r[ca.b],Fa=r[ca.c];if(!0===qa.morphTargets){var" va="x.morphTargets,Ka=A.morphTargetInfluences,aa=la.position,ra=ja.position,Da=Fa.position;N.set(0,0,0);ba.set(0,0,0);P.set(0,0,0);for(var" qa="0,cb=va.length;Qa<cb;Qa++){var" ga="Ka[Qa];if(0!==Ga){var" xa="va[Qa].vertices;N.x+=(xa[ca.a].x-aa.x)*Ga;N.y+=(xa[ca.a].y-" aa.y)*ga;n.z+="(xa[ca.a].z-aa.z)*Ga;ba.x+=(xa[ca.b].x-ra.x)*Ga;ba.y+=(xa[ca.b].y-ra.y)*Ga;ba.z+=(xa[ca.b].z-ra.z)*Ga;P.x+=(xa[ca.c].x-Da.x)*Ga;P.y+=(xa[ca.c].y-Da.y)*Ga;P.z+=(xa[ca.c].z-Da.z)*Ga}}la.position.add(N);ja.position.add(ba);Fa.position.add(P);X.projectVertex(la);X.projectVertex(ja);X.projectVertex(Fa)}if(!1!==X.checkTriangleVisibility(la,ja,Fa)){va=X.checkBackfaceCulling(la,ja,Fa);if(ua!==THREE.DoubleSide){if(ua===THREE.FrontSide&&!1===va)continue;if(ua===THREE.BackSide&&!0===va)continue}s=" b();s.id="A.id;s.v1.copy(la);s.v2.copy(ja);s.v3.copy(Fa);s.normalModel.copy(ca.normal);!1!==va||ua!==THREE.BackSide&&ua!==THREE.DoubleSide||s.normalModel.negate();s.normalModel.applyMatrix3(W).normalize();Ka=ca.vertexNormals;aa=0;for(ra=Math.min(Ka.length,3);aa<ra;aa++)Da=s.vertexNormalsModel[aa],Da.copy(Ka[aa]),!1!==va||ua!==THREE.BackSide&&ua!==THREE.DoubleSide||Da.negate(),Da.applyMatrix3(W).normalize();s.vertexNormalsLength=Ka.length;ua=z[Q];if(void">va;va++)s.uvs[va].copy(ua[va]);
s.color=ca.color;s.material=qa;s.z=(la.positionScreen.z+ja.positionScreen.z+Fa.positionScreen.z)/3;K.elements.push(s)}}}}}else if(A instanceof THREE.Line)if(x instanceof THREE.BufferGeometry){if(z=x.attributes,void 0!==z.position){G=z.position.array;x=0;for(y=G.length;x<y;x+=3)x.pushvertex(g[x],g[x+1],g[x+2]);if(void 0!="=z.index)for(z=z.index.array,x=0,y=z.length;x<y;x+=2)X.pushLine(z[x],z[x+1]);else" for(z="A.type===THREE.LinePieces?2:1,x=0,y=G.length/3-1;x<y;x+=z)X.pushLine(x,x+1)}}else{if(x" instanceof three.geometry&&(v.multiplymatrices(b,s),q="A.geometry.vertices,0!==Q.length))for(la=a(),la.positionScreen.copy(Q[0]).applyMatrix4(V),z=A.type===THREE.LinePieces?2:1,E=1,ca=Q.length;E<ca;E++)la=a(),la.positionScreen.copy(Q[E]).applyMatrix4(V),0<(E+1)%z||(ja=r[q-2],oa.copy(la.positionScreen),$.copy(ja.positionScreen),!0===f(oa,$)&&(oa.multiplyScalar(1/oa.w),$.multiplyScalar(1/$.w),u=c(),u.id=A.id,u.v1.positionScreen.copy(oa),u.v2.positionScreen.copy($),u.z=Math.max(oa.z,$.z),u.material=A.material,A.material.vertexColors===" three.vertexcolors&&(u.vertexcolors[0].copy(a.geometry.colors[e]),u.vertexcolors[1].copy(a.geometry.colors[e-1])),k.elements.push(u)))}else a three.sprite&&(j.set(s.elements[12],s.elements[13],s.elements[14],1),j.applymatrix4(b),x="1/J.w,J.z*=x,-1<=J.z&&1">=J.z&&(C=d(),C.id=A.id,C.x=J.x*x,C.y=J.y*x,C.z=J.z,C.object=A,C.rotation=A.rotation,C.scale.x=A.scale.x*Math.abs(C.x-(J.x+t.projectionMatrix.elements[0])/(J.w+t.projectionMatrix.elements[12])),C.scale.y=A.scale.y*Math.abs(C.y-(J.y+t.projectionMatrix.elements[5])/
(J.w+t.projectionMatrix.elements[13])),C.material=A.material,K.elements.push(C)))}!0===v&&K.elements.sort(e);return K}};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.materialIndex=this.materialIndex;for(var b=0,c=this.vertexNormals.length;b<c;b++)a.vertexnormals[b]=this.vertexnormals[b].clone();b=0;for(c=this.vertexcolors.length;b<c;b++)a.vertexcolors[b]=this.vertexcolors[b].clone();b=0;for(c=this.vertextangents.length;b<c;b++)a.vertextangents[b]=this.vertextangents[b].clone();return a}}; three.face4="function(a,b,c,d,e,f,g){console.warn(" three.face4" has been removed. a three.face3 will be created instead.");return new three.face3(a,b,c,e,f,g)};three.bufferattribute="function(a,b){this.array=a;this.itemSize=b};" three.bufferattribute.prototype="{constructor:THREE.BufferAttribute,get" length(){return this.array.length},set:function(a){this.array.set(a);return this},setx:function(a,b){this.array[a*this.itemsize]="b;return" this},sety:function(a,b){this.array[a*this.itemsize+1]="b;return" this},setz:function(a,b){this.array[a*this.itemsize+2]="b;return" this},setxy:function(a,b,c){a*="this.itemSize;this.array[a]=b;this.array[a+1]=c;return" this},setxyz:function(a,b,c,d){a*="this.itemSize;this.array[a]=b;this.array[a+1]=" c;this.array[a+2]="d;return" this},setxyzw:function(a,b,c,d,e){a*="this.itemSize;this.array[a]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return" this}};three.int8attribute="function(a,b){console.warn(" three.int8attribute" use three.bufferattribute( array, itemsize ) three.bufferattribute(a,b)}; three.uint8attribute="function(a,b){console.warn(" three.uint8attribute" three.bufferattribute(a,b)};three.uint8clampedattribute="function(a,b){console.warn(" three.uint8clampedattribute" three.int16attribute="function(a,b){console.warn(" three.int16attribute" three.bufferattribute(a,b)};three.uint16attribute="function(a,b){console.warn(" three.uint16attribute" three.int32attribute="function(a,b){console.warn(" three.int32attribute" three.bufferattribute(a,b)};three.uint32attribute="function(a,b){console.warn(" three.uint32attribute" three.float32attribute="function(a,b){console.warn(" three.float32attribute" three.bufferattribute(a,b)};three.float64attribute="function(a,b){console.warn(" three.float64attribute" three.buffergeometry="function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name=" ";this.attributes="{};this.offsets=this.drawcalls=[];this.boundingSphere=this.boundingBox=null};" " three.buffergeometry.prototype="{constructor:THREE.BufferGeometry,addAttribute:function(a,b,c){!1===b" instanceof three.bufferattribute?(console.warn("three.buffergeometry: .addattribute() now expects ( name, attribute )."),this.attributes[a]="{array:b,itemSize:c}):this.attributes[a]=b},getAttribute:function(a){return" this.attributes[a]},adddrawcall:function(a,b,c){this.drawcalls.push({start:a,count:b,index:void 0!="=c?c:0})},applyMatrix:function(a){var" b="this.attributes.position;void" b.needsupdate="!0);b=this.attributes.normal;void" three.matrix3).getnormalmatrix(a).applytovector3array(b.array),b.needsupdate="!0)},fromGeometry:function(a,b){b=b||{vertexColors:THREE.NoColors};var" c="a.vertices,d=a.faces,e=a.faceVertexUvs,f=b.vertexColors,g=0<e[0].length,h=3==d[0].vertexNormals.length,k=new" float32array(9*d.length);this.addattribute("position",new three.bufferattribute(k,3));var l="new" float32array(9*d.length);this.addattribute("normal",new three.bufferattribute(l,3));if(f!="=" three.nocolors){var n="new" float32array(9*d.length);this.addattribute("color",new three.bufferattribute(n,3))}if(!0="==g){var" q="new" float32array(6*d.length);this.addattribute("uvs",new three.bufferattribute(q,2))}for(var r="0,t=0,s=0;r<d.length;r++,t+=6,s+=9){var" p="d[r],v=c[p.a],w=c[p.b],u=c[p.c];k[s]=v.x;k[s+1]=v.y;k[s+2]=v.z;k[s+3]=w.x;k[s+4]=w.y;k[s+5]=w.z;k[s+6]=u.x;k[s+7]=u.y;k[s+8]=u.z;!0===h?(v=p.vertexNormals[0],w=p.vertexNormals[1],u=p.vertexNormals[2],l[s]=v.x,l[s+1]=v.y,l[s+2]=v.z,l[s+3]=" w.x,l[s+4]="w.y,l[s+5]=w.z,l[s+6]=u.x,l[s+7]=u.y,l[s+8]=u.z):(v=p.normal,l[s]=v.x,l[s+1]=v.y,l[s+2]=v.z,l[s+3]=v.x,l[s+4]=v.y,l[s+5]=v.z,l[s+6]=v.x,l[s+7]=v.y,l[s+8]=v.z);f===THREE.FaceColors?(p=p.color,n[s]=p.r,n[s+1]=p.g,n[s+2]=p.b,n[s+3]=p.r,n[s+4]=p.g,n[s+5]=p.b,n[s+6]=p.r,n[s+7]=p.g,n[s+8]=p.b):f===THREE.VertexColors&&(v=p.vertexColors[0],w=p.vertexColors[1],p=p.vertexColors[2],n[s]=v.r,n[s+1]=v.g,n[s+2]=v.b,n[s+3]=w.r,n[s+4]=w.g,n[s+5]=w.b,n[s+6]=p.r,n[s+7]=p.g,n[s+8]=p.b);!0===g&&(p=e[0][r][0]," v="e[0][r][1],w=e[0][r][2],q[t]=p.x,q[t+1]=p.y,q[t+2]=v.x,q[t+3]=v.y,q[t+4]=w.x,q[t+5]=w.y)}this.computeBoundingSphere();return" this},computeboundingbox:function(){null="==this.boundingBox&&(this.boundingBox=new" three.box3);var e="a[c],f=a[c+1],g=a[c+2];e<b.min.x?b.min.x=e:e">b.max.x&&(b.max.x=e);f<b.min.y?b.min.y=f:f>b.max.y&&
(b.max.y=f);g<b.min.z?b.min.z=g:g>b.max.z&&(b.max.z=g)}}if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0);(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')},computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&
(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),a.expandbypoint(b);a.center(d);for(var 0="==this.attributes.normal)this.attributes.normal={itemSize:3,array:new" g="0,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere():" computed radius is nan. the "position" attribute likely to have nan values.')}}}(), computefacenormals:function(){},computevertexnormals:function(){if(this.attributes.position){var a,b,c,d;a="this.attributes.position.array.length;if(void" float32array(a)};else for(a="0,b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0;var" e="this.attributes.position.array,f=this.attributes.normal.array,g,h,k,l,n,q,r=new" three.vector3,t="new" three.vector3,s="new" three.vector3,p="new" three.vector3,v="new" three.vector3; if(this.attributes.index){var w="this.attributes.index.array,u=0<this.offsets.length?this.offsets:[{start:0,count:w.length,index:0}];c=0;for(d=u.length;c<d;++c){b=u[c].start;g=u[c].count;var" d="u[c].index;a=b;for(b+=g;a<b;a+=3)g=D+w[a],h=D+w[a+1],k=D+w[a+2],l=e[3*g],n=e[3*g+1],q=e[3*g+2],r.set(l,n,q),l=e[3*h],n=e[3*h+1],q=e[3*h+2],t.set(l,n,q),l=e[3*k],n=e[3*k+1],q=e[3*k+2],s.set(l,n,q),p.subVectors(s,t),v.subVectors(r,t),p.cross(v),f[3*g]+=p.x,f[3*g+1]+=p.y,f[3*g+2]+=p.z,f[3*h]+=p.x,f[3*h+1]+=p.y," f[3*h+2]+="p.z,f[3*k]+=p.x,f[3*k+1]+=p.y,f[3*k+2]+=p.z}}else" a(a,b,c){q="d[3*a];r=d[3*a+1];t=d[3*a+2];s=d[3*b];p=d[3*b+1];v=d[3*" b+2];w="d[3*c];u=d[3*c+1];D=d[3*c+2];A=f[2*a];x=f[2*a+1];C=f[2*b];I=f[2*b+1];z=f[2*c];y=f[2*c+1];K=s-q;N=w-q;ba=p-r;P=u-r;O=v-t;J=D-t;E=C-A;Q=z-A;L=I-x;R=y-x;B=1/(E*R-Q*L);S.set((R*K-L*N)*B,(R*ba-L*P)*B,(R*O-L*J)*B);V.set((E*N-Q*K)*B,(E*P-Q*ba)*B,(E*J-Q*O)*B);k[a].add(S);k[b].add(S);k[c].add(S);l[a].add(V);l[b].add(V);l[c].add(V)}function" b(a){za.x="e[3*a];za.y=e[3*a+1];za.z=e[3*a+2];Oa.copy(za);G=k[a];Ea.copy(G);Ea.sub(za.multiplyScalar(za.dot(G))).normalize();Aa.crossVectors(Oa,G);Ba=Aa.dot(l[a]);" pa="0">Ba?-1:1;h[4*a]=Ea.x;h[4*a+1]=Ea.y;h[4*a+2]=Ea.z;h[4*a+3]=Pa}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var c=this.attributes.index.array,d=this.attributes.position.array,e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent=
{itemSize:4,array:new Float32Array(4*g)});for(var h=this.attributes.tangent.array,k=[],l=[],n=0;n<g;n++)k[n]=new 0="==a&&(b=65535);Date.now();a=this.attributes.index.array;for(var" three.vector3,l[n]="new" three.vector3;var q,r,t,s,p,v,w,u,d,a,x,c,i,z,y,k,n,ba,p,o,j,e,q,l,r,b,s="new" three.vector3,v="new" three.vector3,w,h,oa,$,x,t="this.offsets,n=0;for(H=T.length;n<H;++n){W=T[n].start;oa=T[n].count;var" ya="T[n].index,g=W;for(W+=oa;g<W;g+=3)oa=ya+c[g],$=ya+c[g+1],X=ya+c[g+2],a(oa,$,X)}var" ea="new" three.vector3,aa="new" three.vector3,za="new" three.vector3,oa="new" three.vector3, pa,g,ba,n="0;for(H=T.length;n<H;++n)for(W=T[n].start,oa=T[n].count,ya=T[n].index,g=W,W+=oa;g<W;g+=3)oa=ya+c[g],$=ya+c[g+1],X=ya+c[g+2],b(oa),b($),b(X)}},computeOffsets:function(a){var" b="a;void" c="this.attributes.position.array,d=a.length/3,e=new" uint16array(a.length),f="0,g=0,h=[{start:0,count:0,index:0}],k=h[0],l=0,n=0,q=new" int32array(6),r="new" int32array(c.length),t="new" int32array(c.length),s="0;s<c.length;s++)r[s]=-1,t[s]=-1;for(c=0;c<" d;c++){for(var p="n=0;3">p;p++)s=a[3*c+p],-1==r[s]?(q[2*p]=s,q[2*p+1]=-1,n++):r[s]<k.index?(q[2*p]=s,q[2*p+1]=-1,l++):(q[2*p]=s,q[2*p+1]=r[s]);if(g+n>k.index+b)for(k={start:f,count:0,index:g},h.push(k),n=0;6>n;n+=2)p=q[n+1],-1<p&&p<k.index&&(q[n+1]=-1);for(n=0;6>n;n+=2)s=q[n],p=q[n+1],-1===p&&(p=g++),r[s]=p,t[p]=s,e[f++]=p-k.index,k.count++}this.reorderBuffers(e,t,g);return this.offsets=h},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var a=this.attributes.normal.array,
b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1 math.sqrt(b*b+c*c+d*d),a[e]*="b,a[e+1]*=b,a[e+2]*=b},reorderBuffers:function(a,b,c){var" d="{},e=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],f;for(f" in this.attributes)if("index"!="f)for(var" g="this.attributes[f].array,h=0,k=e.length;h<k;h++){var" l="e[h];if(g" instanceof l){d[f]="new" l(this.attributes[f].itemsize*c);break}}for(e="0;e<c;e++)for(f" f)for(var h="this.attributes[f].array,k=this.attributes[f].itemSize,l=d[f],n=0;n<k;n++)l[e*k+n]=h[g*k+n];this.attributes.index.array=a;for(f" this.attributes)"index"!="f&&(this.attributes[f].array=d[f],this.attributes[f].numItems=this.attributes[f].itemSize*c)},clone:function(){var" a="new" three.buffergeometry,b="[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],c;for(c" this.attributes){for(var array:null},d="0,g=b.length;d<g;d++){var" h){f.array="new" h(e);break}}a.attributes[c]="f}d=0;for(g=this.offsets.length;d<g;d++)b=this.offsets[d],a.offsets.push({start:b.start,index:b.index,count:b.count});return" a},dispose:function(){this.dispatchevent({type:"dispose"})}};three.eventdispatcher.prototype.apply(three.buffergeometry.prototype); three.geometry="function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name=" ";this.vertices="[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.groupsNeedUpdate=this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=" " this.uvsneedupdate="this.elementsNeedUpdate=this.verticesNeedUpdate=!1};" three.geometry.prototype="{constructor:THREE.Geometry,applyMatrix:function(a){for(var" b="(new" three.matrix3).getnormalmatrix(a),c="0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var" e="0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}this.boundingBox" three.box3&&this.computeboundingbox();this.boundingsphere three.sphere&&this.computeboundingsphere()}, center:function(){this.computeboundingbox();var three.vector3;a.addvectors(this.boundingbox.min,this.boundingbox.max);a.multiplyscalar(-0.5);this.applymatrix((new three.matrix4).maketranslation(a.x,a.y,a.z));this.computeboundingbox();return a},computefacenormals:function(){for(var three.vector3,b="new" three.vector3,c="0,d=this.faces.length;c<d;c++){var" e.normal.copy(a)}},computevertexnormals:function(a){var b,c,d;d="Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)d[b]=new" three.vector3;if(a){var e,f,g,h="new" three.vector3,k="new" three.vector3;new three.vector3;a="0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),k.subVectors(e,f),h.cross(k),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else" for(a="0,b=this.faces.length;a<" b;a++)c="this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.vertexNormals[0]=d[c.a].clone(),c.vertexNormals[1]=d[c.b].clone(),c.vertexNormals[2]=d[c.c].clone()},computeMorphNormals:function(){var" a,b,c,d,e;c="0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||" (e.__originalvertexnormals="[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var" f="new" three.geometry;f.faces="this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var" 0;for(d="this.faces.length;c<d;c++)h=new" three.vector3,b:new three.vector3,c:new three.vector3},e.push(h),g.push(k)}g="this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(e.normal),k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=" e.__originalfacenormal,e.vertexnormals="e.__originalVertexNormals},computeTangents:function(){var" a,b,c,d,e,f,g,h,k,l,n,q,r,t,s,p,v,w="[],u=[];c=new" three.vector3;var three.vector3,a="new" three.vector3,x="new" three.vector3,u[a]="new" v),d="x.dot(u[d]),d=0">d?-1:1,e.vertexTangents[c]=new THREE.Vector4(A.x,A.y,A.z,d);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceto(b[c-1])),this.linedistances[c]=a},computeboundingbox:function(){null===this.boundingbox&&(this.boundingbox=new 0="==c&&(c=0);void" three.box3);this.boundingbox.setfrompoints(this.vertices)},computeboundingsphere:function(){null="==this.boundingSphere&&(this.boundingSphere=new" three.sphere);this.boundingsphere.setfrompoints(this.vertices)}, merge:function(a,b,c){if(!1="==a" instanceof three.geometry)console.error("three.geometry.merge(): geometry not an instance of three.geometry.",a);else{var d,e="this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void" 0!="=b&&(d=(new" three.matrix3).getnormalmatrix(b));for(var n="0,q=g.length;n<q;n++){var" r="g[n].clone();void" g="k[n],t,s=g.vertexNormals,p=" g.vertexcolors,r="new" three.face3(g.a+e,g.b+e,g.c+e);r.normal.copy(g.normal);void three.vector2(c[b].x,c[b].y));l.push(d)}}},mergevertices:function(){var a="{},b=[],c=[],d,e=Math.pow(10,4),f,g;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=Math.round(d.x*e)+" _"+math.round(d.y*e)+"_"+math.round(d.z*e),void">d;d++)if(e[d]==e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,g=this.facevertexuvs.length;c<g;c++)this.facevertexuvs[c].splice(e, 1);f="this.vertices.length-b.length;this.vertices=b;return" f},makegroups:function(){var a="0;return" function(b,c){var d,e,f,g,h="{},k,l=this.morphTargets.length,n=this.morphNormals.length;this.geometryGroups={};this.geometryGroupsList=[];d=0;for(e=this.faces.length;d<e;d++)f=this.faces[d],f=b?f.materialIndex:0,f" in h||(h[f]="{hash:f,counter:0}),g=h[f].hash+" _"+h[f].counter,g" this.geometrygroups||(k="{id:a++,faces3:[],materialIndex:f,vertices:0,numMorphTargets:l,numMorphNormals:n},this.geometryGroups[g]=" k,this.geometrygroupslist.push(k)),this.geometrygroups[g].vertices+3>c&&(h[f].counter+=1,g=h[f].hash+"_"+h[f].counter,g in this.geometryGroups||(k={id:a++,faces3:[],materialIndex:f,vertices:0,numMorphTargets:l,numMorphNormals:n},this.geometryGroups[g]=k,this.geometryGroupsList.push(k))),this.geometryGroups[g].faces3.push(d),this.geometryGroups[g].vertices+=3}}(),clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d= 0="==a&&(a=new" b.length;c<d;c++)a.faces.push(b[c].clone());b="this.faceVertexUvs[0];c=0;for(d=b.length;c<d;c++){for(var" e="b[c],f=[],g=0,h=e.length;g<h;g++)f.push(new" three.vector2(e[g].x,e[g].y));a.facevertexuvs[0].push(f)}return a},dispose:function(){this.dispatchevent({type:"dispose"})}};three.eventdispatcher.prototype.apply(three.geometry.prototype);three.geometryidcount="0;THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new" three.matrix4;this.projectionmatrix="new" three.matrix4}; three.camera.prototype="Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var" a="new" three.matrix4;return function(b){a.lookat(this.position,b,this.up);this.quaternion.setfromrotationmatrix(a)}}();three.camera.prototype.clone="function(a){void" three.camera);three.object3d.prototype.clone.call(this,a);a.matrixworldinverse.copy(this.matrixworldinverse);a.projectionmatrix.copy(this.projectionmatrix);return a}; three.cubecamera="function(a,b,c){THREE.Object3D.call(this);var" d="new" three.perspectivecamera(90,1,a,b);d.up.set(0,-1,0);d.lookat(new three.vector3(1,0,0));this.add(d);var three.perspectivecamera(90,1,a,b);e.up.set(0,-1,0);e.lookat(new three.vector3(-1,0,0));this.add(e);var f="new" three.perspectivecamera(90,1,a,b);f.up.set(0,0,1);f.lookat(new three.vector3(0,1,0));this.add(f);var g="new" three.perspectivecamera(90,1,a,b);g.up.set(0,0,-1);g.lookat(new three.vector3(0,-1,0));this.add(g);var h="new" three.perspectivecamera(90, 1,a,b);h.up.set(0,-1,0);h.lookat(new three.vector3(0,0,1));this.add(h);var k="new" three.perspectivecamera(90,1,a,b);k.up.set(0,-1,0);k.lookat(new three.vector3(0,0,-1));this.add(k);this.rendertarget="new" three.webglrendertargetcube(c,c,{format:three.rgbformat,magfilter:three.linearfilter,minfilter:three.linearfilter});this.updatecubemap="function(a,b){var" c="this.renderTarget,r=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=" 2;a.render(b,f,c);c.activecubeface="3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=r;c.activeCubeFace=5;a.render(b,k,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void" 0!="=e?e:0.1;this.far=void" three.orthographiccamera.prototype.updateprojectionmatrix="function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var" three.orthographiccamera;three.camera.prototype.clone.call(this,a);a.left="this.left;a.right=this.right;a.top=this.top;a.bottom=this.bottom;a.near=this.near;a.far=this.far;return" three.perspectivecamera="function(a,b,c,d){THREE.Camera.call(this);this.fov=void" three.perspectivecamera.prototype.setviewoffset="function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};" three.perspectivecamera.prototype.updateprojectionmatrix="function(){if(this.fullWidth){var" this.projectionmatrix.makeperspective(this.fov,this.aspect,this.near,this.far)}; three.perspectivecamera.prototype.clone="function(){var" three.perspectivecamera;three.camera.prototype.clone.call(this,a);a.fov="this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;return" a};three.light="function(a){THREE.Object3D.call(this);this.color=new" three.color(a)};three.light.prototype="Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(a){void" three.light);three.object3d.prototype.clone.call(this,a);a.color.copy(this.color);return three.ambientlight="function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var" three.ambientlight;three.light.prototype.clone.call(this,a);return three.arealight="function(a,b){THREE.Light.call(this,a);this.normal=new" three.vector3(0,-1,0);this.right="new" three.vector3(1,0,0);this.intensity="void" three.directionallight="function(a,b){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new" three.object3d;this.intensity="void" three.vector3(0, 0,-1e3);this.shadowcascadecount="2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);" three.directionallight.prototype.clone="function(){var" three.directionallight;three.light.prototype.clone.call(this,a);a.target="this.target.clone();a.intensity=this.intensity;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraLeft=this.shadowCameraLeft;a.shadowCameraRight=this.shadowCameraRight;a.shadowCameraTop=this.shadowCameraTop;a.shadowCameraBottom=this.shadowCameraBottom;a.shadowCameraVisible=" this.shadowcameravisible;a.shadowbias="this.shadowBias;a.shadowDarkness=this.shadowDarkness;a.shadowMapWidth=this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;a.shadowCascade=this.shadowCascade;a.shadowCascadeOffset.copy(this.shadowCascadeOffset);a.shadowCascadeCount=this.shadowCascadeCount;a.shadowCascadeBias=this.shadowCascadeBias.slice(0);a.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);a.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);a.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);" a.shadowcascadefarz="this.shadowCascadeFarZ.slice(0);return" a};three.hemispherelight="function(a,b,c){THREE.Light.call(this,a);this.position.set(0,100,0);this.groundColor=new" three.color(b);this.intensity="void" three.hemispherelight;three.light.prototype.clone.call(this,a);a.groundcolor.copy(this.groundcolor);a.intensity="this.intensity;return" three.pointlight="function(a,b,c){THREE.Light.call(this,a);this.intensity=void" three.pointlight;three.light.prototype.clone.call(this,a);a.intensity="this.intensity;a.distance=this.distance;return" three.spotlight="function(a,b,c,d,e){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new" this.shadowmap="null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);" three.spotlight.prototype.clone="function(){var" three.spotlight;three.light.prototype.clone.call(this,a);a.target="this.target.clone();a.intensity=this.intensity;a.distance=this.distance;a.angle=this.angle;a.exponent=this.exponent;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;a.shadowCameraNear=this.shadowCameraNear;a.shadowCameraFar=this.shadowCameraFar;a.shadowCameraFov=this.shadowCameraFov;a.shadowCameraVisible=this.shadowCameraVisible;a.shadowBias=this.shadowBias;a.shadowDarkness=" this.shadowdarkness;a.shadowmapwidth="this.shadowMapWidth;a.shadowMapHeight=this.shadowMapHeight;return" a};three.cache="function(){this.files={}};THREE.Cache.prototype={constructor:THREE.Cache,add:function(a,b){this.files[a]=b},get:function(a){return" this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files="{}}};" three.loader="function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new" three.imageloader;this.onloadstart="function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};" three.loader.prototype="{constructor:THREE.Loader,crossOrigin:void" 0,addstatuselement:function(){var 0.5em 0.5em";a.style.zindex="1E3;a.innerHTML=" loading" ...";return a},updateprogress:function(a){var b="Loaded " ,b="a.total?b+((100*a.loaded/a.total).toFixed(0)+" "%"):b+((a.loaded 1024).tofixed(2)+" kb");this.statusdomelement.innerhtml="b},extractUrlBase:function(a){a=a.split(" ");if(1="==a.length)return" . ";a.pop();return"" a.join(" ")+" "},initmaterials:function(a,b){for(var c},needstangents:function(a){for(var three.shadermaterial)return!0;return!1},creatematerial:function(a,b){function c(a){a="Math.log(a)/Math.LN2;return" math.pow(2,math.round(a))}function d(a, d,e,g,h,k,p){var v="b+e,w,u=THREE.Loader.Handlers.get(v);null!==u?w=u.load(v):(w=new" three.texture,u="f.imageLoader,u.crossOrigin=f.crossOrigin,u.load(v,function(a){if(!1===THREE.Math.isPowerOfTwo(a.width)||!1===THREE.Math.isPowerOfTwo(a.height)){var" w.image="a;w.needsUpdate=!0}));w.sourceFile=e;g&&(w.repeat.set(g[0],g[1]),1!==g[0]&&(w.wrapS=THREE.RepeatWrapping)," 1!="=g[1]&&(w.wrapT=THREE.RepeatWrapping));h&&w.offset.set(h[0],h[1]);k&&(e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void" e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var "basic"="==k&&(g=" meshbasicmaterial")}void">a.opacity)h.transparent=a.transparent;void 0!==a.depthTest&&(h.depthTest=a.depthTest);void 0!==a.depthWrite&&(h.depthWrite=a.depthWrite);void 0!==a.visible&&(h.visible=a.visible);void 0!==a.flipSided&&(h.side=THREE.BackSide);void 0!==a.doubleSided&&(h.side=THREE.DoubleSide);void 0!==a.wireframe&&(h.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===
a.vertexColors?h.vertexColors=THREE.FaceColors:a.vertexColors&&(h.vertexColors=THREE.VertexColors));a.colorDiffuse?h.color=e(a.colorDiffuse):a.DbgColor&&(h.color=a.DbgColor);a.colorSpecular&&(h.specular=e(a.colorSpecular));a.colorAmbient&&(h.ambient=e(a.colorAmbient));a.colorEmissive&&(h.emissive=e(a.colorEmissive));a.transparency&&(h.opacity=a.transparency);a.specularCoef&&(h.shininess=a.specularCoef);a.mapDiffuse&&b&&d(h,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,
a.mapDiffuseAnisotropy);a.mapLight&&b&&d(h,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&d(h,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&d(h,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&d(h,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapAlpha&&
b&&d(h,"alphaMap",a.mapAlpha,a.mapAlphaRepeat,a.mapAlphaOffset,a.mapAlphaWrap,a.mapAlphaAnisotropy);a.mapBumpScale&&(h.bumpScale=a.mapBumpScale);a.mapNormal?(g=THREE.ShaderLib.normalmap,k=THREE.UniformsUtils.clone(g.uniforms),k.tNormal.value=h.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),h.map&&(k.tDiffuse.value=h.map,k.enableDiffuse.value=!0),h.specularMap&&(k.tSpecular.value=h.specularMap,k.enableSpecular.value=!0),h.lightMap&&(k.tAO.value=h.lightMap,
k.enableAO.value=!0),k.diffuse.value.setHex(h.color),k.specular.value.setHex(h.specular),k.ambient.value.setHex(h.ambient),k.shininess.value=h.shininess,void 0!==h.opacity&&(k.opacity.value=h.opacity),g=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:k,lights:!0,fog:!0}),h.transparent&&(g.transparent=!0)):g=new THREE[g](h);void 0!==a.DbgName&&(g.name=a.DbgName);return g}};
THREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=0,c=this.handlers.length;b<c;b+=2){var d="this.handlers[b+1];if(this.handlers[b].test(a))return" d}return null}};three.xhrloader="function(a){this.cache=new" three.cache;this.manager="void" 0!="=a?a:THREE.DefaultLoadingManager};" three.xhrloader.prototype="{constructor:THREE.XHRLoader,load:function(a,b,c,d){var" e="this,f=e.cache.get(a);void" xmlhttprequest,f.open("get",a,!0),f.addeventlistener("load",function(c){e.cache.add(a,this.response);b&&b(this.response);e.manager.itemend(a)},!1),void this.responsetype),f.send(null),e.manager.itemstart(a))},setresponsetype:function(a){this.responsetype="a},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.ImageLoader=function(a){this.cache=new" three.imageloader.prototype="{constructor:THREE.ImageLoader,load:function(a,b,c,d){var" return f="document.createElement(" img"),void" a}};three.jsonloader="function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&" string"="==typeof" " c?c:this.extracturlbase(a);this.onloadstart();this.loadajaxjson(this,a,b,c)}; three.jsonloader.prototype.loadajaxjson="function(a,b,c,d,e){var" xmlhttprequest,g="0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var" h="JSON.parse(f.responseText);if(void" "'+b+'" seems to be a scene. use three.sceneloader instead.');return}h="a.parse(h,d);c(h.geometry,h.materials)}else" console.error('three.jsonloader: unreachable or the file is empty.'); a.onloadcomplete()}else console.error("three.jsonloader: couldn't load \""+b+'" ('+f.status+")");else f.readystate="==f.LOADING?e&&(0===g&&(g=f.getResponseHeader(" content-length")),e({total:g,loaded:f.responsetext.length})):f.readystate="==f.HEADERS_RECEIVED&&void" three.jsonloader.prototype.parse="function(a,b){var" c="new" three.geometry,d="void" d,g,h,k,l,n,q,r,t,s,p,v,w,u="a.faces;n=a.vertices;var" three.vector3,d.x="n[k++]*b,d.y=n[k++]*b,d.z=n[k++]*b,c.vertices.push(d);k=0;for(l=u.length;k<l;)if(b=u[k++],t=b&1,h=b&2,d=b&8,q=b&16,s=b&32,n=b&64,b&=128,t){t=new" three.face3; t.a="u[k];t.b=u[k+1];t.c=u[k+3];p=new" three.face3;p.a="u[k+1];p.b=u[k+2];p.c=u[k+3];k+=4;h&&(h=u[k++],t.materialIndex=h,p.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<x;d++)for(v=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],g=0;4">g;g++)r=u[k++],w=v[2*r],r=v[2*r+1],w=new THREE.Vector2(w,r),2!==g&&c.faceVertexUvs[d][h].push(w),0!==g&&c.faceVertexUvs[d][h+1].push(w);q&&(q=3*u[k++],t.normal.set(D[q++],D[q++],D[q]),p.normal.copy(t.normal));if(s)for(d=0;4>d;d++)q=3*u[k++],s=new THREE.Vector3(D[q++],
D[q++],D[q]),2!==d&&t.vertexNormals.push(s),0!==d&&p.vertexNormals.push(s);n&&(n=u[k++],n=A[n],t.color.setHex(n),p.color.setHex(n));if(b)for(d=0;4>d;d++)n=u[k++],n=A[n],2!==d&&t.vertexColors.push(new THREE.Color(n)),0!==d&&p.vertexColors.push(new THREE.Color(n));c.faces.push(t);c.faces.push(p)}else{t=new THREE.Face3;t.a=u[k++];t.b=u[k++];t.c=u[k++];h&&(h=u[k++],t.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<x;d++)for(v=a.uvs[d],c.facevertexuvs[d][h]=[],g=0;3>g;g++)r=u[k++],w=v[2*r],r=v[2*r+1],
w=new THREE.Vector2(w,r),c.faceVertexUvs[d][h].push(w);q&&(q=3*u[k++],t.normal.set(D[q++],D[q++],D[q]));if(s)for(d=0;3>d;d++)q=3*u[k++],s=new THREE.Vector3(D[q++],D[q++],D[q]),t.vertexNormals.push(s);n&&(n=u[k++],t.color.setHex(A[n]));if(b)for(d=0;3>d;d++)n=u[k++],t.vertexColors.push(new THREE.Color(A[n]));c.faces.push(t)}})(d);(function(){var b=void 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,g=a.skinWeights.length;d<g;d+=b)c.skinweights.push(new 0="==a.materials||0===a.materials.length)return{geometry:c};d=this.initMaterials(a.materials,b);this.needsTangents(d)&&c.computeTangents();return{geometry:c,materials:d}};" three.vector4(a.skinweights[d], 1<b?a.skinweights[d+1]:0,2<b?a.skinweights[d+2]:0,3<b?a.skinweights[d+3]:0));if(a.skinindices)for(d="0,g=a.skinIndices.length;d<g;d+=b)c.skinIndices.push(new" three.vector4(a.skinindices[d],1<b?a.skinindices[d+1]:0,2<b?a.skinindices[d+2]:0,3<b?a.skinindices[d+3]:0));c.bones="a.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&console.warn(" when" skinning, number of vertices ("+c.vertices.length+"), skinindices ("+c.skinindices.length+ "), and skinweights ("+c.skinweights.length+") should match.");c.animation="a.animation;c.animations=a.animations})();(function(b){if(void" 0!="=a.morphTargets){var" d,g,h,k,l,n;d="0;for(g=a.morphTargets.length;d<g;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=a.morphTargets[d].name,c.morphTargets[d].vertices=[],l=c.morphTargets[d].vertices,n=a.morphTargets[d].vertices,h=0,k=n.length;h<k;h+=3){var" q="new" three.vector3;q.x="n[h]*b;q.y=n[h+1]*b;q.z=n[h+2]*b;l.push(q)}}if(void" 0,g="a.morphColors.length;d<g;d++)for(c.morphColors[d]={},c.morphColors[d].name=a.morphColors[d].name,c.morphColors[d].colors=[],k=c.morphColors[d].colors,l=a.morphColors[d].colors,b=0,h=l.length;b<h;b+=3)n=new" three.color(16755200),n.setrgb(l[b],l[b+1],l[b+2]),k.push(n)})(d);c.computefacenormals();c.computeboundingsphere();if(void three.loadingmanager="function(a,b,c){var" d="this,e=0,f=0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){f++};this.itemEnd=function(a){e++;if(void" three.loadingmanager;three.buffergeometryloader="function(a){this.manager=void" three.buffergeometryloader.prototype="{constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var" e="this,f=new" three.xhrloader;f.setcrossorigin(this.crossorigin);f.load(a,function(a){b(e.parse(json.parse(a)))},c,d)},setcrossorigin:function(a){this.crossorigin="a},parse:function(a){var" b="new" three.buffergeometry,c="a.attributes,d;for(d" in c){var self[e.type](e.array)}}c="a.offsets;void" void three.sphere((new three.vector3).fromarray(void b}};three.materialloader="function(a){this.manager=void" three.materialloader.prototype="{constructor:THREE.MaterialLoader,load:function(a,b,c,d){var" three[a.type];void (b.shininess="a.shininess);void" c="0,d=a.materials.length;c<d;c++)b.materials.push(this.parse(a.materials[c]));return" b}};three.objectloader="function(a){this.manager=void" three.objectloader.prototype="{constructor:THREE.ObjectLoader,load:function(a,b,c,d){var" three.xhrloader(e.manager);f.setcrossorigin(this.crossorigin);f.load(a,function(a){b(e.parse(json.parse(a)))},c,d)},setcrossorigin:function(a){this.crossorigin="a},parse:function(a){var" this.parseobject(a.object,b,c)},parsegeometries:function(a){var three.jsonloader,d="new" three.buffergeometryloader, g,h="a[e];switch(h.type){case" "planegeometry":g="new" three.planegeometry(h.width,h.height,h.widthsegments,h.heightsegments);break;case "boxgeometry":case "cubegeometry":g="new" three.boxgeometry(h.width,h.height,h.depth,h.widthsegments,h.heightsegments,h.depthsegments);break;case "circlegeometry":g="new" three.circlegeometry(h.radius,h.segments);break;case "cylindergeometry":g="new" three.cylindergeometry(h.radiustop,h.radiusbottom,h.height,h.radialsegments,h.heightsegments,h.openended); break;case "spheregeometry":g="new" three.spheregeometry(h.radius,h.widthsegments,h.heightsegments,h.phistart,h.philength,h.thetastart,h.thetalength);break;case "icosahedrongeometry":g="new" three.icosahedrongeometry(h.radius,h.detail);break;case "torusgeometry":g="new" three.torusgeometry(h.radius,h.tube,h.radialsegments,h.tubularsegments,h.arc);break;case "torusknotgeometry":g="new" three.torusknotgeometry(h.radius,h.tube,h.radialsegments,h.tubularsegments,h.p,h.q,h.heightscale);break;case "buffergeometry":g="d.parse(h.data);break;case" "geometry":g="c.parse(h.data).geometry}g.uuid=h.uuid;void" b},parsematerials:function(a){var three.materialloader,d="0,e=a.length;d<e;d++){var" f="a[d],g=c.parse(f);g.uuid=f.uuid;void" b},parseobject:function(){var a="new" three.matrix4;return function(b,c,d){var e;switch(b.type){case "scene":e="new" three.scene;break;case "perspectivecamera":e="new" three.perspectivecamera(b.fov, b.aspect,b.near,b.far);break;case "orthographiccamera":e="new" three.orthographiccamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case "ambientlight":e="new" three.ambientlight(b.color);break;case "directionallight":e="new" three.directionallight(b.color,b.intensity);break;case "pointlight":e="new" three.pointlight(b.color,b.intensity,b.distance);break;case "spotlight":e="new" three.spotlight(b.color,b.intensity,b.distance,b.angle,b.exponent);break;case "hemispherelight":e="new" three.hemispherelight(b.color, b.groundcolor,b.intensity);break;case "mesh":e="c[b.geometry];var" undefined geometry "+b.geometry);void material "+b.material);e="new" three.mesh(e,f);break;case "sprite":f="d[b.material];void" three.sprite(f);break;default:e="new" three.object3d}e.uuid="b.uuid;void" (a.fromarray(b.matrix),a.decompose(e.position,e.quaternion,e.scale)):(void g b.children)e.add(this.parseobject(b.children[g],c,d));return e}}()};three.textureloader="function(a){this.manager=void" three.textureloader.prototype="{constructor:THREE.TextureLoader,load:function(a,b,c,d){var" three.imageloader(this.manager);e.setcrossorigin(this.crossorigin);e.load(a,function(a){a="new" three.texture(a);a.needsupdate="!0;void" three.material="function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name=" ";this.side="THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};" " three.material.prototype="{constructor:THREE.Material,setValues:function(a){if(void" a){var '"+b+"' parameter is undefined.");else if(b this){var instanceof three.color?d.set(c):d three.vector3&&c three.vector3?d.copy(c):this[b]="overdraw" =="b?Number(c):c}}},clone:function(a){void" three.material);a.name="this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;" a.blending="this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return" a},dispose:function(){this.dispatchevent({type:"dispose"})}};three.eventdispatcher.prototype.apply(three.material.prototype); three.materialidcount="0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new" three.color(16777215);this.linewidth="1;this.linejoin=this.linecap=" round";this.vertexcolors="THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);" three.linebasicmaterial.prototype.clone="function(){var" three.linebasicmaterial;three.material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth="this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return" a};three.linedashedmaterial="function(a){THREE.Material.call(this);this.color=new" three.color(16777215);this.scale="this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};" three.linedashedmaterial.prototype="Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var" three.linedashedmaterial;three.material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth="this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return" a}; three.meshbasicmaterial="function(a){THREE.Material.call(this);this.color=new" three.color(16777215);this.envmap="this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=" three.meshbasicmaterial.prototype="Object.create(THREE.Material.prototype);" three.meshbasicmaterial.prototype.clone="function(){var" three.meshbasicmaterial;three.material.prototype.clone.call(this,a);a.color.copy(this.color);a.map="this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;" a.wireframelinejoin="this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return" three.meshlambertmaterial="function(a){THREE.Material.call(this);this.color=new" three.color(16777215);this.ambient="new" three.color(16777215);this.emissive="new" three.color(0);this.wraparound="!1;this.wrapRGB=new" three.vector3(1,1,1);this.envmap="this.alphaMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=" "round";this.vertexcolors="THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);" three.meshlambertmaterial.prototype.clone="function(){var" three.meshlambertmaterial;three.material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wraparound="this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;" a.shading="this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return" three.meshphongmaterial="function(a){THREE.Material.call(this);this.color=new" three.color(0);this.specular="new" three.color(1118481);this.shininess="30;this.wrapAround=this.metal=!1;this.wrapRGB=new" three.vector3(1,1,1);this.bumpmap="this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new" three.vector2(1,1);this.envmap="this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=" 1;this.refractionratio="0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=" three.meshphongmaterial.prototype.clone="function(){var" three.meshphongmaterial;three.material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess="this.shininess;a.metal=this.metal;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);" a.specularmap="this.specularMap;a.alphaMap=this.alphaMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return" three.meshdepthmaterial="function(a){THREE.Material.call(this);this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var" three.meshdepthmaterial;three.material.prototype.clone.call(this,a);a.wireframe="this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return" three.meshnormalmaterial="function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var" three.meshnormalmaterial;three.material.prototype.clone.call(this,a);a.shading="this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return" three.meshfacematerial="function(a){this.materials=a" array?a:[]};three.meshfacematerial.prototype.clone="function(){for(var" three.meshfacematerial,b="0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return" a};three.pointcloudmaterial="function(a){THREE.Material.call(this);this.color=new" three.color(16777215);this.map="null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);" three.pointcloudmaterial.prototype.clone="function(){var" three.pointcloudmaterial;three.material.prototype.clone.call(this,a);a.color.copy(this.color);a.map="this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return" a};three.particlebasicmaterial="function(a){console.warn(" three.particlebasicmaterial" has been renamed to three.pointcloudmaterial.");return new three.pointcloudmaterial(a)}; three.particlesystemmaterial="function(a){console.warn(" three.particlesystemmaterial" three.shadermaterial="function(a){THREE.Material.call(this);this.defines={};this.uniforms={};this.attributes=null;this.vertexShader=" void" main() {\n\tgl_position="projectionMatrix" * modelviewmatrix vec4( position, 1.0 );\n}";this.fragmentshader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}" ;this.shading="THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=" !1;this.defaultattributevalues="{color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void" 0;this.setvalues(a)};three.shadermaterial.prototype="Object.create(THREE.Material.prototype);" three.shadermaterial.prototype.clone="function(){var" three.shadermaterial;three.material.prototype.clone.call(this,a);a.fragmentshader="this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=" this.morphtargets;a.morphnormals="this.morphNormals;return" a};three.rawshadermaterial="function(a){THREE.ShaderMaterial.call(this,a)};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.clone=function(){var" three.rawshadermaterial;three.shadermaterial.prototype.clone.call(this,a);return a};three.spritematerial="function(a){THREE.Material.call(this);this.color=new" three.spritematerial.prototype="Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var" three.spritematerial;three.material.prototype.clone.call(this,a);a.color.copy(this.color);a.map="this.map;a.rotation=this.rotation;a.fog=this.fog;return" a};three.spritecanvasmaterial="function(a){THREE.Material.call(this);this.color=new" three.color(16777215);this.program="function(a,c){};this.setValues(a)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);" three.spritecanvasmaterial.prototype.clone="function(){var" three.spritecanvasmaterial;three.material.prototype.clone.call(this,a);a.color.copy(this.color);a.program="this.program;return" a};three.particlecanvasmaterial="THREE.SpriteCanvasMaterial;" three.texture="function(a,b,c,d,e,f,g,h,k){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name=" ";this.image="void" g?g:three.rgbaformat;this.type="void" three.vector2(0,0);this.repeat="new" three.vector2(1,1);this.generatemipmaps="!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void" 0;three.texture.default_mapping="new" three.uvmapping; three.texture.prototype="{constructor:THREE.Texture,get" needsupdate(){return this._needsupdate},set needsupdate(a){!0="==a&&this.update();this._needsUpdate=a},clone:function(a){void" three.texture);a.image="this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=" this.generatemipmaps;a.premultiplyalpha="this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return" a},update:function(){this.dispatchevent({type:"update"})},dispose:function(){this.dispatchevent({type:"dispose"})}};three.eventdispatcher.prototype.apply(three.texture.prototype);three.textureidcount="0;THREE.CubeTexture=function(a,b,c,d,e,f,g,h,k){THREE.Texture.call(this,a,b,c,d,e,f,g,h,k);this.images=a};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);" three.cubetexture.clone="function(a){void" three.cubetexture);three.texture.prototype.clone.call(this,a);a.images="this.images;return" a};three.compressedtexture="function(a,b,c,d,e,f,g,h,k,l,n){THREE.Texture.call(this,null,f,g,h,k,l,d,e,n);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);" three.compressedtexture.prototype.clone="function(){var" three.compressedtexture;three.texture.prototype.clone.call(this,a);return a};three.datatexture="function(a,b,c,d,e,f,g,h,k,l,n){THREE.Texture.call(this,null,f,g,h,k,l,d,e,n);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var" three.datatexture;three.texture.prototype.clone.call(this,a);return three.pointcloud="function(a,b){THREE.Object3D.call(this);this.geometry=void" three.geometry;this.material="void" three.pointcloudmaterial({color:16777215*math.random()});this.sortparticles="!1};THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype);" three.pointcloud.prototype.raycast="function(){var" three.matrix4,b="new" three.ray;return function(c,d){var h="g/((this.scale.x+this.scale.y+this.scale.z)/3),k=new" three.vector3,g="function(a,f){var" k="b.closestPointToPoint(a);k.applyMatrix4(e.matrixWorld);var" l="c.ray.origin.distanceTo(k);" d.push({distance:l,distancetoray:g,point:k.clone(),index:f,face:null,object:e})}};if(f three.buffergeometry){var r="0,t=q.length;r<t;++r)for(var" s="q[r].start,p=q[r].index,f=s,s=s+q[r].count;f<s;f++){var" v="p+l[f];k.set(n[3*v],n[3*v+1],n[3*v+2]);g(k,v)}}else" for(l="n.length/3,f=0;f<l;f++)k.set(n[3*f],n[3*f+1],n[3*f+2]),g(k,f)}else" for(k="this.geometry.vertices," three.pointcloud(this.geometry,this.material));a.sortparticles="this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return" a};three.particlesystem="function(a,b){console.warn(" three.particlesystem" three.pointcloud.");return three.pointcloud(a,b)}; three.line="function(a,b,c){THREE.Object3D.call(this);this.geometry=void" three.linebasicmaterial({color:16777215*math.random()});this.type="void" three.line.prototype.raycast="function(){var" three.ray,c="new" three.sphere;return function(d,e){var three.geometry))for(var three.vector3,l="new" three.vector3,n="this.type===THREE.LineStrip?" 1:2,q="0;q<h-1;q+=n)if(!(b.distanceSqToSegment(g[q],g[q+1],l,k)">f)){var r=b.origin.distanceTo(l);r<d.near||r>d.far||e.push({distance:r,point:k.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}();THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphtargets.length){this.morphtargetbase=-1;this.morphtargetforcedorder=[];this.morphtargetinfluences=[];this.morphtargetdictionary={};for(var a="0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};" three.mesh.prototype.getmorphtargetindexbyname="function(a){if(void" 0!="=this.morphTargetDictionary[a])return" this.morphtargetdictionary[a];console.log("three.mesh.getmorphtargetindexbyname: morph target "+a+" does not exist. returning 0.");return 0}; three.mesh.prototype.raycast="function(){var" three.matrix4,b="new" three.ray,c="new" three.sphere,d="new" three.vector3,e="new" three.vector3,f="new" three.vector3;return function(g,h){var k="this.geometry;null===k.boundingSphere&&k.computeBoundingSphere();c.copy(k.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==g.ray.isIntersectionSphere(c)&&(a.getInverse(this.matrixWorld),b.copy(g.ray).applyMatrix4(a),null===k.boundingBox||!1!==b.isIntersectionBox(k.boundingBox)))if(k" instanceof three.buffergeometry){var l="this.material;if(void" n="k.attributes,q,r,t=g.precision;if(void" s="n.index.array,p=n.position.array,v=k.offsets;0===v.length&&(v=[{start:0,count:s.length,index:0}]);for(var" w="0,u=v.length;w<u;++w)for(var" x="l.side===THREE.BackSide?b.intersectTriangle(f,e,d,!0):b.intersectTriangle(d,e,f,l.side!==" three.doubleside);if(null!="=x){x.applyMatrix4(this.matrixWorld);var" c="g.ray.origin.distanceTo(x);C<t||C<g.near||C">g.far||h.push({distance:C,point:x,indices:[n,q,r],face:null,faceIndex:null,object:this})}}}else for(p=n.position.array,s=k=0,A=p.length;k<a;k+=3,s+=9)n=k,q=k+1,r=k+2,d.set(p[s],p[s+1],p[s+2]),e.set(p[s+3],p[s+4],p[s+5]),f.set(p[s+6],p[s+7],p[s+8]),x=l.side===three.backside?b.intersecttriangle(f,e,d,!0):b.intersecttriangle(d,e,f,l.side!==three.doubleside),null!==x&&(x.applymatrix4(this.matrixworld), c="g.ray.origin.distanceTo(x),C<t||C<g.near||C">g.far||h.push({distance:C,point:x,indices:[n,q,r],face:null,faceIndex:null,object:this}))}}else if(k instanceof THREE.Geometry)for(s=this.material instanceof THREE.MeshFaceMaterial,p=!0===s?this.material.materials:null,t=g.precision,v=k.vertices,w=0,u=k.faces.length;w<u;w++)if(d=k.faces[w],l=!0===s?p[d.materialindex]:this.material,void 0!="=l){n=v[D.a];q=v[D.b];r=v[D.c];if(!0===l.morphTargets){x=k.morphTargets;C=this.morphTargetInfluences;d.set(0,0,0);" e.set(0,0,0);f.set(0,0,0);for(var a="0,I=x.length;A<I;A++){var" z="C[A];if(0!==z){var" y="x[A].vertices;d.x+=(y[D.a].x-n.x)*z;d.y+=(y[D.a].y-n.y)*z;d.z+=(y[D.a].z-n.z)*z;e.x+=(y[D.b].x-q.x)*z;e.y+=(y[D.b].y-q.y)*z;e.z+=(y[D.b].z-q.z)*z;f.x+=(y[D.c].x-r.x)*z;f.y+=(y[D.c].y-r.y)*z;f.z+=(y[D.c].z-r.z)*z}}d.add(n);e.add(q);f.add(r);n=d;q=e;r=f}x=l.side===THREE.BackSide?b.intersectTriangle(r,q,n,!0):b.intersectTriangle(n,q,r,l.side!==THREE.DoubleSide);null!==x&&(x.applyMatrix4(this.matrixWorld),C=g.ray.origin.distanceTo(x)," c<t||c<g.near||c>g.far||h.push({distance:C,point:x,face:D,faceIndex:w,object:this}))}}}();THREE.Mesh.prototype.clone=function(a,b){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a,b);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.updateMatrixWorld=function(a){THREE.Object3D.prototype.updateMatrixWorld.call(this,a);this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0};
THREE.Skeleton=function(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.bonematrices=new 0="==b)this.calculateInverses();else" float32array(this.bonetexturewidth*this.bonetextureheight*4),this.bonetexture="new" three.datatexture(this.bonematrices,this.bonetexturewidth,this.bonetextureheight,three.rgbaformat,three.floattype), this.bonetexture.minfilter="THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new" float32array(16*this.bones.length);if(void if(this.bones.length="==b.length)this.boneInverses=b.slice(0);else" for(console.warn("three.skeleton boninverses is the wrong length."),this.boneinverses="[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new" three.matrix4)}; three.skeleton.prototype.calculateinverses="function(){this.boneInverses=[];for(var" a="0,b=this.bones.length;a<b;a++){var" c="new" three.matrix4;this.bones[a]&&c.getinverse(this.bones[a].matrixworld);this.boneinverses.push(c)}}; three.skeleton.prototype.pose="function(){for(var" a,b="0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)};" three.skeleton.prototype.update="function(){for(var" three.matrix4,b="0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};" three.skinnedmesh="function(a,b,c){THREE.Mesh.call(this,a,b);this.bindMode=" attached";this.bindmatrix="new" " three.matrix4;this.bindmatrixinverse="new" three.matrix4;a="[];if(this.geometry&&void" 0!="=this.geometry.bones){for(var" d,e,f,g,h="0,k=this.geometry.bones.length;h<k;++h)d=this.geometry.bones[h],e=d.pos,f=d.rotq,g=d.scl,b=new" three.bone(this),a.push(b),b.name="d.name,b.position.set(e[0],e[1],e[2]),b.quaternion.set(f[0],f[1],f[2],f[3]),void" this.geometry.bones.length;h<k;++h)d="this.geometry.bones[h],-1!==d.parent?a[d.parent].add(a[h]):this.add(a[h])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new" three.skeleton(a,void 0,c))};three.skinnedmesh.prototype="Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;void" three.skinnedmesh.prototype.normalizeskinweights="function(){if(this.geometry" instanceof three.geometry)for(var b="this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};" three.skinnedmesh.prototype.updatematrixworld="function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);" attached"="==this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):" detached"="==this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh""" unreckognized bindmode: "+this.bindmode)}; three.skinnedmesh.prototype.clone="function(a){void" three.skinnedmesh(this.geometry,this.material,this.usevertextexture));three.mesh.prototype.clone.call(this,a);return a};three.morphanimmesh="function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);" three.morphanimmesh.prototype.setframerange="function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};" three.morphanimmesh.prototype.parseanimations="function(){var" b,c="a.animations,d=/([a-z]+)_?(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var" g="a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var" h="c[g];e<h.start&&(h.start=e);e">h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=(c.end-c.start)/b*1E3,this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.interpolateTargets=function(a,b,c){for(var d=this.morphTargetInfluences,e=0,f=d.length;e<f;e++)d[e]=0;-1<a&&(d[a]=1-c);-1<b&&(d[b]=c)}; 0="==a&&(a=new" three.morphanimmesh.prototype.clone="function(a){void" three.morphanimmesh(this.geometry,this.material));a.duration="this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return" a};three.lod="function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);" three.lod.prototype.addlevel="function(a,b){void" c="0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var" b="1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return" this.objects[b-1].object}; three.lod.prototype.raycast="function(){var" a="new" three.vector3;return function(b,c){a.setfrommatrixposition(this.matrixworld);var d="b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}();" three.lod.prototype.update="function(){var" three.vector3,b="new" function(c){if(1<this.objects.length){a.setfrommatrixposition(c.matrixworld);b.setfrommatrixposition(this.matrixworld);c="a.distanceTo(b);this.objects[0].object.visible=!0;for(var">=this.objects[d].distance)this.objects[d-1].object.visible=!1,this.objects[d].object.visible=!0;else break;for(;d<e;d++)this.objects[d].object.visible=!1}}}(); 0="==a&&(a=new" three.lod.prototype.clone="function(a){void" three.lod);three.object3d.prototype.clone.call(this,a);for(var b="0,c=this.objects.length;b<c;b++){var" d="this.objects[b].object.clone();d.visible=0===b;a.addLevel(d,this.objects[b].distance)}return" a}; three.sprite="function(){var" a="new" float32array([-0.5,-0.5,0,0.5,-0.5,0,0.5,0.5,0]),b="new" three.buffergeometry;b.addattribute("position",new three.bufferattribute(a,3));return function(a){three.object3d.call(this);this.geometry="b;this.material=void" 0!="=a?a:new" three.spritematerial}}();three.sprite.prototype="Object.create(THREE.Object3D.prototype);" three.sprite.prototype.raycast="function(){var" three.vector3;return function(b,c){a.setfrommatrixposition(this.matrixworld);var>this.scale.x||c.push({distance:d,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Particle=THREE.Sprite;THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)){this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}this.dispatchEvent({type:"objectAdded",object:a});a.dispatchEvent({type:"addedToScene",scene:this});for(b=0;b<a.children.length;b++)this.__addobject(a.children[b])}; 0="==a&&(a=new" three.scene.prototype.__removeobject="function(a){if(a" instanceof three.light){var b="this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1);if(a.shadowCascadeArray)for(b=0;b<a.shadowCascadeArray.length;b++)this.__removeObject(a.shadowCascadeArray[b])}else" a three.camera||(this.__objectsremoved.push(a),b="this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1));this.dispatchEvent({type:" objectremoved",object:a});a.dispatchevent({type:"removedfromscene",scene:this});for(b=" 0;b<a.children.length;b++)this.__removeobject(a.children[b])};three.scene.prototype.clone=" function(a){void" three.scene);three.object3d.prototype.clone.call(this,a);null!="=this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return" a};three.fog="function(a,b,c){this.name=" ";this.color="new" " three.color(a);this.near="void" 0!="=b?b:1;this.far=void" three.fog.prototype.clone="function(){return" new three.fog(this.color.gethex(),this.near,this.far)};three.fogexp2="function(a,b){this.name=" three.color(a);this.density="void" three.fogexp2(this.color.gethex(),this.density)}; three.canvasrenderer="function(a){function" b(a,b,c,d){l(b);n(c);q(d);r(a.getstyle());o.stroke();ra.expandbyscalar(2*b)}function c(a){t(a.getstyle());o.fill()}function d(a){e(a.target)}function e(a){if(!(a three.compressedtexture)){var f="e.getContext(" 2d");f.settransform(1,0,0,-1,0,d.height);f.drawimage(d,0,0);ca[a.id]="O.createPattern(e,!0===" b&&!0="==c?" repeat":!0="==b&&!1===c?" repeat-x":!1="==b&&!0===c?"repeat-y":"no-repeat")}}function""" f(a,b,c,f,g,h,k,l,n,r,q,s,p){if(!(p three.datatexture)){!1="==p.hasEventListener(" update",d)&&(void" m="Ca[p.id];if(void" p="n*s-q*r;0!==p&&(m=1/p,p=(s*c-r*g)*m,r=(s*f-r*h)*m,c=(n*g-q*c)*m,f=(n*h-q*f)*m,a=a-p*k-c*l,b=b-r*k-f*l,O.save(),O.transform(p,r,c,f,a,b),O.fill(),O.restore())}else" t("rgba(0,0,0,1)"),o.fill()}}function g(a,b,c){var d="b.x-a.x,e=b.y-a.y,f=d*d+e*e;0!==f&&(c/=Math.sqrt(f),d*=c,e*=c,b.x+=d,b.y+=e,a.x-=d,a.y-=e)}function" h(a){q!="=a&&(Q=O.globalAlpha=a)}function" k(a){l!="=a&&(a===THREE.NormalBlending?O.globalCompositeOperation=" source-over":a="==THREE.AdditiveBlending?O.globalCompositeOperation=" lighter":"" l(a){s!="=a&&(S=O.lineWidth=a)}function" n(a){v!="=a&&(V=O.lineCap=a)}function" q(a){w!="=a&&(W=O.lineJoin=a)}function" r(a){r!="=a&&(R=O.strokeStyle=a)}function" t(a){b!="=a&&(B=O.fillStyle=a)}function" s(a){h.length!="=a.length&&(O.setLineDash(a),H=a)}console.log(" three.canvasrenderer",three.revision);var" v="this,w,u,D,A=new" three.projector,x="void" c="x.width,I=x.height,z=Math.floor(C/2),y=Math.floor(I/2),K=0,N=0,ba=C,P=I,O=x.getContext(" 2d",{alpha:!0="==a.alpha}),J=new" three.color(0),e="0,Q=1,L=0,R=null,B=null,S=null,V=null,W=null,H=[],oa,$,X,T;new" three.renderablevertex;new three.renderablevertex;var ya,ea,aa,za,oa,pa,g="new" three.color;new three.color;var ba="new" three.color,ya="new" three.color,za="new" three.color,ca="{},ca,la,qa,ua,ja,Fa,va,Ka=new" three.box2,aa="new" three.box2,ra="new" three.box2,da="new" three.color,qa="new" three.color,cb="new" three.color,ga="new" three.vector3,xa="new" three.vector3,ma="new" three.vector3,ja="new" three.matrix3;void function(a,b,c){c="a*this.devicePixelRatio;I=b*this.devicePixelRatio;x.width=C;x.height=I;z=Math.floor(C/2);y=Math.floor(I/2);!1!==c&&(x.style.width=a+" px",x.style.height="b+" px");ka.min.set(-z,-y);ka.max.set(z,y);aa.min.set(-z,-y);aa.max.set(z,y);q="1;L=0;W=V=S=B=R=null;this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){K=a*this.devicePixelRatio;N=b*this.devicePixelRatio;ba=c*this.devicePixelRatio;P=d*this.devicePixelRatio};this.setScissor=function(){};this.enableScissorTest=function(){};""" this.setclearcolor="function(a,b){J.set(a);E=void" .setclearcolorhex() is being removed. use .setclearcolor() instead.");this.setclearcolor(a,b)};this.getclearcolor="function(){return" j};this.getclearalpha="function(){return" e};this.getmaxanisotropy="function(){return" 0};this.clear="function(){!1===aa.empty()&&(aa.intersect(Ka),aa.expandByScalar(2),aa.min.x+=z,aa.min.y=-aa.min.y+y,aa.max.x+=" z,aa.max.y="-aa.max.y+y,1">E&&O.clearRect(aa.min.x|0,aa.min.y|0,aa.max.x-aa.min.x|0,aa.max.y-aa.min.y|0),0<e&&(k(three.normalblending),h(1),t("rgba("+math.floor(255*j.r)+","+math.floor(255*j.g)+","+math.floor(255*j.b)+","+e+")"),o.fillrect(aa.min.x|0,aa.min.y|0,aa.max.x-aa.min.x|0,aa.max.y-aa.min.y|0)),aa.makeempty())};this.clearcolor=function(){};this.cleardepth=function(){};this.clearstencil=function(){};this.render=function(a,x){if(!1===x 1 instanceof three.camera)console.error("three.canvasrenderer.render: camera is not an instance of three.camera."); else{!0="==this.autoClear&&this.clear();v.info.render.vertices=0;v.info.render.faces=0;O.setTransform(ba/C,0,0,-P/I,K,I-N);O.translate(z,y);w=A.projectScene(a,x,this.sortObjects,this.sortElements);u=w.elements;D=w.lights;oa=x;Ja.getNormalMatrix(x.matrixWorldInverse);Da.setRGB(0,0,0);Qa.setRGB(0,0,0);cb.setRGB(0,0,0);for(var" l="0,Q=D.length;L<Q;L++){var" e="D[L],H=E.color;E" three.ambientlight?da.add(h):e three.directionallight?qa.add(h):e three.pointlight&&cb.add(h)}l="0;for(Q=u.length;L<Q;L++){var" j="u[L],B=J.material;if(void" 0!="=B&&0!==B.opacity){ra.makeEmpty();if(J" three.renderablesprite){$="J;$.x*=z;$.y*=y;var" ea="R.scale.x*z,R=R.scale.y*y,J=0.5*Math.sqrt(ea*ea+R*R);ra.min.set(E.x-J,E.y-J);ra.max.set(E.x+J,E.y+J);if(H" three.spritematerial){var da="H.map;if(null!==da&&void" j?t(j):t("rgba( 0, )");var s="da.image,J=S.width*da.offset.x,B=S.height*da.offset.y,V=S.width*da.repeat.x,da=S.height*da.repeat.y,S=ea/V,m=R/da;O.save();O.translate(E.x,E.y);0!==H.rotation&&O.rotate(H.rotation);O.translate(-ea/2,-R/2);O.scale(S,m);O.translate(-J,-B);O.fillRect(J,B,V,da)}else" t(h.color.getstyle()),o.save(),o.translate(e.x,e.y),0!="=H.rotation&&O.rotate(H.rotation),O.scale(ea,-R),O.fillRect(-0.5,-0.5,1,1);O.restore()}else" h three.spritecanvasmaterial&&(r(h.color.getstyle()), if(j three.renderableline){if($="J.v1,X=J.v2,$.positionScreen.x*=z,$.positionScreen.y*=y,X.positionScreen.x*=z,X.positionScreen.y*=y,ra.setFromPoints([$.positionScreen,X.positionScreen]),!0===Ka.isIntersectionBox(ra))if(E=$,H=X,ea=J,R=B,h(R.opacity),k(R.blending),O.beginPath(),O.moveTo(E.positionScreen.x,E.positionScreen.y),O.lineTo(H.positionScreen.x,H.positionScreen.y)," r three.linebasicmaterial){l(r.linewidth);n(r.linecap);q(r.linejoin);if(r.vertexcolors!="=THREE.VertexColors)r(R.color.getStyle());else" w="O.createLinearGradient(E.positionScreen.x,E.positionScreen.y,H.positionScreen.x,H.positionScreen.y);W.addColorStop(0,J);W.addColorStop(1,ea)}catch(xb){W=J}r(W)}O.stroke();ra.expandByScalar(2*R.linewidth)}else" three.linedashedmaterial&&(l(r.linewidth), n(r.linecap),q(r.linejoin),r(r.color.getstyle()),s([r.dashsize,r.gapsize]),o.stroke(),ra.expandbyscalar(2*r.linewidth),s([]))}else three.renderableface){$="J.v1;X=J.v2;T=J.v3;if(-1">$.positionScreen.z||1<$.positionscreen.z)continue;if(-1>X.positionScreen.z||1<x.positionscreen.z)continue;if(-1>T.positionScreen.z||1<t.positionscreen.z)continue;$.positionscreen.x*=z;$.positionscreen.y*=y;x.positionscreen.x*=z;x.positionscreen.y*=y;t.positionscreen.x*=z;t.positionscreen.y*=y;0<b.overdraw&& (g($.positionscreen,x.positionscreen,b.overdraw),g(x.positionscreen,t.positionscreen,b.overdraw),g(t.positionscreen,$.positionscreen,b.overdraw));ra.setfrompoints([$.positionscreen,x.positionscreen,t.positionscreen]);if(!0="==Ka.isIntersectionBox(ra)){H=$;ea=X;R=T;E=B;v.info.render.vertices+=3;v.info.render.faces++;h(E.opacity);k(E.blending);ya=H.positionScreen.x;Ea=H.positionScreen.y;Aa=ea.positionScreen.x;za=ea.positionScreen.y;Oa=R.positionScreen.x;Pa=R.positionScreen.y;var" b="ya,V=Ea,da=Aa,S=za," m="Oa,Ta=Pa;O.beginPath();O.moveTo(B,V);O.lineTo(da,S);O.lineTo(m,Ta);O.closePath();if((E" instanceof three.meshlambertmaterial||e three.meshphongmaterial)&&null="==E.map){Ba.copy(E.color);Ya.copy(E.emissive);E.vertexColors===THREE.FaceColors&&Ba.multiply(J.color);G.copy(Da);xa.copy(H.positionWorld).add(ea.positionWorld).add(R.positionWorld).divideScalar(3);H=xa;ea=J.normalModel;R=G;J=0;for(B=D.length;J<B;J++)V=D[J],Za.copy(V.color),V" three.directionallight?(da="Ga.setFromMatrixPosition(V.matrixWorld).normalize()," s="ea.dot(da),0">=S||(S*=V.intensity,R.add(Za.multiplyScalar(S)))):V instanceof THREE.PointLight&&(da=Ga.setFromMatrixPosition(V.matrixWorld),S=ea.dot(Ga.subVectors(da,H).normalize()),0>=S||(S*=0==V.distance?1:1-Math.min(H.distanceTo(da)/V.distance,1),0!=S&&(S*=V.intensity,R.add(Za.multiplyScalar(S)))));G.multiply(Ba).add(Ya);!0===E.wireframe?b(G,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):c(G)}else E instanceof THREE.MeshBasicMaterial||E instanceof THREE.MeshLambertMaterial||E instanceof
THREE.MeshPhongMaterial?null!==E.map?E.map.mapping instanceof THREE.UVMapping&&(ca=J.uvs,f(ya,Ea,Aa,za,Oa,Pa,ca[0].x,ca[0].y,ca[1].x,ca[1].y,ca[2].x,ca[2].y,E.map)):null!==E.envMap?E.envMap.mapping instanceof THREE.SphericalReflectionMapping?(ma.copy(J.vertexNormalsModel[0]).applyMatrix3(Ja),la=0.5*ma.x+0.5,qa=0.5*ma.y+0.5,ma.copy(J.vertexNormalsModel[1]).applyMatrix3(Ja),ua=0.5*ma.x+0.5,ja=0.5*ma.y+0.5,ma.copy(J.vertexNormalsModel[2]).applyMatrix3(Ja),Fa=0.5*ma.x+0.5,va=0.5*ma.y+0.5,f(ya,Ea,Aa,za,
Oa,Pa,la,qa,ua,ja,Fa,va,E.envMap)):E.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(ma.copy(J.vertexNormalsModel[0]).applyMatrix3(Ja),la=-0.5*ma.x+0.5,qa=-0.5*ma.y+0.5,ma.copy(J.vertexNormalsModel[1]).applyMatrix3(Ja),ua=-0.5*ma.x+0.5,ja=-0.5*ma.y+0.5,ma.copy(J.vertexNormalsModel[2]).applyMatrix3(Ja),Fa=-0.5*ma.x+0.5,va=-0.5*ma.y+0.5,f(ya,Ea,Aa,za,Oa,Pa,la,qa,ua,ja,Fa,va,E.envMap)):(G.copy(E.color),E.vertexColors===THREE.FaceColors&&G.multiply(J.color),!0===E.wireframe?b(G,E.wireframeLinewidth,
E.wireframeLinecap,E.wireframeLinejoin):c(G)):(E instanceof THREE.MeshDepthMaterial?G.r=G.g=G.b=1-p(H.positionScreen.z*H.positionScreen.w,oa.near,oa.far):E instanceof THREE.MeshNormalMaterial?(ma.copy(J.normalModel).applyMatrix3(Ja),G.setRGB(ma.x,ma.y,ma.z).multiplyScalar(0.5).addScalar(0.5)):G.setRGB(1,1,1),!0===E.wireframe?b(G,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):c(G))}}aa.union(ra)}}O.setTransform(1,0,0,1,0,0)}}};THREE.ShaderChunk={};
THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif";
THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.default_vertex="vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n\tmvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;";
THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n";
THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif";THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tvec3 pointDiffuse = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tvec3 spotDiffuse = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n\t\t\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tvec3 dirDiffuse = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tvec3 hemiDiffuse = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\themiDiffuse += diffuse * hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif";
THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif";THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif";
THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\tuniform samplerCube envMap;\n\tuniform float flipEnvMap;\n\tuniform int combine;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tuniform bool useRefract;\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";
THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n";
THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n";THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif";THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif";
THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif";THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\t#ifdef GAMMA_INPUT\n\n\t\ttexelColor.xyz *= texelColor.xyz;\n\n\t#endif\n\n\tgl_FragColor = gl_FragColor * texelColor;\n\n#endif";THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif";
THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif";THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\t#ifdef GAMMA_INPUT\n\n\t\tvColor = color * color;\n\n\t#else\n\n\t\tvColor = color;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n";
THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\tuniform bool useRefract;\n\n#endif\n";THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif";THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif";THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n";
THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\tvec3 reflectVec;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n\t\tif ( useRefract ) {\n\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t} else { \n\n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t}\n\n\t#else\n\n\t\treflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#else\n\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#endif\n\n\t#ifdef GAMMA_INPUT\n\n\t\tcubeColor.xyz *= cubeColor.xyz;\n\n\t#endif\n\n\tif ( combine == 1 ) {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n\t} else if ( combine == 2 ) {\n\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n\t} else {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n\t}\n\n#endif";
THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif";
THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif";THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif";
THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif";
THREE.ShaderChunk.defaultnormal_vertex="vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n\tobjectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n\tobjectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n\tobjectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;";
THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;";
THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";
THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif";THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif";THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif";THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif";
THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tif ( useRefract ) {\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t} else {\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t}\n\n#endif";
THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowcoord.y>= 0.0, shadowCoord.y <= 1 1.0 );\n\t\tbool infrustum="all(" infrustumvec );\n\n\t\t\t\t don't shadow pixels outside of light frustum\n\t\t\t\t use just first frustum (for cascades)\n\t\t\t\t behind far plane frustum\n\n\t\t#ifdef shadowmap_cascade\n\n\t\t\tinfrustumcount +="int(" );\n\t\t\tbvec3 frustumtestvec="bvec3(" infrustum, infrustumcount="=" 1, shadowcoord.z <="1.0" );\n\n\t\t#else\n\n\t\t\tbvec2 );\n\n\t\t#endif\n\n\t\tbool frustumtest="all(" );\n\n\t\tif ( ) {\n\n\t\t\tshadowcoord.z i ];\n\n\t\t\t#if defined( shadowmap_type_pcf )\n\n\t\t\t\t\t\t percentage-close filtering\n\t\t\t\t\t\t (9 pixel kernel)\n\t\t\t\t\t\t http: fabiensanglard.net shadowmappingpcf \n\n\t\t\t\tfloat nested loops breaks shader compiler validator on some ati cards when using opengl\n\t\t\t\t\t\t must enroll loop manually\n\n\t\t\t\tfor float y="-1.25;" )\n\t\t\t\t\tfor x="-1.25;" {\n\n\t\t\t\t\t\tvec4 rgbadepth="texture2D(" shadowmap[ ], vec2( * xpixeloffset, ypixeloffset shadowcoord.xy );\n\n\t\t\t\t\t\t\t\t doesn't seem to produce any noticeable visual difference compared simple texture2d lookup\n\t\t\t\t\t\t\t\t vec4 vec4( vshadowcoord[ ].w ), 0.05, );\n\n\t\t\t\t\t\tfloat fdepth="unpackDepth(" );\n\n\t\t\t\t\t\tif )\n\t\t\t\t\t\t\tshadow="9.0;\n\n\t\t*" \n\n\t\t\t\tconst shadowdelta="1.0" 9.0;\n\n\t\t\t\tfloat xpixeloffset="1.0" shadowmapsize[ ].x;\n\t\t\t\tfloat ].y;\n\n\t\t\t\tfloat dx0="-1.25" xpixeloffset;\n\t\t\t\tfloat dy0="-1.25" ypixeloffset;\n\t\t\t\tfloat dx1="1.25" dy1="1.25" ypixeloffset;\n\n\t\t\t\tfdepth="unpackDepth(" texture2d( dx0, );\n\t\t\t\tif unpackdepth( 0.0, dx1, 0.0 shadowcolor vec3( - shadowdarkness[ ] );\n\n\t\t\t#elif shadowmap_type_pcf_soft ypixeloffset;\n\n\t\t\t\tmat3 shadowkernel;\n\t\t\t\tmat3 depthkernel;\n\n\t\t\t\tdepthkernel[0][0]="unpackDepth(" );\n\t\t\t\tdepthkernel[0][1]="unpackDepth(" );\n\t\t\t\tdepthkernel[0][2]="unpackDepth(" );\n\t\t\t\tdepthkernel[1][0]="unpackDepth(" );\n\t\t\t\tdepthkernel[1][1]="unpackDepth(" );\n\t\t\t\tdepthkernel[1][2]="unpackDepth(" );\n\t\t\t\tdepthkernel[2][0]="unpackDepth(" );\n\t\t\t\tdepthkernel[2][1]="unpackDepth(" );\n\t\t\t\tdepthkernel[2][2]="unpackDepth(" );\n\n\t\t\t\tvec3 shadowz="vec3(" );\n\t\t\t\tshadowkernel[0]="vec3(lessThan(depthKernel[0]," ));\n\t\t\t\tshadowkernel[0] vec3(lessthan(depthkernel[1], ));\n\t\t\t\tshadowkernel[1] vec3(lessthan(depthkernel[2], ));\n\t\t\t\tshadowkernel[2] fractionalcoord="1.0" fract( shadowmapsize[i].xy );\n\n\t\t\t\tshadowkernel[0]="mix(" shadowkernel[1], shadowkernel[0], fractionalcoord.x );\n\t\t\t\tshadowkernel[1]="mix(" shadowkernel[2], );\n\n\t\t\t\tvec4 shadowvalues;\n\t\t\t\tshadowvalues.x="mix(" shadowkernel[0][1], shadowkernel[0][0], fractionalcoord.y );\n\t\t\t\tshadowvalues.y="mix(" shadowkernel[0][2], );\n\t\t\t\tshadowvalues.z="mix(" shadowkernel[1][1], shadowkernel[1][0], );\n\t\t\t\tshadowvalues.w="mix(" shadowkernel[1][2], );\n\n\t\t\t\tshadow="dot(" shadowvalues, );\n\n\t\t\t\tshadowcolor="shadowColor" );\n\n\t\t\t#else\n\n\t\t\t\tvec4 );\n\t\t\t\tfloat );\n\n\t\t\t\tif )\n\n\t\t spot with multiple shadows is darker\n\n\t\t\t\t\tshadowcolor="shadowColor" );\n\n\t\t has the same color as single spot\n\n\t\t \t\t\t\t\tshadowcolor="min(" shadowcolor, );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef shadowmap_debug\n\n\t\t\t#ifdef shadowmap_cascade\n\n\t\t\t\tif && gl_fragcolor.xyz ];\n\n\t\t\t#else\n\n\t\t\t\tif ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t#ifdef gamma_output\n\n\t\tshadowcolor shadowcolor;\n\n#endif\n"; three.shaderchunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#endif\n\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#endif\n\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif" ; three.shaderchunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif" three.shaderchunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n" three.shaderchunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif" ;three.shaderchunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n" ;three.shaderchunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n" three.uniformsutils="{merge:function(a){var" b,c,d,e="{};for(b=0;b<a.length;b++)for(c" in d="this.clone(a[b]),d)e[c]=d[c];return" e},clone:function(a){var a)for(c e[b]="{},a[b])d=a[b][c],e[b][c]=d" instanceof three.color||d three.vector2||d three.vector3||d three.vector4||d three.matrix4||d three.texture?d.clone():d array?d.slice():d;return e}}; three.uniformslib="{common:{diffuse:{type:" c",value:new" three.color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetrepeat:{type:"v4",value:new three.vector4(0,0,1,1)},lightmap:{type:"t",value:null},specularmap:{type:"t",value:null},alphamap:{type:"t",value:null},envmap:{type:"t",value:null},flipenvmap:{type:"f",value:-1},userefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionratio:{type:"f",value:0.98},combine:{type:"i",value:0},morphtargetinfluences:{type:"f", value:0}},bump:{bumpmap:{type:"t",value:null},bumpscale:{type:"f",value:1}},normalmap:{normalmap:{type:"t",value:null},normalscale:{type:"v2",value:new three.vector2(1,1)}},fog:{fogdensity:{type:"f",value:2.5e-4},fognear:{type:"f",value:1},fogfar:{type:"f",value:2e3},fogcolor:{type:"c",value:new three.color(16777215)}},lights:{ambientlightcolor:{type:"fv",value:[]},directionallightdirection:{type:"fv",value:[]},directionallightcolor:{type:"fv",value:[]},hemispherelightdirection:{type:"fv",value:[]}, hemispherelightskycolor:{type:"fv",value:[]},hemispherelightgroundcolor:{type:"fv",value:[]},pointlightcolor:{type:"fv",value:[]},pointlightposition:{type:"fv",value:[]},pointlightdistance:{type:"fv1",value:[]},spotlightcolor:{type:"fv",value:[]},spotlightposition:{type:"fv",value:[]},spotlightdirection:{type:"fv",value:[]},spotlightdistance:{type:"fv1",value:[]},spotlightanglecos:{type:"fv1",value:[]},spotlightexponent:{type:"fv1",value:[]}},particle:{pscolor:{type:"c",value:new three.color(15658734)}, opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogdensity:{type:"f",value:2.5e-4},fognear:{type:"f",value:1},fogfar:{type:"f",value:2e3},fogcolor:{type:"c",value:new three.color(16777215)}},shadowmap:{shadowmap:{type:"tv",value:[]},shadowmapsize:{type:"v2v",value:[]},shadowbias:{type:"fv1",value:[]},shadowdarkness:{type:"fv1",value:[]},shadowmatrix:{type:"m4v",value:[]}}}; three.shaderlib="{basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex," void" main() {",three.shaderchunk.map_vertex, three.shaderchunk.lightmap_vertex,three.shaderchunk.color_vertex,three.shaderchunk.skinbase_vertex,"\t#ifdef use_envmap",three.shaderchunk.morphnormal_vertex,three.shaderchunk.skinnormal_vertex,three.shaderchunk.defaultnormal_vertex,"\t#endif",three.shaderchunk.morphtarget_vertex,three.shaderchunk.skinning_vertex,three.shaderchunk.default_vertex,three.shaderchunk.logdepthbuf_vertex,three.shaderchunk.worldpos_vertex,three.shaderchunk.envmap_vertex,three.shaderchunk.shadowmap_vertex,"}"].join("\n"), fragmentshader:["uniform vec3 diffuse;\nuniform opacity;",three.shaderchunk.color_pars_fragment,three.shaderchunk.map_pars_fragment,three.shaderchunk.alphamap_pars_fragment,three.shaderchunk.lightmap_pars_fragment,three.shaderchunk.envmap_pars_fragment,three.shaderchunk.fog_pars_fragment,three.shaderchunk.shadowmap_pars_fragment,three.shaderchunk.specularmap_pars_fragment,three.shaderchunk.logdepthbuf_pars_fragment,"void {\n\tgl_fragcolor="vec4(" diffuse, opacity );",three.shaderchunk.logdepthbuf_fragment, three.shaderchunk.map_fragment,three.shaderchunk.alphamap_fragment,three.shaderchunk.alphatest_fragment,three.shaderchunk.specularmap_fragment,three.shaderchunk.lightmap_fragment,three.shaderchunk.color_fragment,three.shaderchunk.envmap_fragment,three.shaderchunk.shadowmap_fragment,three.shaderchunk.linear_to_gamma_fragment,three.shaderchunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:three.uniformsutils.merge([three.uniformslib.common,three.uniformslib.fog,three.uniformslib.lights,three.uniformslib.shadowmap, {ambient:{type:"c",value:new three.color(16777215)},emissive:{type:"c",value:new three.color(0)},wraprgb:{type:"v3",value:new three.vector3(1,1,1)}}]),vertexshader:["#define lambert\nvarying vlightfront;\n#ifdef double_sided\n\tvarying vlightback;\n#endif",three.shaderchunk.map_pars_vertex,three.shaderchunk.lightmap_pars_vertex,three.shaderchunk.envmap_pars_vertex,three.shaderchunk.lights_lambert_pars_vertex,three.shaderchunk.color_pars_vertex,three.shaderchunk.morphtarget_pars_vertex,three.shaderchunk.skinning_pars_vertex, three.shaderchunk.shadowmap_pars_vertex,three.shaderchunk.logdepthbuf_pars_vertex,"void {",three.shaderchunk.map_vertex,three.shaderchunk.lightmap_vertex,three.shaderchunk.color_vertex,three.shaderchunk.morphnormal_vertex,three.shaderchunk.skinbase_vertex,three.shaderchunk.skinnormal_vertex,three.shaderchunk.defaultnormal_vertex,three.shaderchunk.morphtarget_vertex,three.shaderchunk.skinning_vertex,three.shaderchunk.default_vertex,three.shaderchunk.logdepthbuf_vertex,three.shaderchunk.worldpos_vertex, three.shaderchunk.envmap_vertex,three.shaderchunk.lights_lambert_vertex,three.shaderchunk.shadowmap_vertex,"}"].join("\n"),fragmentshader:["uniform opacity;\nvarying vlightback;\n#endif",three.shaderchunk.color_pars_fragment,three.shaderchunk.map_pars_fragment,three.shaderchunk.alphamap_pars_fragment,three.shaderchunk.lightmap_pars_fragment,three.shaderchunk.envmap_pars_fragment,three.shaderchunk.fog_pars_fragment,three.shaderchunk.shadowmap_pars_fragment, three.shaderchunk.specularmap_pars_fragment,three.shaderchunk.logdepthbuf_pars_fragment,"void );",three.shaderchunk.logdepthbuf_fragment,three.shaderchunk.map_fragment,three.shaderchunk.alphamap_fragment,three.shaderchunk.alphatest_fragment,three.shaderchunk.specularmap_fragment,"\t#ifdef double_sided\n\t\tif gl_frontfacing )\n\t\t\tgl_fragcolor.xyz three.shaderchunk.lightmap_fragment,three.shaderchunk.color_fragment,three.shaderchunk.envmap_fragment,three.shaderchunk.shadowmap_fragment,three.shaderchunk.linear_to_gamma_fragment,three.shaderchunk.fog_fragment,"}"].join("\n")},phong:{uniforms:three.uniformsutils.merge([three.uniformslib.common,three.uniformslib.bump,three.uniformslib.normalmap,three.uniformslib.fog,three.uniformslib.lights,three.uniformslib.shadowmap,{ambient:{type:"c",value:new three.color(0)}, specular:{type:"c",value:new three.color(1118481)},shininess:{type:"f",value:30},wraprgb:{type:"v3",value:new phong\nvarying vviewposition;\nvarying vnormal;",three.shaderchunk.map_pars_vertex,three.shaderchunk.lightmap_pars_vertex,three.shaderchunk.envmap_pars_vertex,three.shaderchunk.lights_phong_pars_vertex,three.shaderchunk.color_pars_vertex,three.shaderchunk.morphtarget_pars_vertex,three.shaderchunk.skinning_pars_vertex,three.shaderchunk.shadowmap_pars_vertex, three.shaderchunk.logdepthbuf_pars_vertex,"void {",three.shaderchunk.map_vertex,three.shaderchunk.lightmap_vertex,three.shaderchunk.color_vertex,three.shaderchunk.morphnormal_vertex,three.shaderchunk.skinbase_vertex,three.shaderchunk.skinnormal_vertex,three.shaderchunk.defaultnormal_vertex,"\tvnormal="normalize(" transformednormal );",three.shaderchunk.morphtarget_vertex,three.shaderchunk.skinning_vertex,three.shaderchunk.default_vertex,three.shaderchunk.logdepthbuf_vertex,"\tvviewposition="-mvPosition.xyz;" ," three.shaderchunk.worldpos_vertex,three.shaderchunk.envmap_vertex,three.shaderchunk.lights_phong_vertex,three.shaderchunk.shadowmap_vertex,"}"].join("\n"),fragmentshader:["uniform opacity;\nuniform ambient;\nuniform emissive;\nuniform specular;\nuniform shininess;",three.shaderchunk.color_pars_fragment,three.shaderchunk.map_pars_fragment,three.shaderchunk.alphamap_pars_fragment,three.shaderchunk.lightmap_pars_fragment,three.shaderchunk.envmap_pars_fragment, three.shaderchunk.fog_pars_fragment,three.shaderchunk.lights_phong_pars_fragment,three.shaderchunk.shadowmap_pars_fragment,three.shaderchunk.bumpmap_pars_fragment,three.shaderchunk.normalmap_pars_fragment,three.shaderchunk.specularmap_pars_fragment,three.shaderchunk.logdepthbuf_pars_fragment,"void );",three.shaderchunk.logdepthbuf_fragment,three.shaderchunk.map_fragment,three.shaderchunk.alphamap_fragment,three.shaderchunk.alphatest_fragment,three.shaderchunk.specularmap_fragment, three.shaderchunk.lights_phong_fragment,three.shaderchunk.lightmap_fragment,three.shaderchunk.color_fragment,three.shaderchunk.envmap_fragment,three.shaderchunk.shadowmap_fragment,three.shaderchunk.linear_to_gamma_fragment,three.shaderchunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:three.uniformsutils.merge([three.uniformslib.particle,three.uniformslib.shadowmap]),vertexshader:["uniform size;\nuniform scale;",three.shaderchunk.color_pars_vertex,three.shaderchunk.shadowmap_pars_vertex, {",three.shaderchunk.color_vertex,"\tvec4 mvposition="modelViewMatrix" position, );\n\t#ifdef use_sizeattenuation\n\t\tgl_pointsize="size" scale length( mvposition.xyz );\n\t#else\n\t\tgl_pointsize="size;\n\t#endif\n\tgl_Position" projectionmatrix mvposition;",three.shaderchunk.logdepthbuf_vertex,three.shaderchunk.worldpos_vertex,three.shaderchunk.shadowmap_vertex,"}"].join("\n"),fragmentshader:["uniform pscolor;\nuniform opacity;", three.shaderchunk.color_pars_fragment,three.shaderchunk.map_particle_pars_fragment,three.shaderchunk.fog_pars_fragment,three.shaderchunk.shadowmap_pars_fragment,three.shaderchunk.logdepthbuf_pars_fragment,"void pscolor, );",three.shaderchunk.logdepthbuf_fragment,three.shaderchunk.map_particle_fragment,three.shaderchunk.alphatest_fragment,three.shaderchunk.color_fragment,three.shaderchunk.shadowmap_fragment,three.shaderchunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:three.uniformsutils.merge([three.uniformslib.common, three.uniformslib.fog,{scale:{type:"f",value:1},dashsize:{type:"f",value:1},totalsize:{type:"f",value:2}}]),vertexshader:["uniform scale;\nattribute linedistance;\nvarying vlinedistance;",three.shaderchunk.color_pars_vertex,three.shaderchunk.logdepthbuf_pars_vertex,"void {",three.shaderchunk.color_vertex,"\tvlinedistance="scale" linedistance;\n\tvec4 );\n\tgl_position="projectionMatrix" mvposition;",three.shaderchunk.logdepthbuf_vertex, "}"].join("\n"),fragmentshader:["uniform dashsize;\nuniform totalsize;\nvarying vlinedistance;",three.shaderchunk.color_pars_fragment,three.shaderchunk.fog_pars_fragment,three.shaderchunk.logdepthbuf_pars_fragment,"void {\n\tif mod( vlinedistance, totalsize> dashSize ) {\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,
"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,
"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",
value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},
specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:0.98},reflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\n\tvec3 specularTex = vec3( 1.0 );\n\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\tif( enableDiffuse ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\n\t\t\ttexelColor.xyz *= texelColor.xyz;\n\t\t\tgl_FragColor = gl_FragColor * texelColor;\n\t\t#else\n\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n\t\t#endif\n\t}\n\tif( enableAO ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 aoColor = texture2D( tAO, vUv );\n\t\t\taoColor.xyz *= aoColor.xyz;\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n\t\t#else\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n\t\t#endif\n\t}",
THREE.ShaderChunk.alphatest_fragment,"\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\n\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n\tvec3 finalNormal = tsb * normalTex;\n\t#ifdef FLIP_SIDED\n\t\tfinalNormal = -finalNormal;\n\t#endif\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\t#if MAX_POINT_LIGHTS > 0\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat pointDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\t\tpointVector = normalize( pointVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n\t\t\t#endif\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\tvec3 spotDiffuse = vec3( 0.0 );\n\t\tvec3 spotSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat spotDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tspotVector = normalize( spotVector );\n\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t\t#else\n\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t#endif\n\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );\n\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n\t\t\t}\n\t\t}\n\t#endif\n\t#if MAX_DIR_LIGHTS > 0\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\t\t\t#endif\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\tvec3 hemiDiffuse = vec3( 0.0 );\n\t\tvec3 hemiSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\t\themiDiffuse += diffuse * hemiColor;\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\t\t\tvec3 lVectorGround = -lVector;\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\t\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\t\t}\n\t#endif\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\t#if MAX_DIR_LIGHTS > 0\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\ttotalDiffuse += hemiDiffuse;\n\t\ttotalSpecular += hemiSpecular;\n\t#endif\n\t#if MAX_POINT_LIGHTS > 0\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\ttotalDiffuse += spotDiffuse;\n\t\ttotalSpecular += spotSpecular;\n\t#endif\n\t#ifdef METAL\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\t#else\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\t#endif\n\tif ( enableReflection ) {\n\t\tvec3 vReflect;\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tif ( useRefract ) {\n\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );\n\t\t} else {\n\t\t\tvReflect = reflect( cameraToVertex, normal );\n\t\t}\n\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n\t\t#ifdef GAMMA_INPUT\n\t\t\tcubeColor.xyz *= cubeColor.xyz;\n\t\t#endif\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n\t}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING\n\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );\n\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n\t#else\n\t\tvNormal = normalize( normalMatrix * normal );\n\t\tvTangent = normalize( normalMatrix * tangent.xyz );\n\t#endif\n\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n\tvUv = uv * uRepeat + uOffset;\n\tvec3 displacedPosition;\n\t#ifdef VERTEX_TEXTURES\n\t\tif ( enableDisplacement ) {\n\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\n\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\t\tdisplacedPosition = position + normalize( normal ) * df;\n\t\t} else {\n\t\t\t#ifdef USE_SKINNING\n\t\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\t\tdisplacedPosition = skinned.xyz;\n\t\t\t#else\n\t\t\t\tdisplacedPosition = position;\n\t\t\t#endif\n\t\t}\n\t#else\n\t\t#ifdef USE_SKINNING\n\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\tdisplacedPosition = skinned.xyz;\n\t\t#else\n\t\t\tdisplacedPosition = position;\n\t\t#endif\n\t#endif\n\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;\n\tvViewPosition = -mvPosition.xyz;\n\t#ifdef USE_SHADOWMAP\n\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t\t}\n\t#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,
"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",
THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=m.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
function c(a,b){var c=b.geometry,g=a.faces3,h=3*g.length,k=1*g.length,l=3*g.length,g=d(b,a),n=f(g),r=e(g),p=g.vertexColors?g.vertexColors:!1;a.__vertexArray=new Float32Array(3*h);r&&(a.__normalArray=new Float32Array(3*h));c.hasTangents&&(a.__tangentArray=new Float32Array(4*h));p&&(a.__colorArray=new Float32Array(3*h));n&&(0<c.facevertexuvs.length&&(a.__uvarray=new 0="==a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var" float32array(2*h)),1<c.facevertexuvs.length&&(a.__uv2array="new" float32array(2*h)));b.geometry.skinweights.length&&b.geometry.skinindices.length&& (a.__skinindexarray="new" float32array(4*h),a.__skinweightarray="new" float32array(4*h));c="null!==Eb&&21845<k?Uint32Array:Uint16Array;a.__typeArray=c;a.__faceArray=new" c(3*k);a.__linearray="new" c(2*l);if(a.nummorphtargets)for(a.__morphtargetsarrays="[],c=0,n=a.numMorphTargets;c<n;c++)a.__morphTargetsArrays.push(new" float32array(3*h));if(a.nummorphnormals)for(a.__morphnormalsarrays="[],c=0,n=a.numMorphNormals;c<n;c++)a.__morphNormalsArrays.push(new" float32array(3*h));a.__webglfacecount="3*k;a.__webglLineCount=" 2*l;if(g.attributes){void q in g.attributes){var k="g.attributes[q],l={},s;for(s" k)l[s]="k[s];if(!l.__webglInitialized||l.createUniqueBuffers)l.__webglInitialized=!0,c=1," v2"="==l.type?c=2:" v3"="==l.type?c=3:"v4"===l.type?c=4:"c"===l.type&&(c=3),l.size=c,l.array=new""" float32array(h*c),l.buffer="m.createBuffer(),l.buffer.belongsToAttribute=q,k.needsUpdate=!0,l.__original=k;a.__webglCustomAttributesList.push(l)}}a.__inittedArrays=" !0}function d(a,b){return a.material instanceof three.meshfacematerial?a.material.materials[b.materialindex]:a.material}function e(a){return a three.meshbasicmaterial&&!a.envmap||a three.meshdepthmaterial?!1:a&&void 0!="=a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function" f(a){return a.map||a.lightmap||a.bumpmap||a.normalmap||a.specularmap||a.alphamap||a three.shadermaterial?!0:!1}function g(a){for(var b a.attributes){var c="index" =="=b?m.ELEMENT_ARRAY_BUFFER:m.ARRAY_BUFFER,d=a.attributes[b];d.buffer=m.createBuffer();m.bindBuffer(c,d.buffer);m.bufferData(c,d.array,m.STATIC_DRAW)}}function" h(a,b,c,d){for(var e b){var f="b[e],g=c[e];if(0<=f)if(g){var" h="g.itemSize;m.bindBuffer(m.ARRAY_BUFFER,g.buffer);l(f);m.vertexAttribPointer(f,h,m.FLOAT,!1,0,d*h*4)}else" a.defaultattributevalues&&(2="==a.defaultAttributeValues[e].length?m.vertexAttrib2fv(f,a.defaultAttributeValues[e]):3===a.defaultAttributeValues[e].length&&m.vertexAttrib3fv(f," a.defaultattributevalues[e]))}n()}function k(){for(var l(a){pb[a]="1;0===tb[a]&&(m.enableVertexAttribArray(a),tb[a]=1)}function" n(){for(var q(a,b){return a.z!="=b.z?b.z-a.z:a.id-b.id}function" r(a,b){return t(a,b){return b[0]-a[0]}function s(a,b,h){if(!1!="=b.visible){var" l="b.geometry,n,r,p;if(l" three.buffergeometry){var w)v="w[u],v.needsUpdate&&(" index"="==u?(m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,v.buffer),m.bufferData(m.ELEMENT_ARRAY_BUFFER,v.array,q)):(m.bindBuffer(m.ARRAY_BUFFER,v.buffer),m.bufferData(m.ARRAY_BUFFER,v.array,q)),v.needsUpdate=!1)}else" " if(b three.mesh){if(l.buffersneedupdate||l.groupsneedupdate)l three.buffergeometry?g(l):b three.mesh&&d(a,b,l);for(var z;a++)if(n="l.geometryGroupsList[A],p=d(b,n),(l.buffersNeedUpdate||l.groupsNeedUpdate)&&c(n,b),r=p.attributes&&x(p),l.verticesNeedUpdate||l.morphTargetsNeedUpdate||l.elementsNeedUpdate||l.uvsNeedUpdate||l.normalsNeedUpdate||l.colorsNeedUpdate||l.tangentsNeedUpdate||r){var" y="n,E=b,I=m.DYNAMIC_DRAW,J=!l.dynamic,L=p;if(y.__inittedArrays){var" 0,n="void" 0,p="void" 0,t="void" 0,r="void" 0,ba="void" 0,s="void" 0,$="void" 0,x="void" 0,v="void" 0, za="void" 0,ga="void" 0,ha="void" 0,ia="void" 0,ea="void" 0,aa="void" 0,da="void" 0,ya="void" 0,u="void" 0,ca="void" 0,w="void" 0,la="void" 0,ma="void" 0,oa="void" 0,ra="void" 0,ua="void" 0,va="void" 0,ja="void" 0,fa="void" 0,qa="void" 0,ka="void" 0,xa="void" 0,db="0,eb=0,Sa=0,Za=0,Ta=0,gb=0,Ua=0,ub=0,$a=0,wa=0,Ha=0,M=0,Ra=void" 0,hb="y.__vertexArray,cb=y.__uvArray,fb=y.__uv2Array,yb=y.__normalArray,Va=y.__tangentArray,ib=y.__colorArray,Wa=y.__skinIndexArray,Xa=y.__skinWeightArray," tb="y.__morphTargetsArrays,wb=y.__morphNormalsArrays,sb=y.__webglCustomAttributesList,F=void" 0,pb="y.__faceArray,zb=y.__lineArray,La=E.geometry,Db=La.elementsNeedUpdate,xb=La.uvsNeedUpdate,Eb=La.normalsNeedUpdate,Ob=La.tangentsNeedUpdate,Pb=La.colorsNeedUpdate,Sb=La.morphTargetsNeedUpdate,lc=La.vertices,ka=y.faces3,jb=La.faces,Hb=La.faceVertexUvs[0],Ib=La.faceVertexUvs[1],mc=La.skinIndices,Vb=La.skinWeights,Wb=La.morphTargets,Jb=La.morphNormals;if(La.verticesNeedUpdate){B=0;for(N=ka.length;B<N;B++)T=" jb[ka[b]],ga="lc[T.a],ha=lc[T.b],ia=lc[T.c],hb[eb]=ga.x,hb[eb+1]=ga.y,hb[eb+2]=ga.z,hb[eb+3]=ha.x,hb[eb+4]=ha.y,hb[eb+5]=ha.z,hb[eb+6]=ia.x,hb[eb+7]=ia.y,hb[eb+8]=ia.z,eb+=9;m.bindBuffer(m.ARRAY_BUFFER,y.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,hb,I)}if(Sb)for(qa=0,Ka=Wb.length;qa<Ka;qa++){B=Ha=0;for(N=ka.length;B<N;B++)Ja=ka[B],T=jb[Ja],ga=Wb[qa].vertices[T.a],ha=Wb[qa].vertices[T.b],ia=Wb[qa].vertices[T.c],xa=tb[qa],xa[Ha]=ga.x,xa[Ha+1]=ga.y,xa[Ha+2]=ga.z,xa[Ha+3]=ha.x,xa[Ha+4]=ha.y,xa[Ha+" 5]="ha.z,xa[Ha+6]=ia.x,xa[Ha+7]=ia.y,xa[Ha+8]=ia.z,L.morphNormals&&(O?(Qa=Jb[qa].vertexNormals[Ja],ya=Qa.a,U=Qa.b,ca=Qa.c):ca=U=ya=Jb[qa].faceNormals[Ja],Ca=wb[qa],Ca[Ha]=ya.x,Ca[Ha+1]=ya.y,Ca[Ha+2]=ya.z,Ca[Ha+3]=U.x,Ca[Ha+4]=U.y,Ca[Ha+5]=U.z,Ca[Ha+6]=ca.x,Ca[Ha+7]=ca.y,Ca[Ha+8]=ca.z),Ha+=9;m.bindBuffer(m.ARRAY_BUFFER,y.__webglMorphTargetsBuffers[qa]);m.bufferData(m.ARRAY_BUFFER,tb[qa],I);L.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,y.__webglMorphNormalsBuffers[qa]),m.bufferData(m.ARRAY_BUFFER,wb[qa]," i))}if(vb.length){b="0;for(N=ka.length;B<N;B++)T=jb[ka[B]],la=Vb[T.a],ma=Vb[T.b],oa=Vb[T.c],Xa[wa]=la.x,Xa[wa+1]=la.y,Xa[wa+2]=la.z,Xa[wa+3]=la.w,Xa[wa+4]=ma.x,Xa[wa+5]=ma.y,Xa[wa+6]=ma.z,Xa[wa+7]=ma.w,Xa[wa+8]=oa.x,Xa[wa+9]=oa.y,Xa[wa+10]=oa.z,Xa[wa+11]=oa.w,ra=mc[T.a],ua=mc[T.b],va=mc[T.c],Wa[wa]=ra.x,Wa[wa+1]=ra.y,Wa[wa+2]=ra.z,Wa[wa+3]=ra.w,Wa[wa+4]=ua.x,Wa[wa+5]=ua.y,Wa[wa+6]=ua.z,Wa[wa+7]=ua.w,Wa[wa+8]=va.x,Wa[wa+9]=va.y,Wa[wa+10]=va.z,Wa[wa+11]=va.w,wa+=12;0<wa&&(m.bindBuffer(m.ARRAY_BUFFER," y.__webglskinindicesbuffer),m.bufferdata(m.array_buffer,wa,i),m.bindbuffer(m.array_buffer,y.__webglskinweightsbuffer),m.bufferdata(m.array_buffer,xa,i))}if(pb&&h){b="0;for(N=ka.length;B<N;B++)T=jb[ka[B]],S=T.vertexColors,$=T.color,3===S.length&&H===THREE.VertexColors?(W=S[0],Ba=S[1],Aa=S[2]):Aa=Ba=W=$,ib[$a]=W.r,ib[$a+1]=W.g,ib[$a+2]=W.b,ib[$a+3]=Ba.r,ib[$a+4]=Ba.g,ib[$a+5]=Ba.b,ib[$a+6]=Aa.r,ib[$a+7]=Aa.g,ib[$a+8]=Aa.b,$a+=9;0<$a&&(m.bindBuffer(m.ARRAY_BUFFER,y.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER," ib,i))}if(ob&&la.hastangents){b="0;for(N=ka.length;B<N;B++)T=jb[ka[B]],X=T.vertexTangents,Ea=X[0],aa=X[1],da=X[2],Va[Ua]=Ea.x,Va[Ua+1]=Ea.y,Va[Ua+2]=Ea.z,Va[Ua+3]=Ea.w,Va[Ua+4]=aa.x,Va[Ua+5]=aa.y,Va[Ua+6]=aa.z,Va[Ua+7]=aa.w,Va[Ua+8]=da.x,Va[Ua+9]=da.y,Va[Ua+10]=da.z,Va[Ua+11]=da.w,Ua+=12;m.bindBuffer(m.ARRAY_BUFFER,y.__webglTangentBuffer);m.bufferData(m.ARRAY_BUFFER,Va,I)}if(Eb&&K){B=0;for(N=ka.length;B<N;B++)if(T=jb[ka[B]],R=T.vertexNormals,ba=T.normal,3===R.length&&O)for(ja=0;3">ja;ja++)Da=R[ja],
yb[gb]=Da.x,yb[gb+1]=Da.y,yb[gb+2]=Da.z,gb+=3;else for(ja=0;3>ja;ja++)yb[gb]=ba.x,yb[gb+1]=ba.y,yb[gb+2]=ba.z,gb+=3;m.bindBuffer(m.ARRAY_BUFFER,y.__webglNormalBuffer);m.bufferData(m.ARRAY_BUFFER,yb,I)}if(xb&&Hb&&Q){B=0;for(N=ka.length;B<n;b++)if(p=ka[b],v=hb[p],void 0!="=V)for(ja=0;3">ja;ja++)Ga=V[ja],cb[Sa]=Ga.x,cb[Sa+1]=Ga.y,Sa+=2;0<sa&&(m.bindbuffer(m.array_buffer,y.__webgluvbuffer),m.bufferdata(m.array_buffer,cb,i))}if(xb&&ib&&q){b=0;for(n=ka.length;b<n;b++)if(p=ka[b],za=ib[p],void 0!="=za)for(ja=" 0;3>ja;ja++)Ya=za[ja],fb[Za]=Ya.x,fb[Za+1]=Ya.y,Za+=2;0<za&&(m.bindbuffer(m.array_buffer,y.__webgluv2buffer),m.bufferdata(m.array_buffer,fb,i))}if(db){b=0;for(n=ka.length;b<n;b++)pb[ta]=db,pb[ta+1]=db+1,pb[ta+2]=db+2,ta+=3,zb[ub]=db,zb[ub+1]=db+1,zb[ub+2]=db,zb[ub+3]=db+2,zb[ub+4]=db+1,zb[ub+5]=db+2,ub+=6,db+=3;m.bindbuffer(m.element_array_buffer,y.__webglfacebuffer);m.bufferdata(m.element_array_buffer,pb,i);m.bindbuffer(m.element_array_buffer,y.__webgllinebuffer);m.bufferdata(m.element_array_buffer, 0="==F.boundTo||" vertices"="==F.boundTo)for(B=0,N=ka.length;B<N;B++)T=jb[ka[B]],F.array[M]=F.value[T.a],F.array[M+1]=F.value[T.b],F.array[M+2]=F.value[T.c],M+=3;else{if(" faces"="==F.boundTo)for(B=0,N=ka.length;B<N;B++)Ra=F.value[ka[B]],F.array[M]=Ra,F.array[M+1]=Ra,F.array[M+2]=Ra,M+=3}else""" zb,i)}if(sb)for(ja="0,Fa=sb.length;ja<Fa;ja++)if(F=sb[ja],F.__original.needsUpdate){M=0;if(1===F.size)if(void" if(2="==F.size)if(void" f.value[t.a],ha="F.value[T.b],ia=F.value[T.c],F.array[M]=ga.x,F.array[M+1]=ga.y,F.array[M+2]=ha.x,F.array[M+3]=ha.y,F.array[M+4]=ia.x,F.array[M+5]=ia.y,M+=6;else{if(" " if(3="==F.size){var" ta;ta="c" =="=F.type?[" r","g","b"]:["x","y","z"];if(void" ga="F.value[T.a],ha=F.value[T.b],ia=F.value[T.c],F.array[M]=ga[ta[0]],F.array[M+1]=ga[ta[1]],F.array[M+2]=ga[ta[2]],F.array[M+3]=ha[ta[0]],F.array[M+4]=ha[ta[1]],F.array[M+5]=ha[ta[2]],F.array[M+6]=ia[ta[0]],F.array[M+7]=ia[ta[1]],F.array[M+8]=ia[ta[2]],M+=9;else" if("faces"="==F.boundTo)for(B=0,N=ka.length;B<N;B++)ia=ha=ga=Ra=F.value[ka[B]],F.array[M]=ga[ta[0]],F.array[M+1]=ga[ta[1]],F.array[M+2]=ga[ta[2]],F.array[M+3]=ha[ta[0]],F.array[M+4]=ha[ta[1]],F.array[M+5]=ha[ta[2]],F.array[M+6]=ia[ta[0]],F.array[M+" 7]="ia[ta[1]],F.array[M+8]=ia[ta[2]],M+=9;else" if("facevertices"="==F.boundTo)for(B=0,N=ka.length;B<N;B++)Ra=F.value[ka[B]],ga=Ra[0],ha=Ra[1],ia=Ra[2],F.array[M]=ga[ta[0]],F.array[M+1]=ga[ta[1]],F.array[M+2]=ga[ta[2]],F.array[M+3]=ha[ta[0]],F.array[M+4]=ha[ta[1]],F.array[M+5]=ha[ta[2]],F.array[M+6]=ia[ta[0]],F.array[M+7]=ia[ta[1]],F.array[M+8]=ia[ta[2]],M+=9}else" if(4="==F.size)if(void" f.array[m]="ga.x,F.array[M+1]=ga.y,F.array[M+2]=ga.z,F.array[M+3]=ga.w,F.array[M+4]=ha.x,F.array[M+5]=ha.y,F.array[M+6]=ha.z,F.array[M+7]=ha.w,F.array[M+8]=ia.x,F.array[M+9]=ia.y,F.array[M+10]=ia.z,F.array[M+11]=ia.w,M+=12;else" f.array[m+11]="ia.w,M+=12;else" y.__inittedarrays,delete y.__colorarray,delete y.__normalarray, delete y.__tangentarray,delete y.__uvarray,delete y.__uv2array,delete y.__facearray,delete y.__vertexarray,delete y.__linearray,delete y.__skinindexarray,delete y.__skinweightarray)}}l.verticesneedupdate="!1;l.morphTargetsNeedUpdate=!1;l.elementsNeedUpdate=!1;l.uvsNeedUpdate=!1;l.normalsNeedUpdate=!1;l.colorsNeedUpdate=!1;l.tangentsNeedUpdate=!1;l.buffersNeedUpdate=!1;p.attributes&&C(p)}else" if(b instanceof three.line){p="d(b,l);r=p.attributes&&x(p);if(l.verticesNeedUpdate||l.colorsNeedUpdate||l.lineDistancesNeedUpdate||" r){var xb="m.DYNAMIC_DRAW,Kb,Lb,Mb,Yb,sa,Zb,Nb=l.vertices,Qb=l.colors,Rb=l.lineDistances,ec=Nb.length,fc=Qb.length,gc=Rb.length,$b=l.__vertexArray,ac=l.__colorArray,Tb=l.__lineDistanceArray,hc=l.colorsNeedUpdate,ic=l.lineDistancesNeedUpdate,nc=l.__webglCustomAttributesList,bc,uc,Ia,Fb,Ma,pa;if(l.verticesNeedUpdate){for(Kb=0;Kb<ec;Kb++)Yb=Nb[Kb],sa=3*Kb,$b[sa]=Yb.x,$b[sa+1]=Yb.y,$b[sa+2]=Yb.z;m.bindBuffer(m.ARRAY_BUFFER,l.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,$b,Xb)}if(hc){for(Lb=0;Lb<fc;Lb++)Zb=" qb[lb],sa="3*Lb,ac[sa]=Zb.r,ac[sa+1]=Zb.g,ac[sa+2]=Zb.b;m.bindBuffer(m.ARRAY_BUFFER,l.__webglColorBuffer);m.bufferData(m.ARRAY_BUFFER,ac,Xb)}if(ic){for(Mb=0;Mb<gc;Mb++)Tb[Mb]=Rb[Mb];m.bindBuffer(m.ARRAY_BUFFER,l.__webglLineDistanceBuffer);m.bufferData(m.ARRAY_BUFFER,Tb,Xb)}if(nc)for(bc=0,uc=nc.length;bc<uc;bc++)if(pa=nc[bc],pa.needsUpdate&&(void" 0;ia<fb;ia++)ma="pa.value[Ia],pa.array[sa]=Ma.x,pa.array[sa+1]=Ma.y,sa+=2;else" for(ia="0;Ia<Fb;Ia++)Ma=pa.value[Ia],pa.array[sa]=Ma.x,pa.array[sa+1]=Ma.y,pa.array[sa+2]=Ma.z,sa+=3;else" pa.array,xb)}}l.verticesneedupdate="!1;l.colorsNeedUpdate=!1;l.lineDistancesNeedUpdate=!1;p.attributes&&C(p)}else" three.pointcloud){p="d(b,l);r=p.attributes&&x(p);if(l.verticesNeedUpdate||l.colorsNeedUpdate||b.sortParticles||r){var" oc="m.DYNAMIC_DRAW,Na,kb,lb,Z,mb,vb,cc=l.vertices,pc=cc.length,qc=l.colors,vc=qc.length,Ab=l.__vertexArray,Bb=l.__colorArray,qb=l.__sortArray,wc=l.verticesNeedUpdate,xc=l.colorsNeedUpdate,rb=l.__webglCustomAttributesList,ab,Gb,fa,bb,na,Y;if(b.sortParticles){kc.copy(Ub);" kc.multiply(b.matrixworld);for(na="0;Na<pc;Na++)lb=cc[Na],ea.copy(lb),ea.applyProjection(kc),qb[Na]=[ea.z,Na];qb.sort(t);for(Na=0;Na<pc;Na++)lb=cc[qb[Na][1]],Z=3*Na,Ab[Z]=lb.x,Ab[Z+1]=lb.y,Ab[Z+2]=lb.z;for(kb=0;kb<vc;kb++)Z=3*kb,vb=qc[qb[kb][1]],Bb[Z]=vb.r,Bb[Z+1]=vb.g,Bb[Z+2]=vb.b;if(rb)for(ab=0,Gb=rb.length;ab<Gb;ab++)if(Y=rb[ab],void" qb[fa][1],na="Y.value[mb],Y.array[Z]=na.x,Y.array[Z+1]=na.y,Z+=2;else" for(fa="0;fa<bb;fa++)mb=qb[fa][1],na=Y.value[mb],Y.array[Z]=na.x,Y.array[Z+1]=na.y,Y.array[Z+2]=na.z,Z+=3;else" na,ab[z]="lb.x,Ab[Z+1]=lb.y,Ab[Z+2]=lb.z;if(xc)for(kb=0;kb<vc;kb++)vb=qc[kb],Z=3*kb,Bb[Z]=vb.r,Bb[Z+1]=vb.g,Bb[Z+2]=vb.b;if(rb)for(ab=0,Gb=rb.length;ab<Gb;ab++)if(Y=rb[ab],Y.needsUpdate&&(void" na.g,y.array[z+2]="na.b,Z+=3;else" gb;ab++)if(y="rb[ab],Y.needsUpdate||b.sortParticles)m.bindBuffer(m.ARRAY_BUFFER,Y.buffer),m.bufferData(m.ARRAY_BUFFER,Y.array,oc)}l.verticesNeedUpdate=!1;l.colorsNeedUpdate=!1;p.attributes&&C(p)}for(var" cb="0,rc=k.length;Cb<rc;Cb++){var" dc="k[Cb],nb=dc,yc=nb.object,sc=nb.buffer,tc=yc.geometry,ob=yc.material;ob" three.meshfacematerial?(ob="ob.materials[tc" three.buffergeometry?0:sc.materialindex],ob.transparent?(nb.material="ob,Pa.push(nb)):(nb.material=ob,Oa.push(nb))):ob&&(ob.transparent?" (nb.material="ob,Pa.push(nb)):(nb.material=ob,Oa.push(nb)));dc.render=!0;!0===G.sortObjects&&(null!==b.renderDepth?dc.z=b.renderDepth:(ea.setFromMatrixPosition(b.matrixWorld),ea.applyProjection(Ub),dc.z=ea.z))}}Cb=0;for(rc=b.children.length;Cb<rc;Cb++)s(a,b.children[Cb],h)}}function" p(a,b,c){if(0!="=a.length)for(var" d="0,e=a.length;d<e;d++)la=Ya=null,Ca=ca=ja=ua=Da=ra=Fa=-1,fb=!0,a[d].render(b,c,Hb,Ib),la=Ya=null,Ca=ca=ja=ua=Da=ra=Fa=-1,fb=!0}function" v(a,b,c,d,e,f){for(var g,h,k,m="a.length-1;-1!==m;m--){g=" a[m];h="g.object;k=g.buffer;N(h,b);if(f)g=f;else{g=g.material;if(!g)continue;e&&G.setBlending(g.blending,g.blendEquation,g.blendSrc,g.blendDst);G.setDepthTest(g.depthTest);G.setDepthWrite(g.depthWrite);J(g.polygonOffset,g.polygonOffsetFactor,g.polygonOffsetUnits)}G.setMaterialFaces(g);k" three.buffergeometry?g.renderbufferdirect(b,c,d,g,k,h):g.renderbuffer(b,c,d,g,k,h)}}function w(a,b,c,d,e,f,g){for(var h,k,m="0,l=a.length;m<l;m++)if(h=a[m],k=h.object,k.visible){if(g)h=g;else{h=h[b];if(!h)continue;" f&&g.setblending(h.blending,h.blendequation,h.blendsrc,h.blenddst);g.setdepthtest(h.depthtest);g.setdepthwrite(h.depthwrite);j(h.polygonoffset,h.polygonoffsetfactor,h.polygonoffsetunits)}g.renderimmediateobject(c,d,e,h,k)}}function u(a){var b="a.object.material;b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)}function" d(a,b,d){var e,f="!1;e=b.material;if(void" a.__webglobjects[b.id],d.makegroups(e three.meshfacematerial, eb?4294967296:65535),d.groupsneedupdate="!1;for(var" g="0,h=d.geometryGroupsList.length;g<h;g++){e=d.geometryGroupsList[g];if(e.__webglVertexBuffer)f=!1;else{f=e;f.__webglVertexBuffer=m.createBuffer();f.__webglNormalBuffer=m.createBuffer();f.__webglTangentBuffer=m.createBuffer();f.__webglColorBuffer=m.createBuffer();f.__webglUVBuffer=m.createBuffer();f.__webglUV2Buffer=m.createBuffer();f.__webglSkinIndicesBuffer=m.createBuffer();f.__webglSkinWeightsBuffer=m.createBuffer();f.__webglFaceBuffer=m.createBuffer();" f.__webgllinebuffer="m.createBuffer();var" k="void" 0,l="void" 0;if(f.nummorphtargets)for(f.__webglmorphtargetsbuffers="[],k=0,l=f.numMorphTargets;k<l;k++)f.__webglMorphTargetsBuffers.push(m.createBuffer());if(f.numMorphNormals)for(f.__webglMorphNormalsBuffers=[],k=0,l=f.numMorphNormals;k<l;k++)f.__webglMorphNormalsBuffers.push(m.createBuffer());G.info.memory.geometries++;c(e,b);d.verticesNeedUpdate=!0;d.morphTargetsNeedUpdate=!0;d.elementsNeedUpdate=!0;d.uvsNeedUpdate=!0;d.normalsNeedUpdate=!0;d.tangentsNeedUpdate=" !0;f="d.colorsNeedUpdate=!0}(f||void" a(a,b,c){var x(a){for(var in a.attributes)if(a.attributes[b].needsupdate)return!0;return!1}function c(a){for(var a.attributes)a.attributes[b].needsupdate="!1}function" i(a,b){if(a three.mesh||a three.pointcloud||a three.line)delete b.__webglobjects[a.id];else if(a three.immediaterenderobject||a.immediaterendercallback)for(var c="b.__webglObjectsImmediate,d=c.length-1;0<=d;d--)c[d].object===a&&c.splice(d,1);delete" a.__webglactive}function z(a,b,c,d,e){qa="0;d.needsUpdate&&(d.program&&Nb(d),G.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new" float32array(g.maxmorphtargets));var f="!1,g=!1,h=!1,k=d.program,l=k.uniforms,n=d.__webglShader.uniforms;k.id!==Ya&&(m.useProgram(k.program),Ya=k.id," h="g=f=!0);d.id!==Ca&&(-1===Ca&&(h=!0),Ca=d.id,g=!0);if(f||a!==la)m.uniformMatrix4fv(l.projectionMatrix,!1,a.projectionMatrix.elements),Ea&&m.uniform1f(l.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==la&&(la=a),(d" three.shadermaterial||d three.meshphongmaterial||d.envmap)&&null!="=l.cameraPosition&&(ea.setFromMatrixPosition(a.matrixWorld),m.uniform3f(l.cameraPosition,ea.x,ea.y,ea.z)),(d" three.meshphongmaterial||d three.meshlambertmaterial||d three.shadermaterial||d.skinning)&&null!="=l.viewMatrix&&m.uniformMatrix4fv(l.viewMatrix,!1,a.matrixWorldInverse.elements);d.skinning&&(e.bindMatrix&&null!==l.bindMatrix&&m.uniformMatrix4fv(l.bindMatrix,!1,e.bindMatrix.elements),e.bindMatrixInverse&&null!==l.bindMatrixInverse&&m.uniformMatrix4fv(l.bindMatrixInverse,!1,e.bindMatrixInverse.elements),Ob&&e.skeleton&&e.skeleton.useVertexTexture?(null!==l.boneTexture&&(f=K(),m.uniform1i(l.boneTexture,f),G.setTexture(e.skeleton.boneTexture,f)),null!==l.boneTextureWidth&&" m.uniform1i(l.bonetexturewidth,e.skeleton.bonetexturewidth),null!="=l.boneTextureHeight&&m.uniform1i(l.boneTextureHeight,e.skeleton.boneTextureHeight)):e.skeleton&&e.skeleton.boneMatrices&&null!==l.boneGlobalMatrices&&m.uniformMatrix4fv(l.boneGlobalMatrices,!1,e.skeleton.boneMatrices));if(g){c&&d.fog&&(n.fogColor.value=c.color,c" three.fog?(n.fognear.value="c.near,n.fogFar.value=c.far):c" three.fogexp2&&(n.fogdensity.value="c.density));if(d" three.meshlambertmaterial||d.lights){if(fb){var three.ambientlight? p.visible&&(g.gammainput?(f+="s.r*s.r,r+=s.g*s.g,q+=s.b*s.b):(f+=s.r,r+=s.g,q+=s.b)):p" three.directionallight?(za+="1,p.visible&&(da.setFromMatrixPosition(p.matrixWorld),ea.setFromMatrixPosition(p.target.matrixWorld),da.sub(ea),da.normalize(),p=3*R,x[p]=da.x,x[p+1]=da.y,x[p+2]=da.z,G.gammaInput?ba(v,p,s,t*t):P(v,p,s,t),R+=1)):p" three.pointlight?(aa+="1,p.visible&&(W=3*X,G.gammaInput?ba(D,W,s,t*t):P(D,W,s,t),ea.setFromMatrixPosition(p.matrixWorld),A[W]=ea.x,A[W+1]=ea.y,A[W+2]=ea.z," z[x]="w,X+=1)):p" three.spotlight?(ya+="1,p.visible&&(W=3*V,G.gammaInput?ba(C,W,s,t*t):P(C,W,s,t),ea.setFromMatrixPosition(p.matrixWorld),I[W]=ea.x,I[W+1]=ea.y,I[W+2]=ea.z,L[V]=w,da.copy(ea),ea.setFromMatrixPosition(p.target.matrixWorld),da.sub(ea),da.normalize(),N[W]=da.x,N[W+1]=da.y,N[W+2]=da.z,J[V]=Math.cos(p.angle),T[V]=p.exponent,V+=1)):p" three.hemispherelight&&(ca+="1,p.visible&&(da.setFromMatrixPosition(p.matrixWorld),da.normalize(),w=3*$,O[w]=da.x,O[w+1]=da.y,O[w+2]=da.z," s="p.color,p=p.groundColor,G.gammaInput?(t*=t,ba(H,w,s,t),ba(Q,w,p,t)):(P(H,w,s,t),P(Q,w,p,t)),$+=1)));c=3*R;for(g=Math.max(v.length,3*za);c<g;c++)v[c]=0;c=3*X;for(g=Math.max(D.length,3*aa);c<g;c++)D[c]=0;c=3*V;for(g=Math.max(C.length,3*ya);c<g;c++)C[c]=0;c=3*$;for(g=Math.max(H.length,3*ca);c<g;c++)H[c]=0;c=3*$;for(g=Math.max(Q.length,3*ca);c<g;c++)Q[c]=0;u.directional.length=R;u.point.length=X;u.spot.length=V;u.hemi.length=$;u.ambient[0]=f;u.ambient[1]=r;u.ambient[2]=q;fb=!1}h?(h=Jb,n.ambientLightColor.value=" h.ambient,n.directionallightcolor.value="h.directional.colors,n.directionalLightDirection.value=h.directional.positions,n.pointLightColor.value=h.point.colors,n.pointLightPosition.value=h.point.positions,n.pointLightDistance.value=h.point.distances,n.spotLightColor.value=h.spot.colors,n.spotLightPosition.value=h.spot.positions,n.spotLightDistance.value=h.spot.distances,n.spotLightDirection.value=h.spot.directions,n.spotLightAngleCos.value=h.spot.anglesCos,n.spotLightExponent.value=h.spot.exponents," n.hemispherelightskycolor.value="h.hemi.skyColors,n.hemisphereLightGroundColor.value=h.hemi.groundColors,n.hemisphereLightDirection.value=h.hemi.positions,y(n,!0)):y(n,!1)}if(d" three.meshbasicmaterial||d three.meshphongmaterial){n.opacity.value="d.opacity;G.gammaInput?n.diffuse.value.copyGammaToLinear(d.color):n.diffuse.value=d.color;n.map.value=d.map;n.lightMap.value=d.lightMap;n.specularMap.value=d.specularMap;n.alphaMap.value=d.alphaMap;" d.bumpmap&&(n.bumpmap.value="d.bumpMap,n.bumpScale.value=d.bumpScale);d.normalMap&&(n.normalMap.value=d.normalMap,n.normalScale.value.copy(d.normalScale));var" u;d.map?u="d.map:d.specularMap?U=d.specularMap:d.normalMap?U=d.normalMap:d.bumpMap?U=d.bumpMap:d.alphaMap&&(U=d.alphaMap);void" 0!="=U&&(h=U.offset,U=U.repeat,n.offsetRepeat.value.set(h.x,h.y,U.x,U.y));n.envMap.value=d.envMap;n.flipEnvMap.value=d.envMap" three.webglrendertargetcube?1:-1;n.reflectivity.value="d.reflectivity;n.refractionRatio.value=" d.refractionratio;n.combine.value="d.combine;n.useRefract.value=d.envMap&&d.envMap.mapping" three.cuberefractionmapping}d three.linebasicmaterial?(n.diffuse.value="d.color,n.opacity.value=d.opacity):d" three.linedashedmaterial?(n.diffuse.value="d.color,n.opacity.value=d.opacity,n.dashSize.value=d.dashSize,n.totalSize.value=d.dashSize+d.gapSize,n.scale.value=d.scale):d" three.pointcloudmaterial?(n.pscolor.value="d.color,n.opacity.value=d.opacity,n.size.value=d.size," n.scale.value="S.height/2,n.map.value=d.map):d" three.meshphongmaterial?(n.shininess.value="d.shininess,G.gammaInput?(n.ambient.value.copyGammaToLinear(d.ambient),n.emissive.value.copyGammaToLinear(d.emissive),n.specular.value.copyGammaToLinear(d.specular)):(n.ambient.value=d.ambient,n.emissive.value=d.emissive,n.specular.value=d.specular),d.wrapAround&&n.wrapRGB.value.copy(d.wrapRGB)):d" three.meshlambertmaterial?(g.gammainput?(n.ambient.value.copygammatolinear(d.ambient),n.emissive.value.copygammatolinear(d.emissive)): (n.ambient.value="d.ambient,n.emissive.value=d.emissive),d.wrapAround&&n.wrapRGB.value.copy(d.wrapRGB)):d" three.meshdepthmaterial?(n.mnear.value="a.near,n.mFar.value=a.far,n.opacity.value=d.opacity):d" three.meshnormalmaterial&&(n.opacity.value="d.opacity);if(e.receiveShadow&&!d._shadowPass&&n.shadowMatrix)for(U=a=0,h=b.length;U<h;U++)c=b[U],c.castShadow&&(c" three.spotlight||c three.directionallight&&!c.shadowcascade)&&(n.shadowmap.value[a]="c.shadowMap,n.shadowMapSize.value[a]=" c.shadowmapsize,n.shadowmatrix.value[a]="c.shadowMatrix,n.shadowDarkness.value[a]=c.shadowDarkness,n.shadowBias.value[a]=c.shadowBias,a++);b=d.uniformsList;d=0;for(n=b.length;d<n;d++)if(a=b[d][0],!1!==a.needsUpdate)switch(c=a.type,h=a.value,U=b[d][1],c){case" "1i":m.uniform1i(u,h);break;case "1f":m.uniform1f(u,h);break;case "2f":m.uniform2f(u,h[0],h[1]);break;case "3f":m.uniform3f(u,h[0],h[1],h[2]);break;case "4f":m.uniform4f(u,h[0],h[1],h[2],h[3]);break;case "1iv":m.uniform1iv(u,h);break;case "3iv":m.uniform3iv(u, h);break;case "1fv":m.uniform1fv(u,h);break;case "2fv":m.uniform2fv(u,h);break;case "3fv":m.uniform3fv(u,h);break;case "4fv":m.uniform4fv(u,h);break;case "matrix3fv":m.uniformmatrix3fv(u,!1,h);break;case "matrix4fv":m.uniformmatrix4fv(u,!1,h);break;case "i":m.uniform1i(u,h);break;case "f":m.uniform1f(u,h);break;case "v2":m.uniform2f(u,h.x,h.y);break;case "v3":m.uniform3f(u,h.x,h.y,h.z);break;case "v4":m.uniform4f(u,h.x,h.y,h.z,h.w);break;case "c":m.uniform3f(u,h.r,h.g,h.b);break;case "iv1":m.uniform1iv(u, "iv":m.uniform3iv(u,h);break;case "fv1":m.uniform1fv(u,h);break;case "fv":m.uniform3fv(u,h);break;case "v2v":void float32array(2*h.length));c="0;for(g=h.length;c<g;c++)f=2*c,a._array[f]=h[c].x,a._array[f+1]=h[c].y;m.uniform2fv(U,a._array);break;case" "v3v":void float32array(3*h.length));c="0;for(g=h.length;c<g;c++)f=3*c,a._array[f]=h[c].x,a._array[f+1]=h[c].y,a._array[f+2]=h[c].z;m.uniform3fv(U,a._array);break;case" "v4v":void a._array&&(a._array="new" float32array(4*h.length));c="0;for(g=h.length;c<g;c++)f=4*c,a._array[f]=h[c].x,a._array[f+1]=h[c].y,a._array[f+2]=h[c].z,a._array[f+3]=h[c].w;m.uniform4fv(U,a._array);break;case" "m3":m.uniformmatrix3fv(u,!1,h.elements);break;case "m3v":void float32array(9*h.length));c="0;for(g=h.length;c<g;c++)h[c].flattenToArrayOffset(a._array,9*c);m.uniformMatrix3fv(U,!1,a._array);break;case" "m4":m.uniformmatrix4fv(u,!1,h.elements);break;case "m4v":void (a._array="new" float32array(16*h.length));c="0;for(g=h.length;c<g;c++)h[c].flattenToArrayOffset(a._array,16*c);m.uniformMatrix4fv(U,!1,a._array);break;case" "t":f="h;h=K();m.uniform1i(U,h);if(!f)continue;if(f" three.cubetexture||f.image array&&6="==f.image.length){if(a=f,U=h,6===a.image.length)if(a.needsUpdate){a.image.__webglTextureCube||(a.addEventListener(" dispose",pb),a.image.__webgltexturecube="m.createTexture(),G.info.memory.textures++);m.activeTexture(m.TEXTURE0+U);m.bindTexture(m.TEXTURE_CUBE_MAP," a.image.__webgltexturecube);m.pixelstorei(m.unpack_flip_y_webgl,a.flipy);u="a" three.compressedtexture;h="[];for(c=0;6">c;c++)G.autoScaleCubemaps&&!U?(g=h,f=c,r=a.image[c],u=sc,r.width<=u&&r.height<=u||(v=math.max(r.width,r.height),q=math.floor(r.width*u v),u="Math.floor(r.height*u/v),v=document.createElement(" canvas"),v.width="q,v.height=u,v.getContext(" 2d").drawimage(r,0,0,r.width,r.height,0,0,q,u),r="v),g[f]=r):h[c]=a.image[c];c=h[0];g=THREE.Math.isPowerOfTwo(c.width)&&THREE.Math.isPowerOfTwo(c.height);""" f="B(a.format);r=B(a.type);E(m.TEXTURE_CUBE_MAP,a,g);for(c=0;6">c;c++)if(U)for(u=h[c].mipmaps,v=0,x=u.length;v<x;v++)q=u[v],a.format!==three.rgbaformat?m.compressedteximage2d(m.texture_cube_map_positive_x+c,v,f,q.width,q.height,0,q.data):m.teximage2d(m.texture_cube_map_positive_x+c,v,f,q.width,q.height,0,f,r,q.data);else 0="==a._array&&(a._array=[]);c=0;for(g=a.value.length;c<g;c++)a._array[c]=K();m.uniform1iv(U,a._array);c=0;for(g=a.value.length;c<g;c++)f=a.value[c],h=a._array[c],f&&G.setTexture(f,h);break;default:console.warn(" three.webglrenderer:" m.teximage2d(m.texture_cube_map_positive_x+c,0,f,f,r,h[c]);a.generatemipmaps&&g&&m.generatemipmap(m.texture_cube_map);a.needsupdate="!1;if(a.onUpdate)a.onUpdate()}else" m.activetexture(m.texture0+ u),m.bindtexture(m.texture_cube_map,a.image.__webgltexturecube)}else f instanceof three.webglrendertargetcube?(a="f,m.activeTexture(m.TEXTURE0+h),m.bindTexture(m.TEXTURE_CUBE_MAP,a.__webglTexture)):G.setTexture(f,h);break;case" "tv":void unknown uniform type: "+c)}}m.uniformmatrix4fv(l.modelviewmatrix, !1,e._modelviewmatrix.elements);l.normalmatrix&&m.uniformmatrix3fv(l.normalmatrix,!1,e._normalmatrix.elements);null!="=l.modelMatrix&&m.uniformMatrix4fv(l.modelMatrix,!1,e.matrixWorld.elements);return" k}function y(a,b){a.ambientlightcolor.needsupdate="b;a.directionalLightColor.needsUpdate=b;a.directionalLightDirection.needsUpdate=b;a.pointLightColor.needsUpdate=b;a.pointLightPosition.needsUpdate=b;a.pointLightDistance.needsUpdate=b;a.spotLightColor.needsUpdate=b;a.spotLightPosition.needsUpdate=b;a.spotLightDistance.needsUpdate=" b;a.spotlightdirection.needsupdate="b;a.spotLightAngleCos.needsUpdate=b;a.spotLightExponent.needsUpdate=b;a.hemisphereLightSkyColor.needsUpdate=b;a.hemisphereLightGroundColor.needsUpdate=b;a.hemisphereLightDirection.needsUpdate=b}function" k(){var a="qa;a">=Qb&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Qb);qa+=1;return a}function N(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}
function ba(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function P(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function O(a){a!==xa&&(m.lineWidth(a),xa=a)}function J(a,b,c){Qa!==a&&(a?m.enable(m.POLYGON_OFFSET_FILL):m.disable(m.POLYGON_OFFSET_FILL),Qa=a);!a||cb===b&&Ga===c||(m.polygonOffset(b,c),cb=b,Ga=c)}function E(a,b,c){c?(m.texParameteri(a,m.TEXTURE_WRAP_S,B(b.wrapS)),m.texParameteri(a,m.TEXTURE_WRAP_T,B(b.wrapT)),m.texParameteri(a,m.TEXTURE_MAG_FILTER,B(b.magFilter)),m.texParameteri(a,
m.TEXTURE_MIN_FILTER,B(b.minFilter))):(m.texParameteri(a,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(a,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texParameteri(a,m.TEXTURE_MAG_FILTER,R(b.magFilter)),m.texParameteri(a,m.TEXTURE_MIN_FILTER,R(b.minFilter)));Ta&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldanisotropy)&&(m.texparameterf(a,ta.texture_max_anisotropy_ext,math.min(b.anisotropy,rb)),b.__oldanisotropy=b.anisotropy)}function 0="==m.getShaderPrecisionFormat&&" q(a,b){m.bindrenderbuffer(m.renderbuffer,a);b.depthbuffer&&!b.stencilbuffer? (m.renderbufferstorage(m.renderbuffer,m.depth_component16,b.width,b.height),m.framebufferrenderbuffer(m.framebuffer,m.depth_attachment,m.renderbuffer,a)):b.depthbuffer&&b.stencilbuffer?(m.renderbufferstorage(m.renderbuffer,m.depth_stencil,b.width,b.height),m.framebufferrenderbuffer(m.framebuffer,m.depth_stencil_attachment,m.renderbuffer,a)):m.renderbufferstorage(m.renderbuffer,m.rgba4,b.width,b.height)}function l(a){a instanceof three.webglrendertargetcube?(m.bindtexture(m.texture_cube_map,a.__webgltexture), m.generatemipmap(m.texture_cube_map),m.bindtexture(m.texture_cube_map,null)):(m.bindtexture(m.texture_2d,a.__webgltexture),m.generatemipmap(m.texture_2d),m.bindtexture(m.texture_2d,null))}function r(a){return a="==THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?m.NEAREST:m.LINEAR}function" b(a){if(a="==THREE.RepeatWrapping)return" m.repeat;if(a="==THREE.ClampToEdgeWrapping)return" m.clamp_to_edge;if(a="==THREE.MirroredRepeatWrapping)return" m.mirrored_repeat; if(a="==THREE.NearestFilter)return" m.nearest;if(a="==THREE.NearestMipMapNearestFilter)return" m.nearest_mipmap_nearest;if(a="==THREE.NearestMipMapLinearFilter)return" m.nearest_mipmap_linear;if(a="==THREE.LinearFilter)return" m.linear;if(a="==THREE.LinearMipMapNearestFilter)return" m.linear_mipmap_nearest;if(a="==THREE.LinearMipMapLinearFilter)return" m.linear_mipmap_linear;if(a="==THREE.UnsignedByteType)return" m.unsigned_byte;if(a="==THREE.UnsignedShort4444Type)return" m.unsigned_short_4_4_4_4;if(a="==THREE.UnsignedShort5551Type)return" m.unsigned_short_5_5_5_1; m.unsigned_short_5_6_5;if(a="==THREE.ByteType)return" m.byte;if(a="==THREE.ShortType)return" m.short;if(a="==THREE.UnsignedShortType)return" m.unsigned_short;if(a="==THREE.IntType)return" m.int;if(a="==THREE.UnsignedIntType)return" m.unsigned_int;if(a="==THREE.FloatType)return" m.float;if(a="==THREE.AlphaFormat)return" m.alpha;if(a="==THREE.RGBFormat)return" m.rgb;if(a="==THREE.RGBAFormat)return" m.rgba;if(a="==THREE.LuminanceFormat)return" m.luminance;if(a="==THREE.LuminanceAlphaFormat)return" m.luminance_alpha; m.func_add;if(a="==THREE.SubtractEquation)return" m.func_subtract;if(a="==THREE.ReverseSubtractEquation)return" m.func_reverse_subtract;if(a="==THREE.ZeroFactor)return" m.zero;if(a="==THREE.OneFactor)return" m.one;if(a="==THREE.SrcColorFactor)return" m.src_color;if(a="==THREE.OneMinusSrcColorFactor)return" m.one_minus_src_color;if(a="==THREE.SrcAlphaFactor)return" m.src_alpha;if(a="==THREE.OneMinusSrcAlphaFactor)return" m.one_minus_src_alpha;if(a="==THREE.DstAlphaFactor)return" m.dst_alpha; m.one_minus_dst_alpha;if(a="==THREE.DstColorFactor)return" m.dst_color;if(a="==THREE.OneMinusDstColorFactor)return" m.one_minus_dst_color;if(a="==THREE.SrcAlphaSaturateFactor)return" m.src_alpha_saturate;if(void 0!="=Sa){if(a===THREE.RGB_S3TC_DXT1_Format)return" sa.compressed_rgb_s3tc_dxt1_ext;if(a="==THREE.RGBA_S3TC_DXT1_Format)return" sa.compressed_rgba_s3tc_dxt1_ext;if(a="==THREE.RGBA_S3TC_DXT3_Format)return" sa.compressed_rgba_s3tc_dxt3_ext;if(a="==THREE.RGBA_S3TC_DXT5_Format)return" sa.compressed_rgba_s3tc_dxt5_ext}return 0} console.log("three.webglrenderer",three.revision);a="a||{};var" s="void" !1,aa="new" three.color(0),za="0,Oa=[],Pa=[];this.domElement=S;this.context=null;this.devicePixelRatio=void" !1;this.maxmorphtargets="8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var" g="this,Ba=[],Ya=null,Za=null,Ca=-1,ca=null,la=null,qa=0,ua=-1,ja=-1,Fa=-1,va=-1,Ka=-1,aa=-1,ra=-1,Da=-1,Qa=null,cb=null,Ga=null,xa=null,ma=0,Ja=0,wb=S.width,sb=S.height,Hb=0,Ib=0,pb=new" uint8array(16),tb="new" uint8array(16),jc="new" three.frustum,ub="new" three.matrix4,kc="new" three.matrix4, ea="new" three.vector3,da="new" three.vector3,fb="!0,Jb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},m,Db,xb,Ta,Sa,Eb;(function(){try{var" a);if(null="==m)throw" error" creating webgl context.";}catch(b){console.error(b)}db="m.getExtension(" oes_texture_float");m.getextension("oes_texture_float_linear");xb="m.getExtension(" oes_standard_derivatives");ta="m.getExtension("EXT_texture_filter_anisotropic")||m.getExtension("MOZ_EXT_texture_filter_anisotropic")||m.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Sa=m.getExtension("WEBGL_compressed_texture_s3tc")||m.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||m.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");""" eb="m.getExtension(" oes_element_index_uint");null="==Db&&console.log(" three.webglrenderer:"" float textures not supported.");null="==xb&&console.log(" three.webglrenderer:" standard derivatives anisotropic texture filtering s3tc compressed elementindex as unsigned integer supported.");void (m.getshaderprecisionformat="function(){return{rangeMin:1,rangeMax:1,precision:1}});Ea&&m.getExtension(" ext_frag_depth")})();m.clearcolor(0,0,0,1);m.cleardepth(1);m.clearstencil(0);m.enable(m.depth_test);m.depthfunc(m.lequal);m.frontface(m.ccw);m.cullface(m.back);m.enable(m.cull_face);m.enable(m.blend);m.blendequation(m.func_add);m.blendfunc(m.src_alpha,m.one_minus_src_alpha);m.viewport(ma,ja,wb,sb);m.clearcolor(aa.r,aa.g,aa.b,za);this.context="m;var" " qb="m.getParameter(m.MAX_TEXTURE_IMAGE_UNITS),tc=" m.getparameter(m.max_vertex_texture_image_units);m.getparameter(m.max_texture_size);var sc="m.getParameter(m.MAX_CUBE_MAP_TEXTURE_SIZE),Rb=Ta?m.getParameter(Ta.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Sb=0<tc,Ob=Sb&&Db;Sa&&m.getParameter(m.COMPRESSED_TEXTURE_FORMATS);var" zc="m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.HIGH_FLOAT),Ac=m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.MEDIUM_FLOAT);m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.LOW_FLOAT);var" bc="m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.HIGH_FLOAT)," cc="m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.MEDIUM_FLOAT);m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.LOW_FLOAT);var" dc="0<zc.precision&&0<Bc.precision,ec=0<Ac.precision&&0<Cc.precision;" highp"!="=W||Dc||(ec?(W=" mediump",console.warn("three.webglrenderer:"" highp supported, using mediump.")):(w="lowp" ,console.warn("three.webglrenderer: and mediump lowp.")));"mediump"!="=W||ec||(W=" lowp",console.warn("three.webglrenderer:" lowp."));this.getcontext="function(){return" m};this.supportsvertextextures="function(){return" sb};this.supportsfloattextures="function(){return" db};this.supportsstandardderivatives="function(){return" xb};this.supportscompressedtextures3tc="function(){return" sa};this.getmaxanisotropy="function(){return" rb};this.getprecision="function(){return" w};this.setsize="function(a,b,c){S.width=a*this.devicePixelRatio;S.height=b*this.devicePixelRatio;!1!==c&&(S.style.width=a+" px",s.style.height="b+" px");this.setviewport(0,0,a,b)};this.setviewport function(a,b,c,d){ma="a*this.devicePixelRatio;Ja=b*this.devicePixelRatio;wb=c*this.devicePixelRatio;sb=d*this.devicePixelRatio;m.viewport(ma,Ja,wb,sb)};this.setScissor=function(a,b,c,d){m.scissor(a*this.devicePixelRatio,b*this.devicePixelRatio,c*this.devicePixelRatio,d*this.devicePixelRatio)};this.enableScissorTest=function(a){a?m.enable(m.SCISSOR_TEST):m.disable(m.SCISSOR_TEST)};this.setClearColor=function(a,b){Aa.set(a);za=void" b){console.warn("three.webglrenderer: .setclearcolorhex() is being removed. use .setclearcolor() instead.");this.setclearcolor(a,b)};this.getclearcolor="function(){return" aa};this.getclearalpha="function(){return" za};this.clear="function(a,b,c){var" d="0;if(void" function(){m.clear(m.stencil_buffer_bit)};this.cleartarget="function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.updateShadowMap=function(a,b){Ya=null;Ca=ca=Da=ra=Fa=-1;fb=!0;ja=ua=-1;fc(a);this.shadowMapPlugin.update(a,b)};var" gc="function(a){a=a.target;a.removeEventListener(" dispose",gc);a.__webglinit="void" 0;if(a three.buffergeometry){a="a.attributes;for(var" b in a)void if(void c="a.geometryGroupsList.length;b<c;b++){var" e="0,f=d.numMorphTargets;e<f;e++)m.deleteBuffer(d.__webglMorphTargetsBuffers[e]);if(void" tb(a)},pb="function(a){a=a.target;a.removeEventListener(" dispose"," pb);a.image&&a.image.__webgltexturecube?m.deletetexture(a.image.__webgltexturecube):a.__webglinit&&(a.__webglinit="!1,m.deleteTexture(a.__webglTexture));G.info.memory.textures--},hc=function(a){a=a.target;a.removeEventListener(" dispose",hc);if(a&&a.__webgltexture)if(m.deletetexture(a.__webgltexture),a" three.webglrendertargetcube)for(var>b;b++)m.deleteFramebuffer(a.__webglFramebuffer[b]),m.deleteRenderbuffer(a.__webglRenderbuffer[b]);else m.deleteFramebuffer(a.__webglFramebuffer),m.deleteRenderbuffer(a.__webglRenderbuffer);
G.info.memory.textures--},ic=function(a){a=a.target;a.removeEventListener("dispose",ic);Nb(a)},Tb=function(a){void 0!==a.__webglVertexBuffer&&m.deleteBuffer(a.__webglVertexBuffer);void 0!==a.__webglNormalBuffer&&m.deleteBuffer(a.__webglNormalBuffer);void 0!==a.__webglTangentBuffer&&m.deleteBuffer(a.__webglTangentBuffer);void 0!==a.__webglColorBuffer&&m.deleteBuffer(a.__webglColorBuffer);void 0!==a.__webglUVBuffer&&m.deleteBuffer(a.__webglUVBuffer);void 0!==a.__webglUV2Buffer&&m.deleteBuffer(a.__webglUV2Buffer);
void 0!==a.__webglSkinIndicesBuffer&&m.deleteBuffer(a.__webglSkinIndicesBuffer);void 0!==a.__webglSkinWeightsBuffer&&m.deleteBuffer(a.__webglSkinWeightsBuffer);void 0!==a.__webglFaceBuffer&&m.deleteBuffer(a.__webglFaceBuffer);void 0!==a.__webglLineBuffer&&m.deleteBuffer(a.__webglLineBuffer);void 0!==a.__webglLineDistanceBuffer&&m.deleteBuffer(a.__webglLineDistanceBuffer);if(void 0!==a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)m.deleteBuffer(a.__webglCustomAttributesList[b].buffer);
G.info.memory.geometries--},Nb=function(a){var b=a.program.program;if(void 0!==b){a.program=void 0;var c,d,e=!1;a=0;for(c=Ba.length;a<c;a++)if(d=ba[a],d.program===b){d.usedtimes--;0===d.usedtimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=ba.length;a<c;a++)d=ba[a],d.program!==b&&e.push(d);ba=e;m.deleteprogram(b);g.info.memory.programs--}}};this.renderbufferimmediate=function(a,b,c){k();a.haspositions&&!a.__webglvertexbuffer&&(a.__webglvertexbuffer=m.createbuffer());a.hasnormals&&!a.__webglnormalbuffer&& (a.__webglnormalbuffer="m.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=m.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=m.createBuffer());a.hasPositions&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglVertexBuffer),m.bufferData(m.ARRAY_BUFFER,a.positionArray,m.DYNAMIC_DRAW),l(b.attributes.position),m.vertexAttribPointer(b.attributes.position,3,m.FLOAT,!1,0,0));if(a.hasNormals){m.bindBuffer(m.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var" d, e,f,g,h,p,r,q,s,t,u,w="3*a.count;for(u=0;u<w;u+=9)t=a.normalArray,d=t[u],e=t[u+1],f=t[u+2],g=t[u+3],p=t[u+4],q=t[u+5],h=t[u+6],r=t[u+7],s=t[u+8],d=(d+g+h)/3,e=(e+p+r)/3,f=(f+q+s)/3,t[u]=d,t[u+1]=e,t[u+2]=f,t[u+3]=d,t[u+4]=e,t[u+5]=f,t[u+6]=d,t[u+7]=e,t[u+8]=f}m.bufferData(m.ARRAY_BUFFER,a.normalArray,m.DYNAMIC_DRAW);l(b.attributes.normal);m.vertexAttribPointer(b.attributes.normal,3,m.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglUvBuffer),m.bufferData(m.ARRAY_BUFFER,a.uvArray," m.dynamic_draw),l(b.attributes.uv),m.vertexattribpointer(b.attributes.uv,2,m.float,!1,0,0));a.hascolors&&c.vertexcolors!="=THREE.NoColors&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,a.colorArray,m.DYNAMIC_DRAW),l(b.attributes.color),m.vertexAttribPointer(b.attributes.color,3,m.FLOAT,!1,0,0));n();m.drawArrays(m.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible){var" g="z(a,b,c,d,f);a=g.attributes;b=e.attributes;c=!1;g=16777215*" e.id+2*g.id+(d.wireframe?1:0);g!="=ca&&(ca=g,c=!0);c&&k();if(f" instanceof three.mesh)if(g="b.index){var" l,n;g.array uint32array?(l="m.UNSIGNED_INT,n=4):(l=m.UNSIGNED_SHORT,n=2);e=e.offsets;if(0===e.length)c&&(h(d,a,b,0),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,g.buffer)),m.drawElements(m.TRIANGLES,g.array.length,l,0),G.info.render.calls++,G.info.render.vertices+=g.array.length,G.info.render.faces+=g.array.length/3;else{c=!0;for(var" p="0,r=e.length;p<r;p++){var" q="e[p].index;c&&(h(d,a,b,q),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER," g.buffer));m.drawelements(m.triangles,e[p].count,l,e[p].start*n);g.info.render.calls++;g.info.render.vertices+="e[p].count;G.info.render.faces+=e[p].count/3}}}else" c&&h(d,a,b,0),d="e.attributes.position,m.drawArrays(m.TRIANGLES,0,d.array.length/3),G.info.render.calls++,G.info.render.vertices+=d.array.length/3,G.info.render.faces+=d.array.length/9;else" if(f three.pointcloud)c&&h(d,a,b,0),d="b.position,m.drawArrays(m.POINTS,0,d.array.length/3),G.info.render.calls++,G.info.render.points+=d.array.length/" 3;else three.line)if(f="f.type===THREE.LineStrip?m.LINE_STRIP:m.LINES,O(d.linewidth),g=b.index)if(g.array" for(1<e.length&&(c="!0),p=0,r=e.length;p<r;p++)q=e[p].index,c&&(h(d,a,b,q),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,g.buffer))," m.drawelements(f,e[p].count,l,e[p].start*n),g.info.render.calls++,g.info.render.vertices+="e[p].count;else" g,h;c="z(a,b,c,d,f);b=c.attributes;a=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==ca&&(ca=c,a=!0);a&&k();if(!d.morphTargets&&0<=b.position)a&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglVertexBuffer),l(b.position)," m.vertexattribpointer(b.position,3,m.float,!1,0,0));else if(f.morphtargetbase){c="d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),l(c.position),m.vertexAttribPointer(c.position,3,m.FLOAT,!1,0,0)):0<=c.position&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglVertexBuffer),l(c.position),m.vertexAttribPointer(c.position,3,m.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var" d.numsupportedmorphtargets&&p<h.length;)0<="c[" morphtarget"+p]&&(m.bindbuffer(m.array_buffer,e.__webglmorphtargetsbuffers[h[p]]),l(c["morphtarget"+p]),m.vertexattribpointer(c["morphtarget"+p],3,m.float,!1,0,0)),0<="c[" morphnormal"+p]&&d.morphnormals&&(m.bindbuffer(m.array_buffer,e.__webglmorphnormalsbuffers[h[p]]),l(c["morphnormal"+p]),m.vertexattribpointer(c["morphnormal"+p],3,m.float,!1,0,0)),f.__webglmorphtargetinfluences[p]="g[h[p]],p++}else{h=[];g=f.morphTargetInfluences;var""" r,q="g.length;for(r=" 0;r<q;r++)p="g[r],0<p&&h.push([p,r]);h.length">d.numSupportedMorphTargets?(h.sort(t),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(t):0===h.length&&h.push([0,0]);for(p=0;p<d.numsupportedmorphtargets;)h[p]?(r=h[p][1],0<=c["morphtarget"+p]&&(m.bindbuffer(m.array_buffer,e.__webglmorphtargetsbuffers[r]),l(c["morphtarget"+p]),m.vertexattribpointer(c["morphtarget"+p],3,m.float,!1,0,0)),0<=c["morphnormal"+p]&&d.morphnormals&&(m.bindbuffer(m.array_buffer,e.__webglmorphnormalsbuffers[r]), 0="==b.parent&&b.updateMatrixWorld();e(a);b.matrixWorldInverse.getInverse(b.matrixWorld);Ub.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);jc.setFromMatrix(Ub);fc(a);Oa.length=0;Pa.length=0;s(a,a,b);!0===G.sortObjects&&(Oa.sort(q),Pa.sort(r));p(this.renderPluginsPre,a,b);G.info.render.calls=0;G.info.render.vertices=0;G.info.render.faces=0;G.info.render.points=0;this.setRenderTarget(c);(this.autoClear||" l(c["morphnormal"+p]),m.vertexattribpointer(c["morphnormal"+p],3,m.float,!1,0,0)),f.__webglmorphtargetinfluences[p]="g[r]):f.__webglMorphTargetInfluences[p]=0,p++}null!==d.program.uniforms.morphTargetInfluences&&m.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList)for(g=0,h=e.__webglCustomAttributesList.length;g<h;g++)c=e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(m.bindBuffer(m.ARRAY_BUFFER,c.buffer),l(b[c.buffer.belongsToAttribute])," m.vertexattribpointer(b[c.buffer.belongstoattribute],c.size,m.float,!1,0,0));0<="b.color&&(0<f.geometry.colors.length||0<f.geometry.faces.length?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglColorBuffer),l(b.color),m.vertexAttribPointer(b.color,3,m.FLOAT,!1,0,0)):d.defaultAttributeValues&&m.vertexAttrib3fv(b.color,d.defaultAttributeValues.color));0<=b.normal&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglNormalBuffer),l(b.normal),m.vertexAttribPointer(b.normal,3,m.FLOAT,!1,0,0));0<=b.tangent&&(m.bindBuffer(m.ARRAY_BUFFER," e.__webgltangentbuffer),l(b.tangent),m.vertexattribpointer(b.tangent,4,m.float,!1,0,0));0<="b.uv&&(f.geometry.faceVertexUvs[0]?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglUVBuffer),l(b.uv),m.vertexAttribPointer(b.uv,2,m.FLOAT,!1,0,0)):d.defaultAttributeValues&&m.vertexAttrib2fv(b.uv,d.defaultAttributeValues.uv));0<=b.uv2&&(f.geometry.faceVertexUvs[1]?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglUV2Buffer),l(b.uv2),m.vertexAttribPointer(b.uv2,2,m.FLOAT,!1,0,0)):d.defaultAttributeValues&&m.vertexAttrib2fv(b.uv2," d.defaultattributevalues.uv2));d.skinning&&0<="b.skinIndex&&0<=b.skinWeight&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),l(b.skinIndex),m.vertexAttribPointer(b.skinIndex,4,m.FLOAT,!1,0,0),m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),l(b.skinWeight),m.vertexAttribPointer(b.skinWeight,4,m.FLOAT,!1,0,0));0<=b.lineDistance&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglLineDistanceBuffer),l(b.lineDistance),m.vertexAttribPointer(b.lineDistance,1,m.FLOAT,!1,0,0))}n();f" instanceof three.mesh? (f="e.__typeArray===Uint32Array?m.UNSIGNED_INT:m.UNSIGNED_SHORT,d.wireframe?(O(d.wireframeLinewidth),a&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),m.drawElements(m.LINES,e.__webglLineCount,f,0)):(a&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),m.drawElements(m.TRIANGLES,e.__webglFaceCount,f,0)),G.info.render.calls++,G.info.render.vertices+=e.__webglFaceCount,G.info.render.faces+=e.__webglFaceCount/3):f" three.line?(f="f.type===THREE.LineStrip?m.LINE_STRIP:m.LINES," o(d.linewidth),m.drawarrays(f,0,e.__webgllinecount),g.info.render.calls++):f three.pointcloud&&(m.drawarrays(m.points,0,e.__webglparticlecount),g.info.render.calls++,g.info.render.points+="e.__webglParticleCount)}};this.render=function(a,b,c,d){function" e(a){a three.skinnedmesh&&a.skeleton.update();for(var b="0,c=a.children.length;b<c;b++)e(a.children[b])}if(!1===b" three.camera)console.error("three.webglrenderer.render: camera is not an instance of three.camera.");else{var f, g,h,k,m="a.__lights,l=a.fog;Ca=-1;la=null;fb=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void" d)&&this.clear(this.autoclearcolor,this.autocleardepth,this.autoclearstencil);k="a.__webglObjectsImmediate;d=0;for(f=k.length;d<f;d++)g=k[d],h=g.object,h.visible&&(N(h,b),u(g));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),J(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),v(Oa,b,m,l,!0,d),v(Pa,b,m,l,!0,d),w(a.__webglObjectsImmediate," ",b,m,l,!1,d)):(d="null,this.setBlending(THREE.NoBlending)," " v(oa,b,m,l,!1,d),w(a.__webglobjectsimmediate,"opaque",b,m,l,!1,d),v(pa,b,m,l,!0,d),w(a.__webglobjectsimmediate,"transparent",b,m,l,!0,d));p(this.renderpluginspost,a,b);c&&c.generatemipmaps&&c.minfilter!="=THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&L(c);this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var" f="z(a,b,c,d,e);ca=-1;G.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,m,jc):e.render(function(a){G.renderBufferImmediate(a," f,d)})};var fc="function(a){a.__webglObjects||(a.__webglObjects={},a.__webglObjectsImmediate=[]);for(;a.__objectsAdded.length;){var" c="a.__objectsAdded[0],d=a,e=void" 0,f="void" 0;void three.matrix4,c._normalmatrix="new" three.matrix3);e="c.geometry;if(void" 0!="=e&&void" three.buffergeometry)g(e);else if(c three.mesh)void c,e);else three.line){if(!e.__webglvertexbuffer){f="e;f.__webglVertexBuffer=m.createBuffer();f.__webglColorBuffer=m.createBuffer();f.__webglLineDistanceBuffer=m.createBuffer();G.info.memory.geometries++;var" float32array(3*k);f.__colorarray="new" float32array(3*k);f.__linedistancearray="new" float32array(1*k);f.__webgllinecount="k;b(f,h);e.verticesNeedUpdate=!0;e.colorsNeedUpdate=!0;e.lineDistancesNeedUpdate=!0}}else" three.pointcloud&& !e.__webglvertexbuffer&&(f="e,f.__webglVertexBuffer=m.createBuffer(),f.__webglColorBuffer=m.createBuffer(),G.info.memory.geometries++,f=e,h=c,k=f.vertices.length,f.__vertexArray=new" float32array(3*k),f.__colorarray="new" float32array(3*k),f.__sortarray="[],f.__webglParticleCount=k,b(f,h),e.verticesNeedUpdate=!0,e.colorsNeedUpdate=!0);if(void" three.mesh)if(e="c.geometry,e" three.buffergeometry)a(d.__webglobjects,e,c);else{if(e three.geometry)for(h="0,k=e.geometryGroupsList.length;h<k;h++)f=e.geometryGroupsList[h],A(d.__webglObjects,f,c)}else" three.line||c three.pointcloud?(e="c.geometry,A(d.__webglObjects,e,c)):(c" three.immediaterenderobject||c.immediaterendercallback)&&d.__webglobjectsimmediate.push({id:null,object:c,opaque:null,transparent:null,z:0});c.__webglactive="!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;)I(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1)};this.initMaterial=" function(a,b,c,d){var e,f,g,h;a.addeventlistener("dispose",ic);var k,l,n,p;a three.meshdepthmaterial?p="depth" :a three.meshnormalmaterial?p="normal" three.meshbasicmaterial?p="basic" three.meshlambertmaterial?p="lambert" three.meshphongmaterial?p="phong" three.linebasicmaterial?p="basic" three.linedashedmaterial?p="dashed" three.pointcloudmaterial&&(p="particle_basic" );p?(e="THREE.ShaderLib[p],a.__webglShader=" {uniforms:three.uniformsutils.clone(e.uniforms),vertexshader:e.vertexshader,fragmentshader:e.fragmentshader}):a.__webglshader="{uniforms:a.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader};n=h=g=f=e=0;for(var" r="b.length;n<r;n++){var" q="b[n];q.onlyShadow||!1===q.visible||(q" three.directionallight&&e++,q three.pointlight&&f++,q three.spotlight&&g++,q three.hemispherelight&&h++)}r="n=0;for(q=b.length;r<q;r++){var" s="b[r];s.castShadow&&(s" three.spotlight&&n++,s three.directionallight&&!s.shadowcascade&&n++)}b="n;Ob&&d&&d.skeleton&&d.skeleton.useVertexTexture?n=1024:(n=m.getParameter(m.MAX_VERTEX_UNIFORM_VECTORS),n=Math.floor((n-20)/4),void" three.skinnedmesh&&(n="Math.min(d.skeleton.bones.length,n),n<d.skeleton.bones.length&&console.warn(" webglrenderer:" too many bones - "+d.skeleton.bones.length+", this gpu supports just "+n+" (try opengl instead angle)")));c="{precision:W,supportsVertexTextures:Sb,map:!!a.map," envmap:!!a.envmap,lightmap:!!a.lightmap,bumpmap:!!a.bumpmap,normalmap:!!a.normalmap,specularmap:!!a.specularmap,alphamap:!!a.alphamap,vertexcolors:a.vertexcolors,fog:c,usefog:a.fog,fogexp:c three.fogexp2,sizeattenuation:a.sizeattenuation,logarithmicdepthbuffer:ea,skinning:a.skinning,maxbones:n,usevertextexture:ob&&d&&d.skeleton&&d.skeleton.usevertextexture,morphtargets:a.morphtargets,morphnormals:a.morphnormals,maxmorphtargets:this.maxmorphtargets,maxmorphnormals:this.maxmorphnormals,maxdirlights:e, maxpointlights:f,maxspotlights:g,maxhemilights:h,maxshadows:b,shadowmapenabled:this.shadowmapenabled&&d.receiveshadow&&0<b,shadowmaptype:this.shadowmaptype,shadowmapdebug:this.shadowmapdebug,shadowmapcascade:this.shadowmapcascade,alphatest:a.alphatest,metal:a.metal,wraparound:a.wraparound,doublesided:a.side="==THREE.DoubleSide,flipSided:a.side===THREE.BackSide};d=[];p?d.push(p):(d.push(a.fragmentShader),d.push(a.vertexShader));for(var" t in a.defines)d.push(t),d.push(a.defines[t]);for(l c)d.push(l), d.push(c[l]);p="d.join();var" u;l="0;for(t=Ba.length;l<t;l++)if(d=Ba[l],d.code===p){u=d;u.usedTimes++;break}void" three.webglprogram(this,p,a,c),ba.push(u),g.info.memory.programs="Ba.length);a.program=u;u=a.program.attributes;if(a.morphTargets)for(a.numSupportedMorphTargets=0,t=" morphtarget",l="0;l<this.maxMorphTargets;l++)p=t+l,0<=u[p]&&a.numSupportedMorphTargets++;if(a.morphNormals)for(a.numSupportedMorphNormals=0,t=" morphnormal",l="0;l<this.maxMorphNormals;l++)p=t+l,0<=u[p]&&a.numSupportedMorphNormals++;""" a.uniformslist="[];for(k" a.__webglshader.uniforms)(l="a.program.uniforms[k])&&a.uniformsList.push([a.__webglShader.uniforms[k],l])};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?m.disable(m.CULL_FACE):(b===THREE.FrontFaceDirectionCW?m.frontFace(m.CW):m.frontFace(m.CCW),a===THREE.CullFaceBack?m.cullFace(m.BACK):a===THREE.CullFaceFront?m.cullFace(m.FRONT):m.cullFace(m.FRONT_AND_BACK),m.enable(m.CULL_FACE))};this.setMaterialFaces=function(a){var" ua!="=b&&(b?m.disable(m.CULL_FACE):m.enable(m.CULL_FACE),ua=b);ja!==a&&(a?m.frontFace(m.CW):m.frontFace(m.CCW),ja=a)};this.setDepthTest=function(a){ra!==a&&(a?m.enable(m.DEPTH_TEST):m.disable(m.DEPTH_TEST),ra=a)};this.setDepthWrite=function(a){Da!==a&&(m.depthMask(a),Da=a)};this.setBlending=function(a,b,c,d){a!==Fa&&(a===THREE.NoBlending?m.disable(m.BLEND):a===THREE.AdditiveBlending?(m.enable(m.BLEND),m.blendEquation(m.FUNC_ADD),m.blendFunc(m.SRC_ALPHA,m.ONE)):a===THREE.SubtractiveBlending?(m.enable(m.BLEND)," m.blendequation(m.func_add),m.blendfunc(m.zero,m.one_minus_src_color)):a="==THREE.MultiplyBlending?(m.enable(m.BLEND),m.blendEquation(m.FUNC_ADD),m.blendFunc(m.ZERO,m.SRC_COLOR)):a===THREE.CustomBlending?m.enable(m.BLEND):(m.enable(m.BLEND),m.blendEquationSeparate(m.FUNC_ADD,m.FUNC_ADD),m.blendFuncSeparate(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA,m.ONE,m.ONE_MINUS_SRC_ALPHA)),Fa=a);if(a===THREE.CustomBlending){if(b!==va&&(m.blendEquation(B(b)),va=b),c!==Ka||d!==aa)m.blendFunc(B(c),B(d)),Ka=c,aa=d}else" aa="Ka=va=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener(" dispose",pb),a.__webgltexture="m.createTexture(),G.info.memory.textures++);m.activeTexture(m.TEXTURE0+b);m.bindTexture(m.TEXTURE_2D,a.__webglTexture);m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,a.flipY);m.pixelStorei(m.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);m.pixelStorei(m.UNPACK_ALIGNMENT,a.unpackAlignment);var" e="B(a.format),f=B(a.type);E(m.TEXTURE_2D,a,d);var" g="a.mipmaps;if(a" three.datatexture)if(0<g.length&&d){for(var h="0,k=g.length;h<k;h++)c=g[h],m.texImage2D(m.TEXTURE_2D,h,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else" m.teximage2d(m.texture_2d,0,e,c.width,c.height,0,e,f,c.data);else if(a three.compressedtexture)for(h="0,k=g.length;h<k;h++)c=g[h],a.format!==THREE.RGBAFormat?m.compressedTexImage2D(m.TEXTURE_2D,h,e,c.width,c.height,0,c.data):m.texImage2D(m.TEXTURE_2D,h," e,c.width,c.height,0,e,f,c.data);else if(0<g.length&&d){h="0;for(k=g.length;h<k;h++)c=g[h],m.texImage2D(m.TEXTURE_2D,h,e,e,f,c);a.generateMipmaps=!1}else" m.teximage2d(m.texture_2d,0,e,e,f,a.image);a.generatemipmaps&&d&&m.generatemipmap(m.texture_2d);a.needsupdate="!1;if(a.onUpdate)a.onUpdate()}else" m.activetexture(m.texture0+b),m.bindtexture(m.texture_2d,a.__webgltexture)};this.setrendertarget="function(a){var" three.webglrendertargetcube;if(a&&!a.__webglframebuffer){void (a.depthbuffer="!0);void">f;f++){a.__webglFramebuffer[f]=m.createFramebuffer();a.__webglRenderbuffer[f]=m.createRenderbuffer();
m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=m.TEXTURE_CUBE_MAP_POSITIVE_X+f;m.bindFramebuffer(m.FRAMEBUFFER,a.__webglFramebuffer[f]);m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,h,g.__webglTexture,0);Q(a.__webglRenderbuffer[f],a)}c&&m.generateMipmap(m.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=m.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:m.createRenderbuffer(),m.bindTexture(m.TEXTURE_2D,a.__webglTexture),
E(m.TEXTURE_2D,a,c),m.texImage2D(m.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=m.TEXTURE_2D,m.bindFramebuffer(m.FRAMEBUFFER,a.__webglFramebuffer),m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_STENCIL_ATTACHMENT,m.RENDERBUFFER,a.__webglRenderbuffer):
Q(a.__webglRenderbuffer,a),c&&m.generateMipmap(m.TEXTURE_2D);b?m.bindTexture(m.TEXTURE_CUBE_MAP,null):m.bindTexture(m.TEXTURE_2D,null);m.bindRenderbuffer(m.RENDERBUFFER,null);m.bindFramebuffer(m.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=wb,a=sb,d=ma,e=Ja);b!==Za&&(m.bindFramebuffer(m.FRAMEBUFFER,b),m.viewport(d,e,c,a),Za=b);Hb=c;Ib=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);
this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){this.width=a;this.height=b},clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;
a.shareDepthFrom=this.shareDepthFrom;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);
THREE.WebGLProgram=function(){var a=0;return function(b,c,d,e){var f=b.context,g=d.defines,h=d.__webglShader.uniforms,k=d.attributes,l=d.__webglShader.vertexShader,n=d.__webglShader.fragmentShader,q=d.index0AttributeName;void 0===q&&!0===e.morphTargets&&(q="position");var r="SHADOWMAP_TYPE_BASIC";e.shadowMapType===THREE.PCFShadowMap?r="SHADOWMAP_TYPE_PCF":e.shadowMapType===THREE.PCFSoftShadowMap&&(r="SHADOWMAP_TYPE_PCF_SOFT");var t,s;t=[];for(var p in g)s=g[p],!1!==s&&(s="#define "+p+" "+s,t.push(s));
t=t.join("\n");g=f.createProgram();d instanceof THREE.RawShaderMaterial?b=d="":(d=["precision "+e.precision+" float;","precision "+e.precision+" int;",t,e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_HEMI_LIGHTS "+e.maxHemiLights,"#define MAX_SHADOWS "+e.maxShadows,"#define MAX_BONES "+
e.maxBones,e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.lightMap?"#define USE_LIGHTMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.vertexColors?"#define USE_COLOR":"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals?"#define USE_MORPHNORMALS":"",e.wrapAround?"#define WRAP_AROUND":
"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+r:"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),
b=["precision "+e.precision+" float;","precision "+e.precision+" int;",e.bumpMap||e.normalMap?"#extension GL_OES_standard_derivatives : enable":"",t,"#define MAX_DIR_LIGHTS "+e.maxDirLights,"#define MAX_POINT_LIGHTS "+e.maxPointLights,"#define MAX_SPOT_LIGHTS "+e.maxSpotLights,"#define MAX_HEMI_LIGHTS "+e.maxHemiLights,"#define MAX_SHADOWS "+e.maxShadows,e.alphaTest?"#define ALPHATEST "+e.alphaTest:"",b.gammaInput?"#define GAMMA_INPUT":"",b.gammaOutput?"#define GAMMA_OUTPUT":"",e.useFog&&e.fog?"#define USE_FOG":
"",e.useFog&&e.fogExp?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.lightMap?"#define USE_LIGHTMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.vertexColors?"#define USE_COLOR":"",e.metal?"#define METAL":"",e.wrapAround?"#define WRAP_AROUND":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":
"",e.shadowMapEnabled?"#define "+r:"",e.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",e.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"));l=new THREE.WebGLShader(f,f.VERTEX_SHADER,d+l);n=new THREE.WebGLShader(f,f.FRAGMENT_SHADER,b+n);f.attachShader(g,l);f.attachShader(g,n);void 0!==q&&f.bindAttribLocation(g,0,q);f.linkProgram(g);!1===f.getProgramParameter(g,f.LINK_STATUS)&&(console.error("THREE.WebGLProgram: Could not initialise shader."),
console.error("gl.VALIDATE_STATUS",f.getProgramParameter(g,f.VALIDATE_STATUS)),console.error("gl.getError()",f.getError()));""!==f.getProgramInfoLog(g)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f.getProgramInfoLog(g));f.deleteShader(l);f.deleteShader(n);q="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" ");e.useVertexTexture?(q.push("boneTexture"),q.push("boneTextureWidth"),q.push("boneTextureHeight")):
q.push("boneGlobalMatrices");e.logarithmicDepthBuffer&&q.push("logDepthBufFC");for(var v in h)q.push(v);h=q;v={};q=0;for(b=h.length;q<b;q++)r=h[q],v[r]=f.getuniformlocation(g,r);this.uniforms=v;q="position normal uv uv2 tangent color skinindex skinweight linedistance".split(" ");for(h="0;h<e.maxMorphTargets;h++)q.push(" morphtarget"+h);for(h="0;h<e.maxMorphNormals;h++)q.push(" morphnormal"+h);for(var"" w in k)q.push(w);e="q;k={};w=0;for(h=e.length;w<h;w++)v=e[w],k[v]=f.getAttribLocation(g,v);this.attributes=" k;this.id="a++;this.code=c;this.usedTimes=1;this.program=g;this.vertexShader=l;this.fragmentShader=n;return" this}}(); three.webglshader="function(){var" a="function(a){a=a.split(" \n");for(var" c="0;c<a.length;c++)a[c]=c+1+" :" "+a[c];return a.join("\n")};return function(b,c,d){c="b.createShader(c);b.shaderSource(c,d);b.compileShader(c);!1===b.getShaderParameter(c,b.COMPILE_STATUS)&&console.error(" three.webglshader:" shader couldn't compile.");""!="=b.getShaderInfoLog(c)&&(console.warn(" gl.getshaderinfolog()",b.getshaderinfolog(c)),console.warn(a(d)));return c}}(); three.renderablevertex="function(){this.position=new" three.vector3;this.positionworld="new" three.vector3;this.positionscreen="new" three.vector4;this.visible="!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};" three.renderableface="function(){this.id=0;this.v1=new" three.renderablevertex;this.v2="new" three.renderablevertex;this.v3="new" three.renderablevertex;this.normalmodel="new" three.vector3;this.vertexnormalsmodel="[new" three.vector3,new three.vector3];this.vertexnormalslength="0;this.color=new" three.color;this.material="null;this.uvs=[new" three.vector2,new three.vector2];this.z="0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};" three.renderablesprite="function(){this.id=0;this.object=null;this.rotation=this.z=this.y=this.x=0;this.scale=new" three.vector2;this.material="null};THREE.RenderableLine=function(){this.id=0;this.v1=new" three.renderablevertex;this.vertexcolors="[new" three.color,new three.color];this.material="null;this.z=0};" three.geometryutils="{merge:function(a,b,c){console.warn(" three.geometryutils:" .merge() has been moved to geometry. use geometry.merge( geometry2, matrix, materialindexoffset ) instead.");var d;b instanceof three.mesh&&(b.matrixautoupdate&&b.updatematrix(),d="b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){console.warn(" .center() geometry.center() instead.");return a.center()}}; three.imageutils="{crossOrigin:void" 0,loadtexture:function(a,b,c,d){var e="new" three.imageloader;e.crossorigin="this.crossOrigin;var" f="new" three.texture(void 0,b);e.load(a,function(a){f.image="a;f.needsUpdate=!0;c&&c(f)},void" 0,function(a){d&&d(a)});f.sourcefile="a;return" f},loadtexturecube:function(a,b,c,d){var three.cubetexture([],b);f.flipy="!1;var" g="0;b=function(b){e.load(a[b],function(a){f.images[b]=a;g+=1;6===g&&(f.needsUpdate=!0,c&&" c(f))})};d="0;for(var" h="a.length;d<h;++d)b(d);return" f},loadcompressedtexture:function(){console.error("three.imageutils.loadcompressedtexture removed. three.ddsloader instead.")},loadcompressedtexturecube:function(){console.error("three.imageutils.loadcompressedtexturecube instead.")},getnormalmap:function(a,b){var b="Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var" d="a.width,e=a.height,f=document.createElement(" canvas");" f.width="d;f.height=e;var" q="0;q<e;q++){var" r="0">q-1?0:q-1,t=q+1>e-1?e-1:q+1,s=0>n-1?0:n-1,p=n+1>d-1?d-1:n+1,v=[],w=[0,0,h[4*(q*d+n)]/255*b];v.push([-1,0,h[4*(q*d+s)]/255*b]);v.push([-1,-1,h[4*(r*d+s)]/255*b]);v.push([0,-1,h[4*(r*d+n)]/255*b]);v.push([1,-1,h[4*(r*d+p)]/255*b]);v.push([1,0,h[4*(q*d+p)]/255*b]);v.push([1,1,h[4*(t*d+p)]/255*b]);v.push([0,1,h[4*(t*d+n)]/255*
b]);v.push([-1,1,h[4*(t*d+s)]/255*b]);r=[];s=v.length;for(t=0;t<s;t++){var p="v[t],u=v[(t+1)%s],p=[p[0]-w[0],p[1]-w[1],p[2]-w[2]],u=[u[0]-w[0],u[1]-w[1],u[2]-w[2]];r.push(c([p[1]*u[2]-p[2]*u[1],p[2]*u[0]-p[0]*u[2],p[0]*u[1]-p[1]*u[0]]))}v=[0,0,0];for(t=0;t<r.length;t++)v[0]+=r[t][0],v[1]+=r[t][1],v[2]+=r[t][2];v[0]/=r.length;v[1]/=r.length;v[2]/=r.length;w=4*(q*d+n);l[w]=(v[0]+1)/2*255|0;l[w+1]=(v[1]+1)/2*255|0;l[w+2]=255*v[2]|0;l[w+3]=255}g.putImageData(k,0,0);return" f},generatedatatexture:function(a, b,c){var d="a*b,e=new" uint8array(3*d),f="Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var" h="0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new" three.datatexture(e,a,b,three.rgbformat);a.needsupdate="!0;return" a}}; three.sceneutils="{createMultiMaterialObject:function(a,b){for(var" c="new" three.object3d,d="0,e=b.length;d<e;d++)c.add(new" three.mesh(a,b[d]));return c},detach:function(a,b,c){a.applymatrix(b.matrixworld);b.remove(a);c.add(a)},attach:function(a,b,c){var three.matrix4;d.getinverse(c.matrixworld);a.applymatrix(d);b.remove(a);c.add(a)}}; three.fontutils="{faces:{},face:" helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getface:function(){try{return" this.faces[this.face][this.weight][this.style]}catch(a){throw"the font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing.";}},loadface:function(a){var b="a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return" this.faces[b][a.cssfontweight][a.cssfontstyle]="a},drawText:function(a){var" three.path,h="this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var" f="[],g,h,k,l,n,q,r,t,s,p,v,w=b.glyphs[a]||b.glyphs[" ?"];if(w){if(w.o)for(b="w._cachedOutline||(w._cachedOutline=w.o.split(" "" ")),l="b.length,a=0;a<l;)switch(k=b[a++],k){case" "m":k="b[a++]*c+d;n=b[a++]*c;e.moveTo(k,n);" break;case "l":k="b[a++]*c+d;n=b[a++]*c;e.lineTo(k,n);break;case" "q":k="b[a++]*c+d;n=b[a++]*c;t=b[a++]*c+d;s=b[a++]*c;e.quadraticCurveTo(t,s,k,n);if(g=f[f.length-1])for(q=g.x,r=g.y,g=1,h=this.divisions;g<=h;g++){var" u="g/h;THREE.Shape.Utils.b2(u,q,t,k);THREE.Shape.Utils.b2(u,r,s,n)}break;case" "b":if(k="b[a++]*c+d,n=b[a++]*c,t=b[a++]*c+d,s=b[a++]*c,p=b[a++]*c+d,v=b[a++]*c,e.bezierCurveTo(t,s,p,v,k,n),g=f[f.length-1])for(q=g.x,r=g.y,g=1,h=this.divisions;g<=h;g++)u=g/h,THREE.Shape.Utils.b3(u,q,t,p,k),THREE.Shape.Utils.b3(u," r,s,v,n)}return{offset:w.ha*c,path:e}}}}; three.fontutils.generateshapes="function(a,b){b=b||{};var" 0!="=b.curveSegments?b.curveSegments:4,d=void" d}; (function(a){var 0.5*e};a.triangulate="function(a,d){var" e="a.length;if(3">e)return null;var f=[],g=[],h=[],k,l,n;if(0<b(a))for(l=0;l<e;l++)g[l]=l;else for(l="0;l<e;l++)g[l]=e-1-l;var" q="2*e;for(l=e-1;2<e;){if(0">=q--){console.log("Warning, unable to triangulate polygon!");break}k=l;e<=k&&(k=0);l=k+1;e<=l&&(l=0);n=l+1;e<=n&&(n=0);var r;a:{var t="r=void" 0,s="void" 0,p="void" 0,v="void" 0,w="void" 0,u="void" 0,d="void" 0,a="void" 0,t="a[g[k]].x,s=a[g[k]].y,p=a[g[l]].x,v=a[g[l]].y,w=a[g[n]].x,u=a[g[n]].y;if(1E-10">(p-t)*(u-s)-(v-s)*(w-t))r=!1;else{var x=void 0,C=void 0,I=void 0,z=void 0,y=void 0,K=void 0,N=void 0,ba=void 0,P=void 0,O=void 0,P=ba=N=A=D=void 0,x=w-p,C=u-v,I=t-w,z=s-u,y=p-t,K=v-s;for(r=0;r<e;r++)if(d=a[g[r]].x,a=a[g[r]].y,!(d===t&&a===s||d===p&&a===v||d===w&&a===u)&&(n=d-t,ba=a-s,p=d-p,o=a-v,d-=w,a-=u,p=x*o-c*p,n=y*ba-k*n,ba=i*a-z*d,-1e-10<=p&&-1e-10<=ba&&-1e-10<=n)){r=!1;break a}r="!0}}if(r){f.push([a[g[k]]," a[g[l]],a[g[n]]]);h.push([g[k],g[l],g[n]]);k="l;for(n=l+1;n<e;k++,n++)g[k]=g[n];e--;q=2*e}}return" d?h:f};a.triangulate.area="b;return" a})(three.fontutils);self._typeface_js="{faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(a){console.log(" warning," getpoint() not implemented!");return null};three.curve.prototype.getpointat="function(a){a=this.getUtoTmapping(a);return" this.getpoint(a)}; three.curve.prototype.getpoints="function(a){a||(a=5);var" b,c="[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return" c};three.curve.prototype.getspacedpoints="function(a){a||(a=5);var" c};three.curve.prototype.getlength="function(){var" a="this.getLengths();return" a[a.length-1]}; three.curve.prototype.getlengths="function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return" this.cachearclengths;this.needsupdate="!1;var" b="[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return" this.cachearclengths="b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};" three.curve.prototype.getutotmapping="function(a,b){var" c="this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var" g="0,h=e-1,k;g<=h;)if(d=Math.floor(g+(h-g)/2),k=c[d]-f,0">k)g=d+1;else if(0<k)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d (e-1);g="c[d];return" c="(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var" b="a-1E-4;a+=1E-4;0">b&&(b=0);1<a&&(a=1);b=this.getpoint(b);return this.getpoint(a).clone().sub(b).normalize()}; three.curve.prototype.gettangentat="function(a){a=this.getUtoTmapping(a);return" this.gettangent(a)}; three.curve.utils="{tangentQuadraticBezier:function(a,b,c,d){return" 2*(1-a)*(c-b)+2*a*(d-c)},tangentcubicbezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentspline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a="0.5*(c-a);d=0.5*(d-b);var" f="e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};" three.curve.create="function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return" a};three.curvepath="function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};" three.curvepath.prototype.closepath="function(){var" a="this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new" three.linecurve(b,a))};three.curvepath.prototype.getpoint="function(a){var" b="a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]">=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getlength(),a.push(b);return this.cachelengths="a};" three.curvepath.prototype.getboundingbox="function(){var" a="this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var" h,k,l,n,q="a[0]instanceof" three.vector3;n="q?new" three.vector3:new three.vector2;k="0;for(l=a.length;k<l;k++)h=a[k],h.x">b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),q&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),n.add(h);a={minx:e,miny:f,maxx:b,maxy:c};q&&(a.maxz=d,a.minz=g);return a}; three.curvepath.prototype.createpointsgeometry="function(a){a=this.getPoints(a,!0);return" this.creategeometry(a)};three.curvepath.prototype.createspacedpointsgeometry="function(a){a=this.getSpacedPoints(a,!0);return" this.creategeometry(a)};three.curvepath.prototype.creategeometry="function(a){for(var" b="new" three.geometry,c="0;c<a.length;c++)b.vertices.push(new" three.vector3(a[c].x,a[c].y,a[c].z||0));return b};three.curvepath.prototype.addwrappath="function(a){this.bends.push(a)};" three.curvepath.prototype.gettransformedpoints="function(a,b){var" c="this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return" c};three.curvepath.prototype.gettransformedspacedpoints="function(a,b){var" c}; three.curvepath.prototype.getwrappoints="function(a,b){var" a};three.gyroscope="function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);" three.gyroscope.prototype.updatematrixworld="function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix)," this.matrixworldneedsupdate="!1,a=!0;for(var" three.vector3;three.gyroscope.prototype.translationobject="new" three.vector3;three.gyroscope.prototype.quaternionworld="new" three.quaternion;three.gyroscope.prototype.quaternionobject="new" three.quaternion;three.gyroscope.prototype.scaleworld="new" three.vector3;three.gyroscope.prototype.scaleobject="new" three.vector3; three.path="function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:" moveto",line_to:"lineto",quadratic_curve_to:"quadraticcurveto",bezier_curve_to:"beziercurveto",cspline_thru:"splinethru",arc:"arc",ellipse:"ellipse"};three.path.prototype.frompoints="function(a){this.moveTo(a[0].x,a[0].y);for(var" " three.path.prototype.moveto="function(a,b){var" three.linecurve(new three.vector2(d[d.length-2],d[d.length-1]),new three.vector2(a,b));this.curves.push(d);this.actions.push({action:three.pathactions.line_to,args:c})}; three.path.prototype.quadraticcurveto="function(a,b,c,d){var" e="Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new" three.quadraticbeziercurve(new three.vector2(f[f.length-2],f[f.length-1]),new three.vector2(a,b),new three.vector2(c,d));this.curves.push(f);this.actions.push({action:three.pathactions.quadratic_curve_to,args:e})}; three.path.prototype.beziercurveto="function(a,b,c,d,e,f){var" g="Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new" three.cubicbeziercurve(new three.vector2(h[h.length-2],h[h.length-1]),new three.vector2(c,d),new three.vector2(e,f));this.curves.push(h);this.actions.push({action:three.pathactions.bezier_curve_to,args:g})}; three.path.prototype.splinethru="function(a){var" three.vector2(c[c.length-2],c[c.length-1])];array.prototype.push.apply(c,a);c="new" three.splinecurve(c);this.curves.push(c);this.actions.push({action:three.pathactions.cspline_thru,args:b})};three.path.prototype.arc="function(a,b,c,d,e,f){var" three.path.prototype.absarc="function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var" h="this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var" three.ellipsecurve(a,b,c,d,e,f,g);this.curves.push(k);k="k.getPoint(1);h.push(k.x);h.push(k.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};" three.path.prototype.getspacedpoints="function(a,b){a||(a=40);for(var" three.path.prototype.getpoints="function(a,b){if(this.useSpacedPoints)return" console.log("tata"),this.getspacedpoints(a,b);a="a||12;var" three.pathactions.move_to:c.push(new three.vector2(f[0],f[1]));break;case three.pathactions.line_to:c.push(new three.pathactions.quadratic_curve_to:h="f[2];k=f[3];q=f[0];r=f[1];0<c.length?(g=c[c.length-1],t=g.x," s="g.y):(g=this.actions[d-1].args,t=g[g.length-2],s=g[g.length-1]);for(f=1;f<=a;f++)p=f/a,g=THREE.Shape.Utils.b2(p,t,q,h),p=THREE.Shape.Utils.b2(p,s,r,k),c.push(new" three.vector2(g,p));break;case three.pathactions.bezier_curve_to:h="f[4];k=f[5];q=f[0];r=f[1];l=f[2];n=f[3];0<c.length?(g=c[c.length-1],t=g.x,s=g.y):(g=this.actions[d-1].args,t=g[g.length-2],s=g[g.length-1]);for(f=1;f<=a;f++)p=f/a,g=THREE.Shape.Utils.b3(p,t,q,l,h),p=THREE.Shape.Utils.b3(p,s,r,n,k),c.push(new" three.pathactions.cspline_thru:g="this.actions[d-1].args;p=[new" three.vector2(g[g.length-2],g[g.length-1])];g="a*f[0].length;p=p.concat(f[0]);p=new" three.splinecurve(p);for(f="1;f<=g;f++)c.push(p.getPointAt(f/g));break;case" three.pathactions.arc:h="f[0];k=f[1];r=f[2];l=f[3];g=f[4];q=!!f[5];t=g-l;s=2*a;for(f=1;f<=s;f++)p=f/s,q||(p=1-p),p=l+p*t,g=h+r*Math.cos(p),p=k+r*Math.sin(p),c.push(new" three.pathactions.ellipse:for(h="f[0],k=f[1],r=f[2],n=f[3],l=f[4],g=f[5],q=!!f[6],t=g-l,s=2*a,f=1;f<=s;f++)p=f/s,q||" (p="1-p),p=l+p*t,g=h+r*Math.cos(p),p=k+n*Math.sin(p),c.push(new" three.vector2(g,p))}d="c[c.length-1];1E-10">Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e="a[c],f=new" three.shape;f.actions="e.actions;f.curves=e.curves;b.push(f)}return" b}function d(a,b){for(var c="b.length,d=!1,e=c-1,f=0;f<c;e=f++){var" g="b[e],h=b[f],k=h.x-g.x,l=h.y-g.y;if(1E-10<Math.abs(l)){if(0">l&&(g=b[f],k=-k,h=b[e],l=-l),!(a.y<g.y||a.y>h.y))if(a.y==g.y){if(a.x==g.x)return!0}else{e=l*(a.x-g.x)-k*(a.y-g.y);if(0==e)return!0;0>e||(d=!d)}}else if(a.y==g.y&&(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<= h.x))return!0}return d}var e="function(a){var" b,c,d,e,f="[],g=new" three.path;b="0;for(c=a.length;b<c;b++)d=a[b],e=d.args,d=d.action,d==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(f.push(g),g=new" three.path),g[d].apply(g,e);0!="g.actions.length&&f.push(g);return" f}(this.actions);if(0="=e.length)return[];if(!0===b)return" c(e);var f,g,h,k="[];if(1==e.length)return" g="e[0],h=new" three.shape,h.actions="g.actions,h.curves=g.curves,k.push(h),k;var" l="!THREE.Shape.Utils.isClockWise(e[0].getPoints()),l=a?!l:l;" h="[];var" n="[],q=[],r=0,t;n[r]=void" 0;q[r]="[];var" s,p;s="0;for(p=e.length;s<p;s++)g=e[s],t=g.getPoints(),f=THREE.Shape.Utils.isClockWise(t),(f=a?!f:f)?(!l&&n[r]&&r++,n[r]={s:new" three.shape,p:t},n[r].s.actions="g.actions,n[r].s.curves=g.curves,l&&r++,q[r]=[]):q[r].push({h:g,p:t[0]});if(!n[0])return" c(e);if(1<n.length){s="!1;p=[];g=0;for(e=n.length;g<e;g++)h[g]=[];g=0;for(e=n.length;g<e;g++)for(f=q[g],l=0;l<f.length;l++){r=f[l];t=!0;for(var" v="0;v<n.length;v++)d(r.p,n[v].p)&&(g!=v&&p.push({froms:g,tos:v," hole:l}),t?(t="!1,h[v].push(r)):s=!0);t&&h[g].push(r)}0<p.length&&(s||(q=h))}s=0;for(p=n.length;s<p;s++)for(h=n[s].s,k.push(h),g=q[s],e=0,f=g.length;e<f;e++)h.holes.push(g[e].h);return" k};three.shape="function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(a){return" new three.extrudegeometry(this,a)};three.shape.prototype.makegeometry="function(a){return" three.shapegeometry(this,a)}; three.shape.prototype.getpointsholes="function(a){var" b,c="this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return" d};three.shape.prototype.getspacedpointsholes="function(a){var" d};three.shape.prototype.extractallpoints="function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};" three.shape.prototype.extractpoints="function(a){return" this.usespacedpoints?this.extractallspacedpoints(a):this.extractallpoints(a)};three.shape.prototype.extractallspacedpoints="function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};" three.shape.utils="{triangulateShape:function(a,b){function" c(a,b,c){return a.x!="b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function" d(a,b,d,e,f){var>z||z>I)return[];k=l*n-k*q;if(0>k||k>I)return[]}else{if(0<z||z<i)return[];k=l*n-k*q;if(0<k||k<i)return[]}if(0==k)return!f||0!=z&&z!=i?[a]:[];if(k==i)return!f||0!=z&&z!=i?[b]:[];if(0==z)return[d]; if(z="=I)return[e];f=k/I;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!=z||l*n!=k*q)return[];h=0==g&&0==h;k=0==k&&0==l;if(h&&k)return" a.x!="d.x||a.y!=d.y?[]:[a];if(h)return" c(d,e,a)?[a]:[];if(k)return c(a,b,d)?[d]:[];0!="g?(a.x<b.x?(g=a,k=a.x,h=b,a=b.x):(g=b,k=b.x,h=a,a=a.x),d.x<e.x?(b=d,I=d.x,l=e,d=e.x):(b=e,I=e.x,l=d,d=d.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),d.y<e.y?(b=d,I=d.y,l=e,d=e.y):(b=e,I=e.y,l=d,d=d.y));return" k<="I?a<I?[]:a==I?f?[]:[b]:a<=d?[b,h]:[b,l]:k">d?[]:k==d?f?[]:[g]:a<=d?[g,h]: [g,l]}function e(a,b,c,d){var e="b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var" g="d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return" 1e-10<math.abs(a)?(b="g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var" f,g,h,k,l,n="{};h=a.concat();f=0;for(g=b.length;f<g;f++)Array.prototype.push.apply(h,b[f]);f=0;for(g=h.length;f<g;f++)l=h[f].x+" :"+h[f].y,void" 0!="=n[l]&&console.log(" duplicate" point",l),n[l]="f;f=function(a,b){function" c(a,b){var d="h.length-1,f=a-1;0">f&&(f=d);var g=a+1;g>d&&(g=0);d=e(h[a],h[f],h[g],k[b]);if(!d)return!1;
d=k.length-1;f=b-1;0>f&&(f=d);g=b+1;g>d&&(g=0);return(d=e(k[b],k[f],k[g],h[a]))?!0:!1}function f(a,b){var c,e;for(c=0;c<h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function g(a,c){var e,f,h,k;for(e="0;e<l.length;e++)for(f=b[l[e]],h=0;h<f.length;h++)if(k=h+1,k%=f.length,k=d(a,c,f[h],f[k],!0),0<k.length)return!0;return!1}var" h="a.concat(),k,l=[],n,q,C,I,z,y=[],K,N,ba,P=0;for(n=b.length;P<n;P++)l.push(P);K=0;for(var" o="2*l.length;0<l.length;){O--;if(0">O){console.log("Infinite Loop! Holes left:"+
l.length+", Probably Hole outside Shape!");break}for(q=K;q<h.length;q++){c=h[q];n=-1;for(p=0;p<l.length;p++)if(i=l[p],z=c.x+":"+c.y+":"+i,void 0="==y[z]){k=b[I];for(N=0;N<k.length;N++)if(I=k[N],c(q,N)&&!f(C,I)&&!g(C,I)){n=N;l.splice(P,1);K=h.slice(0,q+1);I=h.slice(q);N=k.slice(n);ba=k.slice(0,n+1);h=K.concat(N).concat(ba).concat(I);K=q;break}if(0<=n)break;y[z]=!0}if(0<=n)break}}return" h}(a,b);var q="THREE.FontUtils.Triangulate(f,!1);f=0;for(g=q.length;f<g;f++)for(k=q[f],h=0;3">h;h++)l=k[h].x+":"+k[h].y,
l=n[l],void 0!==l&&(k[h]=l);return q.concat()},isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,
b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.EllipseCurve.prototype.getPoint=function(a){var b;b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);b=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;a*=d.length-1;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(math.floor(math.abs(a) d.length)+1)*d.length;c[0]="(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z," d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b}); three.animationhandler="{LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn(" three.animationhandler.add()" has been deprecated.")},get:function(){console.warn("three.animationhandler.get() deprecated.")},remove:function(){console.warn("three.animationhandler.remove() deprecated.")},animations:[],init:function(a){if(!0!="=a.initialized){for(var" b="0;b<a.hierarchy.length;b++){for(var" c="0;c<a.hierarchy[b].keys.length;c++)if(0">a.hierarchy[b].keys[c].time&&(a.hierarchy[b].keys[c].time=
0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=(new THREE.Quaternion).fromArray(d)}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){d={};for(c=0;c<a.hierarchy[b].keys.length;c++)for(var 0="==c.animationCache&&(c.animationCache={});void" e="0;e<a.hierarchy[b].keys[c].morphTargets.length;e++){var" f="a.hierarchy[b].keys[c].morphTargets[e];d[f]=-1}a.hierarchy[b].usedMorphTargets=d;for(c=0;c<a.hierarchy[b].keys.length;c++){var" g="{};for(f" in d){for(e="0;e<a.hierarchy[b].keys[c].morphTargets.length;e++)if(a.hierarchy[b].keys[c].morphTargets[e]===f){g[f]=a.hierarchy[b].keys[c].morphTargetsInfluences[e];break}e===a.hierarchy[b].keys[c].morphTargets.length&&(g[f]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=g}}for(c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}a.initialized=" !0;return a}},parse:function(a){var b="function(a,c){c.push(a);for(var" d="0;d<a.children.length;d++)b(a.children[d],c)},c=[];if(a" instanceof three.skinnedmesh)for(var b(a,c);return c},play:function(a){-1="==this.animations.indexOf(a)&&this.animations.push(a)},stop:function(a){a=this.animations.indexOf(a);-1!==a&&this.animations.splice(a,1)},update:function(a){for(var" three.animation="function(a,b){this.root=a;this.data=THREE.AnimationHandler.init(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.keyTypes=[" pos","rot","scl"];three.animation.prototype.play="function(a,b){this.currentTime=void" " 0!="=a?a:0;this.weight=void" three.animation.prototype.stop="function(){this.isPlaying=!1;THREE.AnimationHandler.stop(this)};" three.animation.prototype.reset="function(){for(var" a="0,b=this.hierarchy.length;a<b;a++){var" c="this.hierarchy[a];c.matrixAutoUpdate=!0;void">d;d++){for(var e=
this.keyTypes[d],f=this.data.hierarchy[a].keys[0],g=this.getNextKeyWith(e,a,1);g.time<this.currenttime&&g.index>f.index;)f=g,g=this.getNextKeyWith(e,a,g.index+1);c.prevKey[e]=f;c.nextKey[e]=g}}};
THREE.Animation.prototype.update=function(){var a=[],b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Quaternion,e=function(a,b){var c=[],d=[],e,q,r,t,s,p;e=(a.length-1)*b;q=Math.floor(e);e-=q;c[0]=0===q?q:q-1;c[1]=q;c[2]=q>a.length-2?q:q+1;c[3]=q>a.length-3?q:q+2;q=a[c[0]];t=a[c[1]];s=a[c[2]];p=a[c[3]];c=e*e;r=e*c;d[0]=f(q[0],t[0],s[0],p[0],e,c,r);d[1]=f(q[1],t[1],s[1],p[1],e,c,r);d[2]=f(q[2],t[2],s[2],p[2],e,c,r);return d},f=function(a,b,c,d,e,f,r){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*
r+(-3*(b-c)-2*a-d)*f+a*e+b};return function(f){if(!1!==this.isPlaying&&(this.currentTime+=f*this.timeScale,0!==this.weight)){f=this.data.length;if(!0===this.loop&&this.currentTime>f)this.currentTime%=f,this.reset();else if(!1===this.loop&&this.currentTime>f){this.stop();return}f=0;for(var h=this.hierarchy.length;f<h;f++)for(var k="this.hierarchy[f],l=k.animationCache[this.data.name],n=0;3">n;n++){var q=this.keyTypes[n],r=l.prevKey[q],t=l.nextKey[q];if(t.time<=this.currenttime){r=this.data.hierarchy[f].keys[0]; for(t="this.getNextKeyWith(q,f,1);t.time<this.currentTime&&t.index">r.index;)r=t,t=this.getNextKeyWith(q,f,t.index+1);l.prevKey[q]=r;l.nextKey[q]=t}k.matrixAutoUpdate=!0;k.matrixWorldNeedsUpdate=!0;var s=(this.currentTime-r.time)/(t.time-r.time),p=r[q],v=t[q];0>s&&(s=0);1<s&&(s=1);if("pos"===q)if(this.interpolationtype===three.animationhandler.linear)c.x=p[0]+(v[0]-p[0])*s,c.y=p[1]+(v[1]-p[1])*s,c.z=p[2]+(v[2]-p[2])*s,k 0="==d.animationCache&&(d.animationCache={},d.animationCache.prevKey=null,d.animationCache.nextKey=null,d.animationCache.originalMatrix=c.matrix),c=this.data.hierarchy[a].keys,c.length&&(d.animationCache.prevKey=c[0],d.animationCache.nextKey=c[1],this.startTime=Math.min(c[0].time," instanceof three.bone?(r="this.weight/(this.weight+k.accumulatedPosWeight),k.position.lerp(c," r),k.accumulatedposweight+="this.weight):k.position.copy(c);else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)a[0]=this.getPrevKeyWith(" pos",f,r.index-1).pos,a[1]="p,a[2]=v,a[3]=this.getNextKeyWith(" pos",f,t.index+1).pos,s="0.33*s+0.33,t=e(a,s),r=1,k""" three.bone&&(r="this.weight/(this.weight+k.accumulatedPosWeight),k.accumulatedPosWeight+=this.weight),q=k.position,q.x+=(t[0]-q.x)*r,q.y+=(t[1]-q.y)*r,q.z+=(t[2]-" q.z)*r,this.interpolationtype="==THREE.AnimationHandler.CATMULLROM_FORWARD&&(s=e(a,1.01*s),b.set(s[0],s[1],s[2]),b.sub(q),b.y=0,b.normalize(),s=Math.atan2(b.x,b.z),k.rotation.set(0,s,0))}else" rot"="==q?(THREE.Quaternion.slerp(p,v,d,s),k" " three.bone?0="==k.accumulatedRotWeight?(k.quaternion.copy(d),k.accumulatedRotWeight=this.weight):(r=this.weight/(this.weight+k.accumulatedRotWeight),THREE.Quaternion.slerp(k.quaternion,d,k.quaternion,r),k.accumulatedRotWeight+=this.weight):k.quaternion.copy(d)):" "scl"="==q&&(c.x=p[0]+(v[0]-p[0])*s,c.y=p[1]+(v[1]-p[1])*s,c.z=p[2]+(v[2]-p[2])*s,k" three.animation.prototype.getnextkeywith="function(a,b,c){var" d="this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void" 0!="=d[c][a])return" d[c];return this.data.hierarchy[b].keys[0]}; three.animation.prototype.getprevkeywith="function(a,b,c){var" this.data.hierarchy[b].keys[d.length-1]}; three.keyframeanimation="function(a){this.root=a.node;this.data=THREE.AnimationHandler.init(a);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;a=0;for(var" b="this.hierarchy.length;a<b;a++){var" c="this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var" e="0;e<c.length;e++){var" f="c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();" d.matrixworldneedsupdate="!0}}};" three.keyframeanimation.prototype.play="function(a){this.currentTime=void" this.starttime),this.endtime="Math.max(c[c.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.stop(this);for(var" a="0;a<this.data.hierarchy.length;a++){var" c.animationcache}}}; three.keyframeanimation.prototype.update="function(a){if(!1!==this.isPlaying){this.currentTime+=a*this.timeScale;a=this.data.length;!0===this.loop&&this.currentTime">a&&(this.currentTime%=a);this.currentTime=Math.min(this.currentTime,a);a=0;for(var b=this.hierarchy.length;a<b;a++){var c="this.hierarchy[a],d=this.data.hierarchy[a],e=d.keys,d=d.animationCache;if(e.length){var" f="d.prevKey,g=d.nextKey;if(g.time<=this.currentTime){for(;g.time<this.currentTime&&g.index">f.index;)f=g,g=e[f.index+1];d.prevKey=
f;d.nextKey=g}g.time>=this.currentTime?f.interpolate(g,this.currentTime):f.interpolate(g,g.time);this.data.hierarchy[a].node.updateMatrix();c.matrixWorldNeedsUpdate=!0}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hastarget(a))return b[c];return b[0]}; three.keyframeanimation.prototype.getprevkeywith="function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return" b[b.length-1]};three.morphanimation="function(a){this.mesh=a;this.frames=a.morphTargetInfluences.length;this.currentTime=0;this.duration=1E3;this.loop=!0;this.isPlaying=!1};" three.morphanimation.prototype="{play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var" a="0,b=0;return" function(c){if(!1!="=this.isPlaying){this.currentTime+=c;!0===this.loop&&this.currentTime">this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);c=this.duration/this.frames;var d=Math.floor(this.currentTime/c);d!=b&&(this.mesh.morphTargetInfluences[a]=0,this.mesh.morphTargetInfluences[b]=1,this.mesh.morphTargetInfluences[d]=
0,a=b,b=d);this.mesh.morphTargetInfluences[d]=this.currentTime%c/c;this.mesh.morphTargetInfluences[a]=1-this.mesh.morphTargetInfluences[d]}}}()};
THREE.BoxGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,p){var v,w=h.widthSegments,u=h.heightSegments,D=e/2,A=f/2,x=h.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)v="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)v="y",u=h.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)v="x",w=h.depthSegments;var C=w+1,I=u+1,z=e/w,y=f/u,K=new THREE.Vector3;K[v]=0<g?1:-1;for(e=0;e<i;e++)for(f=0;f<c;f++){var n="new" three.vector3;n[a]="(f*z-D)*c;N[b]=(e*y-A)*d;N[v]=g;h.vertices.push(N)}for(e=" 0;e<u;e++)for(f="0;f<w;f++)A=f+C*e,a=f+C*(e+1),b=f+1+C*(e+1),c=f+1+C*e,d=new" three.vector2(f w,1-e u),g="new" w,1-(e+1) u),v="new" three.vector2((f+1) u),d="new" u),a="new" three.face3(a+x,a+x,c+x),a.normal.copy(k),a.vertexnormals.push(k.clone(),k.clone(),k.clone()),a.materialindex="p,h.faces.push(A),h.faceVertexUvs[0].push([d,g,D]),A=new" three.face3(a+x,b+x,c+x),a.normal.copy(k),a.vertexnormals.push(k.clone(),k.clone(),k.clone()),a.materialindex="p,h.faces.push(A)," h.facevertexuvs[0].push([g.clone(),v,d.clone()])}three.geometry.call(this);this.parameters="{width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=f||1;var" h="this;d=a/2;e=b/2;f=c/2;g(" z","y",-1,-1,c,b,d,0);g("z","y",1,-1,c,b,-d,1);g("x","z",1,1,a,c,e,2);g("x","z",1,-1,a,c,-e,3);g("x","y",1,-1,a,b,f,4);g("x","y",-1,-1,a,b,-f,5);this.mergevertices()};three.boxgeometry.prototype="Object.create(THREE.Geometry.prototype);" " three.circlegeometry="function(a,b,c,d){THREE.Geometry.call(this);this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void" 0!="=b?Math.max(3,b):8;c=void" e,f="[];e=new" three.vector3;var g="new" three.vector2(0.5,0.5);this.vertices.push(e);f.push(g);for(e="0;e<=b;e++){var" three.vector3,k="c+e/b*d;h.x=a*Math.cos(k);h.y=a*Math.sin(k);this.vertices.push(h);f.push(new" three.vector2((h.x a+1) 2,(h.y 2))}c="new" three.vector3(0,0,1);for(e="1;e<=" b;e++)this.faces.push(new three.face3(e,e+1,0,[c.clone(),c.clone(),c.clone()])),this.facevertexuvs[0].push([f[e].clone(),f[e+1].clone(),g.clone()]);this.computefacenormals();this.boundingsphere="new" three.sphere(new three.vector3,a)};three.circlegeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(a,b,c,d,e,f){console.warn(" thee.cubegeometry" has been renamed to three.boxgeometry.");return new three.boxgeometry(a,b,c,d,e,f)}; three.cylindergeometry="function(a,b,c,d,e,f){THREE.Geometry.call(this);this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f};a=void" q="[],r=[],t=k/e,s=t*(b-a)+a;for(h=0;h<=d;h++){var" p="h/d,v=new" three.vector3;v.x="s*Math.sin(p*Math.PI*2);v.y=-t*c+g;v.z=s*Math.cos(p*Math.PI*2);this.vertices.push(v);q.push(this.vertices.length-1);r.push(new" three.vector2(p, 1-t))}l.push(q);n.push(r)}c="(b-a)/c;for(h=0;h<d;h++)for(0!==a?(q=this.vertices[l[0][h]].clone(),r=this.vertices[l[0][h+1]].clone()):(q=this.vertices[l[1][h]].clone(),r=this.vertices[l[1][h+1]].clone()),q.setY(Math.sqrt(q.x*q.x+q.z*q.z)*c).normalize(),r.setY(Math.sqrt(r.x*r.x+r.z*r.z)*c).normalize(),k=0;k<e;k++){var" t="l[k][h],s=l[k+1][h],p=l[k+1][h+1],v=l[k][h+1],w=q.clone(),u=q.clone(),D=r.clone(),A=r.clone(),x=n[k][h].clone(),C=n[k+1][h].clone(),I=n[k+1][h+1].clone(),z=n[k][h+1].clone();this.faces.push(new" three.face3(t, s,v,[w,u,a]));this.facevertexuvs[0].push([x,c,z]);this.faces.push(new three.face3(s,p,v,[u.clone(),d,a.clone()]));this.facevertexuvs[0].push([c.clone(),i,z.clone()])}if(!1="==f&&0<a)for(this.vertices.push(new" three.vector3(0,g,0)),h="0;h<d;h++)t=l[0][h],s=l[0][h+1],p=this.vertices.length-1,w=new" three.vector3(0,1,0),u="new" three.vector3(0,1,0),d="new" three.vector3(0,1,0),x="n[0][h].clone(),C=n[0][h+1].clone(),I=new" three.vector2(c.x,0),this.faces.push(new three.face3(t,s,p,[w,u,d])),this.facevertexuvs[0].push([x, c,i]);if(!1="==f&&0<b)for(this.vertices.push(new" three.vector3(0,-g,0)),h="0;h<d;h++)t=l[k][h+1],s=l[k][h],p=this.vertices.length-1,w=new" three.vector3(0,-1,0),u="new" three.vector3(0,-1,0),d="new" three.vector3(0,-1,0),x="n[k][h+1].clone(),C=n[k][h].clone(),I=new" three.vector2(c.x,1),this.faces.push(new three.face3(t,s,p,[w,u,d])),this.facevertexuvs[0].push([x,c,i]);this.computefacenormals()};three.cylindergeometry.prototype="Object.create(THREE.Geometry.prototype);" three.extrudegeometry="function(a,b){" undefined"!="=typeof" a&&(three.geometry.call(this),a="a" instanceof array?a:[a],this.addshapelist(a,b),this.computefacenormals())};three.extrudegeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var" c="a.length,d=0;d<c;d++)this.addShape(a[d],b)};" three.extrudegeometry.prototype.addshape="function(a,b){function" c(a,b,c){b||console.log("die");return b.clone().multiplyscalar(c).add(a)}function d(a,b,c){var d="THREE.Math.sign,e=1,e=a.x-b.x,f=a.y-b.y,g=c.x-a.x,h=c.y-a.y,k=e*e+f*f;if(1E-10<Math.abs(e*h-f*g)){var" l="Math.sqrt(k),d=Math.sqrt(g*g+h*h),k=b.x-f/l;b=b.y+e/l;g=((c.x-h/d-k)*h-(c.y+g/d-b)*g)/(e*h-f*g);c=k+e*g-a.x;a=b+f*g-a.y;e=c*c+a*a;if(2">=e)return new THREE.Vector2(c,a);e=Math.sqrt(e/2)}else a=!1,1E-10<e?1e-10<g&&(a=!0):-1e-10>e?-1E-10>g&&
(a=!0):d(f)==d(h)&&(a=!0),a?(c=-f,a=e,e=Math.sqrt(k)):(c=e,a=f,e=Math.sqrt(k/2));return new THREE.Vector2(c/e,a/e)}function e(c,d){var e,f;for(H=c.length;0<=--h;){e=h;f=h-1;0>f&&(f=c.length-1);for(var g=0,h=t+2*n,g=0;g<h;g++){var k="S*g,l=S*(g+1),p=d+e+k,k=d+f+k,q=d+f+l,l=d+e+l,r=c,s=g,v=h,w=e,x=f,p=p+ba,k=k+ba,q=q+ba,l=l+ba;N.faces.push(new" three.face3(p,k,l,null,null,u));n.faces.push(new three.face3(k,q,l,null,null,u));p="D.generateSideWallUV(N,a,r,b,p,k,q,l,s,v,w,x);N.faceVertexUvs[0].push([p[0]," p[1],p[3]]);n.facevertexuvs[0].push([p[1],p[2],p[3]])}}}function f(a,b,c){n.vertices.push(new three.vector3(a,b,c))}function g(c,d,e,f){c+="ba;d+=ba;e+=ba;N.faces.push(new" three.face3(c,d,e,null,null,w));c="f?D.generateBottomUV(N,a,b,c,d,e):D.generateTopUV(N,a,b,c,d,e);N.faceVertexUvs[0].push(c)}var" h="void" 0!="=b.amount?b.amount:100,k=void" !0,r="void" three.tubegeometry.frenetframes(s,t,!1),x="new" three.vector3,c="new" three.vector3,i="new" three.vector3);q||(l="k=n=0);var" z,y,k,n="this,ba=this.vertices.length,s=a.extractPoints(r),r=s.shape,P=s.holes;if(s=!THREE.Shape.Utils.isClockWise(r)){r=" r.reverse();y="0;for(K=P.length;y<K;y++)z=P[y],THREE.Shape.Utils.isClockWise(z)&&(P[y]=z.reverse());s=!1}var" o="THREE.Shape.Utils.triangulateShape(r,P),J=r;y=0;for(K=P.length;y<K;y++)z=P[y],r=r.concat(z);var" e,q,l,r,b,s="r.length,V,W=O.length,s=[],H=0;L=J.length;E=L-1;for(Q=H+1;H<L;H++,E++,Q++)E===L&&(E=0),Q===L&&(Q=0),s[H]=d(J[H],J[E],J[Q]);var" oa="[],$,X=s.concat();y=0;for(K=P.length;y<K;y++){z=P[y];$=[];H=0;L=z.length;E=L-1;for(Q=H+1;H<L;H++,E++,Q++)E===L&&(E=0),Q===L&&(Q=0),$[H]=d(z[H],z[E],z[Q]);" oa.push($);x="X.concat($)}for(E=0;E<n;E++){L=E/n;R=k*(1-L);Q=l*Math.sin(L*Math.PI/2);H=0;for(L=J.length;H<L;H++)B=c(J[H],s[H],Q),f(B.x,B.y,-R);y=0;for(K=P.length;y<K;y++)for(z=P[y],$=oa[y],H=0,L=z.length;H<L;H++)B=c(z[H],$[H],Q),f(B.x,B.y,-R)}Q=l;for(H=0;H<S;H++)B=q?c(r[H],X[H],Q):r[H],v?(C.copy(A.normals[0]).multiplyScalar(B.x),x.copy(A.binormals[0]).multiplyScalar(B.y),I.copy(p[0]).add(C).add(x),f(I.x,I.y,I.z)):f(B.x,B.y,0);for(L=1;L<=t;L++)for(H=0;H<S;H++)B=q?c(r[H],X[H],Q):r[H],v?(C.copy(A.normals[L]).multiplyScalar(B.x)," x.copy(a.binormals[l]).multiplyscalar(b.y),i.copy(p[l]).add(c).add(x),f(i.x,i.y,i.z)):f(b.x,b.y,h t*l);for(e="n-1;0<=E;E--){L=E/n;R=k*(1-L);Q=l*Math.sin(L*Math.PI/2);H=0;for(L=J.length;H<L;H++)B=c(J[H],s[H],Q),f(B.x,B.y,h+R);y=0;for(K=P.length;y<K;y++)for(z=P[y],$=oa[y],H=0,L=z.length;H<L;H++)B=c(z[H],$[H],Q),v?f(B.x,B.y+p[t-1].y,p[t-1].x+R):f(B.x,B.y,h+R)}(function(){if(q){var" a;a="0*S;for(H=0;H<W;H++)V=O[H],g(V[2]+a,V[1]+a,V[0]+a,!0);a=t+2*n;a*=S;for(H=0;H<W;H++)V=O[H],g(V[0]+a,V[1]+a,V[2]+a,!1)}else{for(H=" 0;h<w;h++)v="O[H],g(V[2],V[1],V[0],!0);for(H=0;H<W;H++)V=O[H],g(V[0]+S*t,V[1]+S*t,V[2]+S*t,!1)}})();(function(){var" a="0;e(J,a);a+=J.length;y=0;for(K=P.length;y<K;y++)z=P[y],e(z,a),a+=z.length})()};" three.extrudegeometry.worlduvgenerator="{generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new" three.vector2(a.vertices[d].x,a.vertices[d].y),new three.vector2(b,e),new three.vector2(c,f)]},generatebottomuv:function(a,b,c,d,e,f){return this.generatetopuv(a,b,c,d,e,f)},generatesidewalluv:function(a,b,c,d,e,f,g,h,k,l,n,q){b="a.vertices[e].x;c=a.vertices[e].y;e=a.vertices[e].z;d=a.vertices[f].x;k=a.vertices[f].y;f=a.vertices[f].z;l=a.vertices[g].x;" n="a.vertices[g].y;g=a.vertices[g].z;q=a.vertices[h].x;var" r="a.vertices[h].y;a=a.vertices[h].z;return" 0.01>Math.abs(c-k)?[new THREE.Vector2(b,1-e),new THREE.Vector2(d,1-f),new THREE.Vector2(l,1-g),new THREE.Vector2(q,1-a)]:[new THREE.Vector2(c,1-e),new THREE.Vector2(k,1-f),new THREE.Vector2(n,1-g),new THREE.Vector2(r,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;
THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addshape(a[c],b);return 0="==b&&(b={});var" this}; three.shapegeometry.prototype.addshape="function(a,b){void" c="b.material,d=void" 0!="=b.curveSegments?b.curveSegments:12);var" k="e.shape,l=e.holes;if(!THREE.Shape.Utils.isClockWise(k))for(k=k.reverse(),e=0,f=l.length;e<f;e++)g=l[e],THREE.Shape.Utils.isClockWise(g)&&(l[e]=g.reverse());var" n="THREE.Shape.Utils.triangulateShape(k,l);e=0;for(f=l.length;e<f;e++)g=l[e]," three.vector3(g.x,g.y,0));for(e="0;e<f;e++)l=n[e],k=l[0]+h,g=l[1]+h,l=l[2]+h,this.faces.push(new" three.face3(k,g,l,null,null,c)),this.facevertexuvs[0].push(d.generatebottomuv(this,a,b,k,g,l))}; three.lathegeometry="function(a,b,c,d){THREE.Geometry.call(this);b=b||12;c=c||0;d=d||2*Math.PI;for(var" e="1/(a.length-1),f=1/b,g=0,h=b;g<=h;g++)for(var" r="a[k],t=new" three.vector3;t.x="l*r.x-n*r.y;t.y=n*r.x+l*r.y;t.z=r.z;this.vertices.push(t)}c=a.length;g=0;for(h=b;g<h;g++)for(k=0,q=a.length-1;k<q;k++){b=n=k+c*g;d=n+c;var" l="n+1+c,n=n+1,r=g*f,t=k*e,s=r+f,p=t+e;this.faces.push(new" three.face3(b,d,n));this.facevertexuvs[0].push([new three.vector2(r, t),new three.vector2(s,t),new three.vector2(r,p)]);this.faces.push(new three.face3(d,l,n));this.facevertexuvs[0].push([new three.vector2(s,p),new three.vector2(r,p)])}this.mergevertices();this.computefacenormals();this.computevertexnormals()};three.lathegeometry.prototype="Object.create(THREE.Geometry.prototype);" three.planegeometry="function(a,b,c,d){THREE.Geometry.call(this);this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var" g="c+1,h=d+1,k=a/c,l=b/d,n=new" three.vector3(0,0,1);for(a="0;a<h;a++){var" q="a*l-f;for(b=0;b<g;b++)this.vertices.push(new" three.vector3(b*k-e,-q,0))}for(a="0;a<d;a++)for(b=0;b<c;b++){var" three.vector2(b c,1-a d),l="new" c,1-(a+1) d),q="new" three.vector2((b+1) d),t="new" three.vector2((b+ 1) d),r="new" three.face3(r,e,h);r.normal.copy(n);r.vertexnormals.push(n.clone(),n.clone(),n.clone());this.faces.push(r);this.facevertexuvs[0].push([k,l,t]);r="new" three.face3(e,f,h);r.normal.copy(n);r.vertexnormals.push(n.clone(),n.clone(),n.clone());this.faces.push(r);this.facevertexuvs[0].push([l.clone(),q,t.clone()])}};three.planegeometry.prototype="Object.create(THREE.Geometry.prototype);" three.ringgeometry="function(a,b,c,d,e,f){THREE.Geometry.call(this);a=a||0;b=b||50;e=void" g,h="[],k=a,l=(b-a)/d;for(a=0;a<d+1;a++){for(g=0;g<c+1;g++){var" three.vector3,q="e+g/c*f;n.x=k*Math.cos(q);n.y=k*Math.sin(q);this.vertices.push(n);h.push(new" three.vector2((n.x b+1) 2,(n.y 2))}k+="l}b=new" three.face3(f, l,n,[b.clone(),b.clone(),b.clone()])),this.facevertexuvs[0].push([h[f].clone(),h[l].clone(),h[n].clone()]),f="q,l=q+c+2,n=q+1,this.faces.push(new" three.face3(f,l,n,[b.clone(),b.clone(),b.clone()])),this.facevertexuvs[0].push([h[f].clone(),h[l].clone(),h[n].clone()]);this.computefacenormals();this.boundingsphere="new" three.sphere(new three.vector3,k)};three.ringgeometry.prototype="Object.create(THREE.Geometry.prototype);" three.spheregeometry="function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void" h,k,l="[],n=[];for(k=0;k<=c;k++){var" t="h/b,s=k/c,p=new" three.vector3;p.x="-a*Math.cos(d+t*e)*Math.sin(f+s*g);p.y=a*Math.cos(f+s*g);p.z=" a*math.sin(d+t*e)*math.sin(f+s*g);this.vertices.push(p);q.push(this.vertices.length-1);r.push(new three.vector2(t,1-s))}l.push(q);n.push(r)}for(k="0;k<c;k++)for(h=0;h<b;h++){d=l[k][h+1];e=l[k][h];f=l[k+1][h];g=l[k+1][h+1];var" v.x) 2,this.faces.push(new three.face3(d,f,g,[q,t,s])),this.facevertexuvs[0].push([p,w,u])):math.abs(this.vertices[f].y)="==a?(w.x=(w.x+u.x)/2,this.faces.push(new" three.face3(d,e,f,[q,r,t])),this.facevertexuvs[0].push([p,v,w])):(this.faces.push(new three.face3(d,e,g,[q,r,s])),this.facevertexuvs[0].push([p,v,u]),this.faces.push(new three.face3(e,f,g,[r.clone(),t,s.clone()])),this.facevertexuvs[0].push([v.clone(),w,u.clone()]))}this.computefacenormals();this.boundingsphere="new" three.vector3, a)};three.spheregeometry.prototype="Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(a,b){b=b||{};var" three.torusgeometry="function(a,b,c,d,e){THREE.Geometry.call(this);this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=c||8;d=d||6;e=e||2*Math.PI;for(var" f="new" three.vector3,g="[],h=[],k=0;k<=c;k++)for(var" three.vector3;r.x="(a+b*Math.cos(q))*Math.cos(n);r.y=(a+b*Math.cos(q))*Math.sin(n);r.z=b*Math.sin(q);this.vertices.push(r);g.push(new" three.vector2(l d,k c));h.push(r.clone().sub(f).normalize())}for(k="1;k<=c;k++)for(l=1;l<=d;l++)a=(d+1)*k+l-1,b=(d+1)*(k-1)+l-1,e=(d+1)*(k-1)+l,f=(d+1)*k+l,n=new" three.face3(a,b,f,[h[a].clone(),h[b].clone(),h[f].clone()]),this.faces.push(n),this.facevertexuvs[0].push([g[a].clone(),g[b].clone(),g[f].clone()]),n="new" three.face3(b,e,f,[h[b].clone(),h[e].clone(),h[f].clone()]),this.faces.push(n),this.facevertexuvs[0].push([g[b].clone(),g[e].clone(),g[f].clone()]);this.computefacenormals()};three.torusgeometry.prototype="Object.create(THREE.Geometry.prototype);" three.torusknotgeometry="function(a,b,c,d,e,f,g){function" h(a,b,c,d,e){var new three.vector3(f,g,d)}three.geometry.call(this);this.parameters="{radius:a,tube:b,radialSegments:c,tubularSegments:d,p:e,q:f,heightScale:g};a=a||100;b=b||40;c=c||64;d=d||8;e=e||2;f=f||3;g=g||1;for(var" three.vector3,n="new" three.vector3,r="0;r<c;++r){k[r]=Array(d);var" s="h(t,f,e,a,g),t=h(t+0.01,f,e,a,g);l.subVectors(t,s);n.addVectors(t,s);q.crossVectors(l,n);n.crossVectors(q,l);q.normalize();n.normalize();for(t=0;t<d;++t){var" p="t/d*2*Math.PI,v=-b*Math.cos(p),p=b*Math.sin(p),w=new" three.vector3;w.x="s.x+v*n.x+p*q.x;w.y=s.y+v*n.y+p*q.y;w.z=s.z+v*n.z+p*q.z;k[r][t]=this.vertices.push(w)-1}}for(r=0;r<c;++r)for(t=0;t<d;++t)e=(r+1)%c,f=(t+1)%d,a=k[r][t],b=k[e][t],e=k[e][f],f=k[r][f],g=new" three.vector2(r c,t three.vector2((r+1) d),n="new" c,(t+1) d),this.faces.push(new three.face3(a,b,f)),this.facevertexuvs[0].push([g,l,q]),this.faces.push(new three.face3(b,e,f)),this.facevertexuvs[0].push([l.clone(),n,q.clone()]);this.computefacenormals();this.computevertexnormals()};three.torusknotgeometry.prototype="Object.create(THREE.Geometry.prototype);" three.tubegeometry="function(a,b,c,d,e){THREE.Geometry.call(this);this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;var" three.vector3,s,p,v;s="new" three.tubegeometry.frenetframes(a,b,e);p="s.normals;v=s.binormals;this.tangents=s.tangents;this.normals=p;this.binormals=v;for(s=0;s<k;s++)for(f[s]=[],l=s/(k-1),r=a.getPointAt(l),g=p[s],h=v[s],l=0;l<d;l++)n=l/d*2*Math.PI,q=-c*Math.cos(n),n=c*Math.sin(n),t.copy(r),t.x+=q*g.x+n*" h.x,t.y+="q*g.y+n*h.y,t.z+=q*g.z+n*h.z,f[s][l]=this.vertices.push(new" three.vector3(t.x,t.y,t.z))-1;for(s="0;s<b;s++)for(l=0;l<d;l++)k=e?(s+1)%b:s+1,t=(l+1)%d,a=f[s][l],c=f[k][l],k=f[k][t],t=f[s][t],p=new" three.vector2(s b,l d),v="new" three.vector2((s+1) d),g="new" b,(l+1) d),h="new" three.face3(a,c,t)),this.facevertexuvs[0].push([p,v,h]),this.faces.push(new three.face3(c,k,t)),this.facevertexuvs[0].push([v.clone(),g,h.clone()]);this.computefacenormals(); this.computevertexnormals()};three.tubegeometry.prototype="Object.create(THREE.Geometry.prototype);" three.tubegeometry.frenetframes="function(a,b,c){new" three.vector3;var d="new" three.vector3;new three.vector3,k="new" three.matrix4;b+="1;var" l,n,q;this.tangents="e;this.normals=f;this.binormals=g;for(l=0;l<b;l++)n=l/(b-1),e[l]=a.getTangentAt(n),e[l].normalize();f[0]=new" three.vector3;g[0]="new" three.vector3;a="Number.MAX_VALUE;l=Math.abs(e[0].x);n=Math.abs(e[0].y);q=Math.abs(e[0].z);l<=a&&(a=l,d.set(1,0,0));n<=a&&(a=n,d.set(0,1,0));q<=a&&d.set(0,0,1);h.crossVectors(e[0]," d).normalize();f[0].crossvectors(e[0],h);g[0].crossvectors(e[0],f[0]);for(l="1;l<b;l++)f[l]=f[l-1].clone(),g[l]=g[l-1].clone(),h.crossVectors(e[l-1],e[l]),1E-4<h.length()&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[l-1].dot(e[l]),-1,1)),f[l].applyMatrix4(k.makeRotationAxis(h,d))),g[l].crossVectors(e[l],f[l]);if(c)for(d=Math.acos(THREE.Math.clamp(f[0].dot(f[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d),l=1;l<b;l++)f[l].applyMatrix4(k.makeRotationAxis(e[l],d*l)),g[l].crossVectors(e[l]," f[l])}; three.polyhedrongeometry="function(a,b,c,d){function" e(a){var b="a.normalize().clone();b.index=k.vertices.push(b)-1;var" three.vector2(c,1-a);return b}function f(a,b,c){var three.face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);k.faces.push(d);v.copy(a).add(b).add(c).dividescalar(3);d="Math.atan2(v.z,-v.x);k.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function" g(a,b){var h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+0.5,
a.y));return a.clone()}THREE.Geometry.call(this);c=c||1;d=d||0;for(var k=this,l=0,n=a.length;l<n;l+=3)e(new three.vector3(a[l],a[l+1],a[l+2]));a="this.vertices;for(var" q="[],r=l=0,n=b.length;l<n;l+=3,r++){var" t="a[b[l]],s=a[b[l+1]],p=a[b[l+2]];q[r]=new" three.face3(t.index,s.index,p.index,[t.clone(),s.clone(),p.clone()])}for(var v="new" three.vector3,l="0,n=q.length;l<n;l++)g(q[l],d);l=0;for(n=this.faceVertexUvs[0].length;l<n;l++)b=this.faceVertexUvs[0][l],d=b[0].x,a=b[1].x,q=b[2].x,r=Math.max(d,Math.max(a," q)),t="Math.min(d,Math.min(a,q)),0.9<r&&0.1">t&&(0.2>d&&(b[0].x+=1),0.2>a&&(b[1].x+=1),0.2>q&&(b[2].x+=1));l=0;for(n=this.vertices.length;l<n;l++)this.vertices[l].multiplyscalar(c);this.mergevertices();this.computefacenormals();this.boundingsphere=new 0="==f&&(f=16776960);void" three.sphere(new three.vector3,c)};three.polyhedrongeometry.prototype="Object.create(THREE.Geometry.prototype);" three.icosahedrongeometry="function(a,b){this.parameters={radius:a,detail:b};var" c="(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);" three.octahedrongeometry="function(a,b){this.parameters={radius:a,detail:b};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);" three.parametricgeometry="function(a,b,c){THREE.Geometry.call(this);var" d="this.vertices,e=this.faces,f=this.faceVertexUvs[0],g,h,k,l,n=b+1;for(g=0;g<=c;g++)for(l=g/c,h=0;h<=b;h++)k=h/b,k=a(k,l),d.push(k);var" q,r,t,s;for(g="0;g<c;g++)for(h=0;h<b;h++)a=g*n+h,d=g*n+h+1,l=(g+1)*n+h+1,k=(g+1)*n+h,q=new" three.vector2(h b,g c),r="new" three.vector2((h+1) c),t="new" b,(g+1) c),s="new" c),e.push(new three.face3(a,d,k)),f.push([q,r,s]),e.push(new three.face3(d,l,k)), f.push([r.clone(),t,s.clone()]);this.computefacenormals();this.computevertexnormals()};three.parametricgeometry.prototype="Object.create(THREE.Geometry.prototype);" three.axishelper="function(a){a=a||1;var" b="new" float32array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c="new" float32array([1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1]);a="new" three.buffergeometry;a.addattribute("position",new three.bufferattribute(b,3));a.addattribute("color",new three.bufferattribute(c,3));b="new" three.linebasicmaterial({vertexcolors:three.vertexcolors});three.line.call(this,a,b,three.linepieces)};three.axishelper.prototype="Object.create(THREE.Line.prototype);" three.arrowhelper="function(){var" a="new" three.geometry;a.vertices.push(new three.vector3(0,0,0),new three.vector3(0,1,0));var three.cylindergeometry(0,0.5,1,5,1);b.applymatrix((new three.matrix4).maketranslation(0,-0.5,0));return function(c,d,e,f,g,h){three.object3d.call(this);void three.line(a,new three.linebasicmaterial({color:f}));this.line.matrixautoupdate="!1;this.add(this.line);" this.cone="new" three.mesh(b,new three.meshbasicmaterial({color:f}));this.cone.matrixautoupdate="!1;this.add(this.cone);this.setDirection(c);this.setLength(e,g,h)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var" three.vector3,b;return function(c){0.99999<c.y?this.quaternion.set(0,0,0,1):-0.99999>c.y?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();
THREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=0.2*a);void 0===c&&(c=0.2*b);this.line.scale.set(1,a,1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.set(a);this.cone.material.color.set(a)};
THREE.BoxHelper=function(a){var b=new THREE.BufferGeometry;b.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3));THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==a&&this.update(a)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);
THREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,b=b.boundingBox.max,d=this.geometry.attributes.position.array;d[0]=b.x;d[1]=b.y;d[2]=b.z;d[3]=c.x;d[4]=b.y;d[5]=b.z;d[6]=c.x;d[7]=b.y;d[8]=b.z;d[9]=c.x;d[10]=c.y;d[11]=b.z;d[12]=c.x;d[13]=c.y;d[14]=b.z;d[15]=b.x;d[16]=c.y;d[17]=b.z;d[18]=b.x;d[19]=c.y;d[20]=b.z;d[21]=b.x;d[22]=b.y;d[23]=b.z;d[24]=b.x;d[25]=b.y;d[26]=c.z;d[27]=c.x;d[28]=b.y;d[29]=c.z;d[30]=c.x;d[31]=b.y;
d[32]=c.z;d[33]=c.x;d[34]=c.y;d[35]=c.z;d[36]=c.x;d[37]=c.y;d[38]=c.z;d[39]=b.x;d[40]=c.y;d[41]=c.z;d[42]=b.x;d[43]=c.y;d[44]=c.z;d[45]=b.x;d[46]=b.y;d[47]=c.z;d[48]=b.x;d[49]=b.y;d[50]=b.z;d[51]=b.x;d[52]=b.y;d[53]=c.z;d[54]=c.x;d[55]=b.y;d[56]=b.z;d[57]=c.x;d[58]=b.y;d[59]=c.z;d[60]=c.x;d[61]=c.y;d[62]=b.z;d[63]=c.x;d[64]=c.y;d[65]=c.z;d[66]=b.x;d[67]=c.y;d[68]=b.z;d[69]=b.x;d[70]=c.y;d[71]=c.z;this.geometry.attributes.position.needsUpdate=!0;this.geometry.computeBoundingSphere();this.matrixAutoUpdate=
!1;this.matrixWorld=a.matrixWorld};THREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===f[a]&&(f[a]=[]);f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);
b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1","cf2",3355443);b("cf3","cf4",3355443);THREE.Line.call(this,d,e,THREE.LinePieces);this.camera=a;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=f;this.update()};
THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Camera,c=new THREE.Projector;return function(){function d(d,g,h,k){a.set(g,h,k);c.unprojectVector(a,b);d=e.pointMap[d];if(void 0!==d)for(g=0,h=d.length;g<h;g++)e.geometry.vertices[d[g]].copy(a)}var e="this;b.projectionMatrix.copy(this.camera.projectionMatrix);d(" c",0,0,-1);d("t",0,0,1);d("n1",-1,-1,-1);d("n2",1,-1,-1);d("n3",-1,1,-1);d("n4",1,1,-1);d("f1",-1,-1,1);d("f2",1,-1,1);d("f3",-1,1,1);d("f4",1,1,1);d("u1",0.7," 1.1,-1);d("u2",-0.7,1.1,-1);d("u3",0,2,-1);d("cf1",-1,0,1);d("cf2",1,0,1);d("cf3",0,-1,1);d("cf4",0,1,1);d("cn1",-1,0,-1);d("cn2",1,0,-1);d("cn3",0,-1,-1);d("cn4",0,1,-1);this.geometry.verticesneedupdate="!0}}();" three.directionallighthelper="function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;b=b||1;var" c="new" three.geometry;c.vertices.push(new three.vector3(-b,b,0),new three.vector3(b,b,0),new three.vector3(b,-b,0),new three.vector3(-b,-b,0),new three.vector3(-b,b,0));var d="new" three.linebasicmaterial({fog:!1});d.color.copy(this.light.color).multiplyscalar(this.light.intensity);this.lightplane="new" three.line(c,d);this.add(this.lightplane); three.vector3,new three.vector3);d="new" three.linebasicmaterial({fog:!1});d.color.copy(this.light.color).multiplyscalar(this.light.intensity);this.targetline="new" three.line(c,d);this.add(this.targetline);this.update()};three.directionallighthelper.prototype="Object.create(THREE.Object3D.prototype);" three.directionallighthelper.prototype.dispose="function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};" three.directionallighthelper.prototype.update="function(){var" a="new" three.vector3,b="new" three.vector3,c="new" three.vector3;return function(){a.setfrommatrixposition(this.light.matrixworld);b.setfrommatrixposition(this.light.target.matrixworld);c.subvectors(b,a);this.lightplane.lookat(c);this.lightplane.material.color.copy(this.light.color).multiplyscalar(this.light.intensity);this.targetline.geometry.vertices[1].copy(c);this.targetline.geometry.verticesneedupdate="!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();" three.edgeshelper="function(a,b){var" 0!="=b?b:16777215,d=[0,0],e={},f=function(a,b){return" a-b},g="[" a","b","c"],h="new" " three.buffergeometry,k="a.geometry.clone();k.mergeVertices();k.computeFaceNormals();for(var" l="k.vertices,k=k.faces,n=0,q=0,r=k.length;q<r;q++)for(var" t="k[q],s=0;3">s;s++){d[0]=t[g[s]];d[1]=t[g[(s+1)%3]];d.sort(f);var p=d.toString();void 0===e[p]?(e[p]={vert1:d[0],vert2:d[1],face1:q,face2:void 0},n++):e[p].face2=q}h.addAttribute("position",new THREE.Float32Attribute(6*n,3));d=h.attributes.position.array;
f=0;for(p in e)if(g=e[p],void 0===g.face2||0.9999>k[g.face1].normal.dot(k[g.face2].normal))n=l[g.vert1],d[f++]=n.x,d[f++]=n.y,d[f++]=n.z,n=l[g.vert2],d[f++]=n.x,d[f++]=n.y,d[f++]=n.z;THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=a.matrixWorld};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);
THREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=new THREE.Geometry;c=0;for(var e=this.object.geometry.faces.length;c<e;c++)b.vertices.push(new three.vector3,new three.vector3);three.line.call(this,b,new three.linebasicmaterial({color:a,linewidth:d}),three.linepieces);this.matrixautoupdate="!1;this.normalMatrix=new" three.matrix3;this.update()};three.facenormalshelper.prototype="Object.create(THREE.Line.prototype);" three.facenormalshelper.prototype.update="function(){var" a="this.geometry.vertices,b=this.object,c=b.geometry.vertices,d=b.geometry.faces,e=b.matrixWorld;b.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(e);for(var" f="b=0,g=d.length;b<g;b++,f+=2){var" h="d[b];a[f].copy(c[h.a]).add(c[h.b]).add(c[h.c]).divideScalar(3).applyMatrix4(e);a[f+1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(a[f])}this.geometry.verticesNeedUpdate=!0;return" this}; three.gridhelper="function(a,b){var" c="new" three.geometry,d="new" three.linebasicmaterial({vertexcolors:three.vertexcolors});this.color1="new" three.color(4473924);this.color2="new" three.color(8947848);for(var e="-a;e<=a;e+=b){c.vertices.push(new" three.vector3(-a,0,e),new three.vector3(a,0,e),new three.vector3(e,0,-a),new three.vector3(e,0,a));var three.gridhelper.prototype.setcolors="function(a,b){this.color1.set(a);this.color2.set(b);this.geometry.colorsNeedUpdate=!0};" three.hemispherelighthelper="function(a,b,c,d){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new" three.color,new three.color];a="new" three.spheregeometry(b,4,2);a.applymatrix((new three.matrix4).makerotationx(-math.pi 2));for(b="0;8">b;b++)a.faces[b].color=this.colors[4>b?0:1];b=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(a,b);this.add(this.lightSphere);
this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};
THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();
THREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};
THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};
THREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++)this.bones[c].parent instanceof three.bone&&(b.vertices.push(new three.vector3),b.vertices.push(new three.vector3),b.colors.push(new three.color(0,0,1)),b.colors.push(new three.color(0,1,0)));c="new" three.linebasicmaterial({vertexcolors:three.vertexcolors,depthtest:!1,depthwrite:!1,transparent:!0});three.line.call(this,b,c,three.linepieces);this.root="a;this.matrixWorld=a.matrixWorld;" this.matrixautoupdate="!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.getBoneList=function(a){var" b="[];a" three.bone&&b.push(a);for(var c="0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return" b}; three.skeletonhelper.prototype.update="function(){for(var" a="this.geometry,b=(new" three.matrix4).getinverse(this.root.matrixworld),c="new" three.matrix4,d="0,e=0;e<this.bones.length;e++){var" f="this.bones[e];f.parent" three.bone&&(c.multiplymatrices(b,f.matrixworld),a.vertices[d].setfrommatrixposition(c),c.multiplymatrices(b,f.parent.matrixworld),a.vertices[d+1].setfrommatrixposition(c),d+="2)}a.verticesNeedUpdate=!0;a.computeBoundingSphere()};" three.spotlighthelper="function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;a=new" three.cylindergeometry(0,1,1,8,1,!0);a.applymatrix((new three.matrix4).maketranslation(0,-0.5,0));a.applymatrix((new three.matrix4).makerotationx(-math.pi 2));var three.meshbasicmaterial({wireframe:!0,fog:!1});this.cone="new" three.mesh(a,b);this.add(this.cone);this.update()};three.spotlighthelper.prototype="Object.create(THREE.Object3D.prototype);" three.spotlighthelper.prototype.dispose="function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var" three.vector3,b="new" three.vector3;return function(){var three.vertexnormalshelper="function(a,b,c,d){this.object=a;this.size=void" 0!="=b?b:1;b=void" three.geometry;a="a.geometry.faces;for(var" e="0,f=a.length;e<f;e++)for(var" g="0,h=a[e].vertexNormals.length;g<h;g++)c.vertices.push(new" three.vector3,new three.vector3);three.line.call(this,c,new three.linebasicmaterial({color:b,linewidth:d}),three.linepieces);this.matrixautoupdate="!1;this.normalMatrix=new" three.matrix3;this.update()};three.vertexnormalshelper.prototype="Object.create(THREE.Line.prototype);" three.vertexnormalshelper.prototype.update="function(a){var" function(a){a="[" a","b","c","d"];this.object.updatematrixworld(!0);this.normalmatrix.getnormalmatrix(this.object.matrixworld);for(var" d="this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,k=0,l=f.length;k<l;k++)for(var" n="f[k],q=0,r=n.vertexNormals.length;q<r;q++){var" t="n.vertexNormals[q];d[h].copy(e[n[a[q]]]).applyMatrix4(g);b.copy(t).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);" b.add(d[h]);h+="1;d[h].copy(b);h+=1}this.geometry.verticesNeedUpdate=!0;return" this}}(); three.vertextangentshelper="function(a,b,c,d){this.object=a;this.size=void" three.vector3),c.vertices.push(new three.vertextangentshelper.prototype.update="function(a){var" h+="1}this.geometry.verticesNeedUpdate=!0;return" three.wireframehelper="function(a,b){var" a-b},g="[" a","b","c"],h="new" " three.buffergeometry;if(a.geometry three.geometry){for(var k="a.geometry.vertices,l=a.geometry.faces,n=0,q=new" uint32array(6*l.length),r="0,t=l.length;r<t;r++)for(var" s="l[r],p=0;3">p;p++){d[0]=s[g[p]];d[1]=s[g[(p+1)%3]];d.sort(f);var v=d.toString();void 0===e[v]&&(q[2*n]=d[0],q[2*n+1]=d[1],e[v]=!0,n++)}d=new Float32Array(6*n);r=0;for(t=n;r<t;r++)for(p=0;2>p;p++)n=
k[q[2*r+p]],g=6*r+3*p,d[g+0]=n.x,d[g+1]=n.y,d[g+2]=n.z;h.addAttribute("position",new THREE.BufferAttribute(d,3))}else if(a.geometry instanceof THREE.BufferGeometry){if(void 0!==a.geometry.attributes.index){for(var k=a.geometry.attributes.position.array,t=a.geometry.attributes.index.array,l=a.geometry.offsets,n=0,q=new Uint32Array(2*t.length),s=0,w=l.length;s<w;++s)for(var p="l[s].start,v=l[s].count,g=l[s].index,r=p,u=p+v;r<u;r+=3)for(p=0;3">p;p++)d[0]=g+t[r+p],d[1]=g+t[r+(p+1)%3],d.sort(f),v=d.toString(),
void 0===e[v]&&(q[2*n]=d[0],q[2*n+1]=d[1],e[v]=!0,n++);d=new Float32Array(6*n);r=0;for(t=n;r<t;r++)for(p=0;2>p;p++)g=6*r+3*p,n=3*q[2*r+p],d[g+0]=k[n],d[g+1]=k[n+1],d[g+2]=k[n+2]}else for(k=a.geometry.attributes.position.array,n=k.length/3,q=n/3,d=new Float32Array(6*n),r=0,t=q;r<t;r++)for(p=0;3>p;p++)g=18*r+6*p,q=9*r+3*p,d[g+0]=k[q],d[g+1]=k[q+1],d[g+2]=k[q+2],n=9*r+(p+1)%3*3,d[g+3]=k[n],d[g+4]=k[n+1],d[g+5]=k[n+2];h.addAttribute("position",new THREE.BufferAttribute(d,3))}THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),
THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=a.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};
THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensflares[a],c.x=this.positionscreen.x+d*c.distance,c.y=this.positionscreen.y+e*c.distance,c.wantedrotation=c.x*math.pi*0.25,c.rotation+=0.25*(c.wantedrotation-c.rotation)}; three.morphblendmesh="function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var" c="this.geometry.morphTargets.length;this.createAnimation(" __default",0,c-1,c 1);this.setanimationweight("__default",1)};three.morphblendmesh.prototype="Object.create(THREE.Mesh.prototype);" " three.morphblendmesh.prototype.createanimation="function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};" three.morphblendmesh.prototype.autocreateanimations="function(a){for(var" b="/([a-z]+)_?(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var" h="e.morphTargets[f].name.match(b);if(h&&1<h.length){var" k="h[1];d[k]||(d[k]={start:Infinity,end:-Infinity});h=d[k];f<h.start&&(h.start=f);f">h.end&&(h.end=f);c||(c=k)}}for(k in d)h=d[k],this.createAnimation(k,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d="this.animationsList[b];if(d.active){var" e="d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time">d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
THREE.LensFlarePlugin=function(){function a(a,b){var d=c.createProgram(),e=c.createShader(c.FRAGMENT_SHADER),f=c.createShader(c.VERTEX_SHADER),g="precision "+b+" float;\n";c.shaderSource(e,g+a.fragmentShader);c.shaderSource(f,g+a.vertexShader);c.compileShader(e);c.compileShader(f);c.attachShader(d,e);c.attachShader(d,f);c.linkProgram(d);return d}var b=[],c,d,e,f,g,h,k,l,n,q,r,t,s;this.init=function(b){c=b.context;d=b;e=b.getPrecision();f=new Float32Array(16);g=new Uint16Array(6);b=0;f[b++]=-1;f[b++]=
-1;f[b++]=0;f[b++]=0;f[b++]=1;f[b++]=-1;f[b++]=1;f[b++]=0;f[b++]=1;f[b++]=1;f[b++]=1;f[b++]=1;f[b++]=-1;f[b++]=1;f[b++]=0;f[b++]=1;b=0;g[b++]=0;g[b++]=1;g[b++]=2;g[b++]=0;g[b++]=2;g[b++]=3;h=c.createBuffer();k=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,h);c.bufferData(c.ARRAY_BUFFER,f,c.STATIC_DRAW);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,k);c.bufferData(c.ELEMENT_ARRAY_BUFFER,g,c.STATIC_DRAW);l=c.createTexture();n=c.createTexture();c.bindTexture(c.TEXTURE_2D,l);c.texImage2D(c.TEXTURE_2D,0,c.RGB,16,
16,0,c.RGB,c.UNSIGNED_BYTE,null);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);c.bindTexture(c.TEXTURE_2D,n);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,16,16,0,c.RGBA,c.UNSIGNED_BYTE,null);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);
c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST);0>=c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(q=!1,r=a(THREE.ShaderFlares.lensFlare,e)):(q=!0,r=a(THREE.ShaderFlares.lensFlareVertexTexture,e));t={};s={};t.vertex=c.getAttribLocation(r,"position");t.uv=c.getAttribLocation(r,"uv");s.renderType=c.getUniformLocation(r,"renderType");s.map=c.getUniformLocation(r,"map");s.occlusionMap=c.getUniformLocation(r,"occlusionMap");s.opacity=
c.getUniformLocation(r,"opacity");s.color=c.getUniformLocation(r,"color");s.scale=c.getUniformLocation(r,"scale");s.rotation=c.getUniformLocation(r,"rotation");s.screenPosition=c.getUniformLocation(r,"screenPosition")};this.render=function(a,e,f,g){b.length=0;a.traverseVisible(function(a){a instanceof THREE.LensFlare&&b.push(a)});if(0!==b.length){a=new THREE.Vector3;var D=g/f,A=0.5*f,x=0.5*g,C=16/g,I=new THREE.Vector2(C*D,C),z=new THREE.Vector3(1,1,0),y=new THREE.Vector2(1,1),K=s,C=t;c.useProgram(r);
c.enableVertexAttribArray(t.vertex);c.enableVertexAttribArray(t.uv);c.uniform1i(K.occlusionMap,0);c.uniform1i(K.map,1);c.bindBuffer(c.ARRAY_BUFFER,h);c.vertexAttribPointer(C.vertex,2,c.FLOAT,!1,16,0);c.vertexAttribPointer(C.uv,2,c.FLOAT,!1,16,8);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,k);c.disable(c.CULL_FACE);c.depthMask(!1);for(var N=0,ba=b.length;N<ba;n++){c=16 g;i.set(c*d,c);var p="b[N];a.set(P.matrixWorld.elements[12],P.matrixWorld.elements[13],P.matrixWorld.elements[14]);a.applyMatrix4(e.matrixWorldInverse);" a.applyprojection(e.projectionmatrix);z.copy(a);y.x="z.x*A+A;y.y=z.y*x+x;if(q||0<y.x&&y.x<f&&0<y.y&&y.y<g){c.activeTexture(c.TEXTURE1);c.bindTexture(c.TEXTURE_2D,l);c.copyTexImage2D(c.TEXTURE_2D,0,c.RGB,y.x-8,y.y-8,16,16,0);c.uniform1i(K.renderType,0);c.uniform2f(K.scale,I.x,I.y);c.uniform3f(K.screenPosition,z.x,z.y,z.z);c.disable(c.BLEND);c.enable(c.DEPTH_TEST);c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0);c.activeTexture(c.TEXTURE0);c.bindTexture(c.TEXTURE_2D,n);c.copyTexImage2D(c.TEXTURE_2D," 0,c.rgba,y.x-8,y.y-8,16,16,0);c.uniform1i(k.rendertype,1);c.disable(c.depth_test);c.activetexture(c.texture1);c.bindtexture(c.texture_2d,l);c.drawelements(c.triangles,6,c.unsigned_short,0);p.positionscreen.copy(z);p.customupdatecallback?p.customupdatecallback(p):p.updatelensflares();c.uniform1i(k.rendertype,2);c.enable(c.blend);for(var o="0,J=P.lensFlares.length;O<J;O++){var" e="P.lensFlares[O];0.001<E.opacity&&0.001<E.scale&&(z.x=E.x,z.y=E.y,z.z=E.z,C=E.size*E.scale/g,I.x=C*D,I.y=C,c.uniform3f(K.screenPosition," z.x,z.y,z.z),c.uniform2f(k.scale,i.x,i.y),c.uniform1f(k.rotation,e.rotation),c.uniform1f(k.opacity,e.opacity),c.uniform3f(k.color,e.color.r,e.color.g,e.color.b),d.setblending(e.blending,e.blendequation,e.blendsrc,e.blenddst),d.settexture(e.texture,1),c.drawelements(c.triangles,6,c.unsigned_short,0))}}}c.enable(c.cull_face);c.enable(c.depth_test);c.depthmask(!0)}}}; three.shadowmapplugin="function(){function" a(b,c,d){if(c.visible){var f="0,g=e.length;f<g;f++){var" k="e[f];c._modelViewMatrix.multiplyMatrices(d.matrixWorldInverse,c.matrixWorld);r.push(k)}f=0;for(g=c.children.length;f<g;f++)a(b,c.children[f],d)}}var" b,c,d,e,f,g,h="new" three.frustum,k="new" three.matrix4,l="new" three.vector3,n="new" three.vector3,q="new" three.vector3,r="[];this.init=function(a){b=a.context;" c="a;a=THREE.ShaderLib.depthRGBA;var" h="THREE.UniformsUtils.clone(a.uniforms);d=new" three.shadermaterial({fragmentshader:a.fragmentshader,vertexshader:a.vertexshader,uniforms:h});e="new" three.shadermaterial({fragmentshader:a.fragmentshader,vertexshader:a.vertexshader,uniforms:h,morphtargets:!0});f="new" three.shadermaterial({fragmentshader:a.fragmentshader,vertexshader:a.vertexshader,uniforms:h,skinning:!0});g="new" three.shadermaterial({fragmentshader:a.fragmentshader,vertexshader:a.vertexshader,uniforms:h, morphtargets:!0,skinning:!0});d._shadowpass="!0;e._shadowPass=!0;f._shadowPass=!0;g._shadowPass=!0};this.render=function(a,b){c.shadowMapEnabled&&c.shadowMapAutoUpdate&&this.update(a,b)};this.update=function(t,s){var" p,v,w,u,d,a,x,c,i="[];u=0;b.clearColor(1,1,1,1);b.disable(b.BLEND);b.enable(b.CULL_FACE);b.frontFace(b.CCW);c.shadowMapCullFace===THREE.CullFaceFront?b.cullFace(b.FRONT):b.cullFace(b.BACK);c.setDepthTest(!0);p=0;for(v=t.__lights.length;p<v;p++)if(w=t.__lights[p],w.castShadow)if(w" instanceof three.directionallight&&w.shadowcascade)for(d="0;D<w.shadowCascadeCount;D++){var" z;if(w.shadowcascadearray[d])z="w.shadowCascadeArray[D];else{x=w;var" y="D;z=new" three.directionallight;z.isvirtual="!0;z.onlyShadow=!0;z.castShadow=!0;z.shadowCameraNear=x.shadowCameraNear;z.shadowCameraFar=x.shadowCameraFar;z.shadowCameraLeft=x.shadowCameraLeft;z.shadowCameraRight=x.shadowCameraRight;z.shadowCameraBottom=x.shadowCameraBottom;z.shadowCameraTop=x.shadowCameraTop;z.shadowCameraVisible=x.shadowCameraVisible;" z.shadowdarkness="x.shadowDarkness;z.shadowBias=x.shadowCascadeBias[y];z.shadowMapWidth=x.shadowCascadeWidth[y];z.shadowMapHeight=x.shadowCascadeHeight[y];z.pointsWorld=[];z.pointsFrustum=[];C=z.pointsWorld;A=z.pointsFrustum;for(var">K;K++)C[K]=new THREE.Vector3,A[K]=new THREE.Vector3;C=x.shadowCascadeNearZ[y];x=x.shadowCascadeFarZ[y];A[0].set(-1,-1,C);A[1].set(1,-1,C);A[2].set(-1,1,C);A[3].set(1,1,C);A[4].set(-1,-1,x);A[5].set(1,-1,x);A[6].set(-1,1,x);A[7].set(1,1,x);z.originalCamera=s;A=new THREE.Gyroscope;
A.position.copy(w.shadowCascadeOffset);A.add(z);A.add(z.target);s.add(A);w.shadowCascadeArray[D]=z;console.log("Created virtualLight",z)}y=w;C=D;x=y.shadowCascadeArray[C];x.position.copy(y.position);x.target.position.copy(y.target.position);x.lookAt(x.target);x.shadowCameraVisible=y.shadowCameraVisible;x.shadowDarkness=y.shadowDarkness;x.shadowBias=y.shadowCascadeBias[C];A=y.shadowCascadeNearZ[C];y=y.shadowCascadeFarZ[C];x=x.pointsFrustum;x[0].z=A;x[1].z=A;x[2].z=A;x[3].z=A;x[4].z=y;x[5].z=y;x[6].z=
y;x[7].z=y;I[u]=z;u++}else I[u]=w,u++;p=0;for(v=I.length;p<v;p++){w=i[p];w.shadowmap||(d=three.linearfilter,c.shadowmaptype===three.pcfsoftshadowmap&&(d=three.nearestfilter),w.shadowmap=new three.webglrendertarget(w.shadowmapwidth,w.shadowmapheight,{minfilter:d,magfilter:d,format:three.rgbaformat}),w.shadowmapsize="new" three.vector2(w.shadowmapwidth,w.shadowmapheight),w.shadowmatrix="new" three.matrix4);if(!w.shadowcamera){if(w instanceof three.spotlight)w.shadowcamera="new" three.perspectivecamera(w.shadowcamerafov, w.shadowmapwidth w.shadowmapheight,w.shadowcameranear,w.shadowcamerafar);else if(w three.directionallight)w.shadowcamera="new" three.orthographiccamera(w.shadowcameraleft,w.shadowcameraright,w.shadowcameratop,w.shadowcamerabottom,w.shadowcameranear,w.shadowcamerafar);else{console.error("unsupported light type for shadow");continue}t.add(w.shadowcamera);!0="==t.autoUpdate&&t.updateMatrixWorld()}w.shadowCameraVisible&&!w.cameraHelper&&(w.cameraHelper=new" three.camerahelper(w.shadowcamera),w.shadowcamera.add(w.camerahelper)); if(w.isvirtual&&z.originalcamera="=s){D=s;u=w.shadowCamera;A=w.pointsFrustum;x=w.pointsWorld;l.set(Infinity,Infinity,Infinity);n.set(-Infinity,-Infinity,-Infinity);for(y=0;8">y;y++)C=x[y],C.copy(A[y]),THREE.ShadowMapPlugin.__projector.unprojectVector(C,D),C.applyMatrix4(u.matrixWorldInverse),C.x<l.x&&(l.x=c.x),c.x>n.x&&(n.x=C.x),C.y<l.y&&(l.y=c.y),c.y>n.y&&(n.y=C.y),C.z<l.z&&(l.z=c.z),c.z>n.z&&(n.z=C.z);u.left=l.x;u.right=n.x;u.top=n.y;u.bottom=l.y;u.updateProjectionMatrix()}u=w.shadowMap;A=w.shadowMatrix;
D=w.shadowCamera;D.position.setFromMatrixPosition(w.matrixWorld);q.setFromMatrixPosition(w.target.matrixWorld);D.lookAt(q);D.updateMatrixWorld();D.matrixWorldInverse.getInverse(D.matrixWorld);w.cameraHelper&&(w.cameraHelper.visible=w.shadowCameraVisible);w.shadowCameraVisible&&w.cameraHelper.update();A.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);A.multiply(D.projectionMatrix);A.multiply(D.matrixWorldInverse);k.multiplyMatrices(D.projectionMatrix,D.matrixWorldInverse);h.setFromMatrix(k);c.setRenderTarget(u);
c.clear();r.length=0;a(t,t,D);w=0;for(u=r.length;w<u;w++)x=r[w],a=x.object,x=x.buffer,y=a.material instanceof three.meshfacematerial?a.material.materials[0]:a.material,c="void" 0!="=A.geometry.morphTargets&&0<A.geometry.morphTargets.length&&y.morphTargets,K=A" three.skinnedmesh&&y.skinning,c="A.customDepthMaterial?A.customDepthMaterial:K?C?g:f:C?e:d,c.setMaterialFaces(y),x" three.buffergeometry?c.renderbufferdirect(d,t.__lights,null,c,x,a):c.renderbuffer(d,t.__lights,null,c,x,a);y="t.__webglObjectsImmediate;w=0;for(u=y.length;w<u;w++)x=y[w],A=x.object,A.visible&&A.castShadow&&(A._modelViewMatrix.multiplyMatrices(D.matrixWorldInverse,A.matrixWorld),c.renderImmediateObject(D,t.__lights,null,d,A))}p=c.getClearColor();v=c.getClearAlpha();b.clearColor(p.r,p.g,p.b,v);b.enable(b.BLEND);c.shadowMapCullFace===THREE.CullFaceFront&&b.cullFace(b.BACK)}};THREE.ShadowMapPlugin.__projector=new" three.projector; three.spriteplugin="function(){var" a,b,c,d,e,f,g,h,k,l,n,q,r,t,s,p,v;function w(a,b){return a.z!="=b.z?b.z-a.z:b.id-a.id}var" u,d,a,x="[],C,I,z,y,K;this.init=function(w){u=w.context;D=w;C=new" float32array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]);i="new" uint16array([0,1,2,0,2,3]);z="u.createBuffer();y=u.createBuffer();u.bindBuffer(u.ARRAY_BUFFER,z);u.bufferData(u.ARRAY_BUFFER,C,u.STATIC_DRAW);u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,y);u.bufferData(u.ELEMENT_ARRAY_BUFFER,I,u.STATIC_DRAW);w=u.createProgram();" var x="u.createShader(u.VERTEX_SHADER),P=u.createShader(u.FRAGMENT_SHADER);u.shaderSource(x,[" precision" "+d.getprecision()+" float;","uniform mat4 modelviewmatrix;\nuniform projectionmatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform uvoffset;\nuniform uvscale;\nattribute position;\nattribute uv;\nvarying vuv;\nvoid main() {\nvuv="uvOffset" + uv * uvscale;\nvec2 alignedposition="position" scale;\nvec2 rotatedposition;\nrotatedposition.x="cos(" rotation ) alignedposition.x - sin( alignedposition.y;\nrotatedposition.y="sin(" cos( alignedposition.y;\nvec4 finalposition;\nfinalposition="modelViewMatrix" vec4( 0.0, 1.0 );\nfinalposition.xy="projectionmatrix" finalposition;\ngl_position="finalPosition;\n}" ].join("\n"));" u.shadersource(p,["precision vec3 color;\nuniform sampler2d map;\nuniform opacity;\nuniform int fogtype;\nuniform fogcolor;\nuniform fogdensity;\nuniform fognear;\nuniform fogfar;\nuniform alphatest;\nvarying {\nvec4 texture="texture2D(" map, vuv );\nif ( texture.a < alphatest discard;\ngl_fragcolor="vec4(" color texture.xyz, opacity fogtype> 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
u.compileShader(x);u.compileShader(P);u.attachShader(w,x);u.attachShader(w,P);u.linkProgram(w);K=w;p=u.getAttribLocation(K,"position");v=u.getAttribLocation(K,"uv");a=u.getUniformLocation(K,"uvOffset");b=u.getUniformLocation(K,"uvScale");c=u.getUniformLocation(K,"rotation");d=u.getUniformLocation(K,"scale");e=u.getUniformLocation(K,"color");f=u.getUniformLocation(K,"map");g=u.getUniformLocation(K,"opacity");h=u.getUniformLocation(K,"modelViewMatrix");k=u.getUniformLocation(K,"projectionMatrix");l=
u.getUniformLocation(K,"fogType");n=u.getUniformLocation(K,"fogDensity");q=u.getUniformLocation(K,"fogNear");r=u.getUniformLocation(K,"fogFar");t=u.getUniformLocation(K,"fogColor");s=u.getUniformLocation(K,"alphaTest");w=document.createElement("canvas");w.width=8;w.height=8;x=w.getContext("2d");x.fillStyle="white";x.fillRect(0,0,8,8);A=new THREE.Texture(w);A.needsUpdate=!0};this.render=function(C,I,P,O){x.length=0;C.traverseVisible(function(a){a instanceof THREE.Sprite&&x.push(a)});if(0!==x.length){u.useProgram(K);
u.enableVertexAttribArray(p);u.enableVertexAttribArray(v);u.disable(u.CULL_FACE);u.enable(u.BLEND);u.bindBuffer(u.ARRAY_BUFFER,z);u.vertexAttribPointer(p,2,u.FLOAT,!1,16,0);u.vertexAttribPointer(v,2,u.FLOAT,!1,16,8);u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,y);u.uniformMatrix4fv(k,!1,I.projectionMatrix.elements);u.activeTexture(u.TEXTURE0);u.uniform1i(f,0);O=P=0;var J=C.fog;J?(u.uniform3f(t,J.color.r,J.color.g,J.color.b),J instanceof THREE.Fog?(u.uniform1f(q,J.near),u.uniform1f(r,J.far),u.uniform1i(l,1),
O=P=1):J instanceof THREE.FogExp2&&(u.uniform1f(n,J.density),u.uniform1i(l,2),O=P=2)):(u.uniform1i(l,0),O=P=0);for(var J=0,E=x.length;J</u;w++)x=r[w],a=x.object,x=x.buffer,y=a.material></l.z&&(l.z=c.z),c.z></l.y&&(l.y=c.y),c.y></l.x&&(l.x=c.x),c.x></v;p++){w=i[p];w.shadowmap||(d=three.linearfilter,c.shadowmaptype===three.pcfsoftshadowmap&&(d=three.nearestfilter),w.shadowmap=new></ba;n++){c=16></c;b++){var></b;a++)c=this.lensflares[a],c.x=this.positionscreen.x+d*c.distance,c.y=this.positionscreen.y+e*c.distance,c.wantedrotation=c.x*math.pi*0.25,c.rotation+=0.25*(c.wantedrotation-c.rotation)};></t;r++)for(p=0;3></t;r++)for(p=0;2></w;++s)for(var></t;r++)for(p=0;2></this.bones.length;c++)this.bones[c].parent></e;c++)b.vertices.push(new></h;g++)e.geometry.vertices[d[g]].copy(a)}var></n;l++)this.vertices[l].multiplyscalar(c);this.mergevertices();this.computefacenormals();this.boundingsphere=new></n;l+=3)e(new></d;c++)this.addshape(a[c],b);return></h;g++){var></=--h;){e=h;f=h-1;0></e?1e-10<g&&(a=!0):-1e-10></g?1:-1;for(e=0;e<i;e++)for(f=0;f<c;f++){var></b.length;c++)if(b[c].hastarget(a))return></b;a++){var></s&&(s=1);if("pos"===q)if(this.interpolationtype===three.animationhandler.linear)c.x=p[0]+(v[0]-p[0])*s,c.y=p[1]+(v[1]-p[1])*s,c.z=p[2]+(v[2]-p[2])*s,k></=this.currenttime){r=this.data.hierarchy[f].keys[0];></h;f++)for(var></this.currenttime&&g.index></a.hierarchy[b].keys.length;c++)for(var></a?0:(math.floor(math.abs(a)></h.length;q++){c=h[q];n=-1;for(p=0;p<l.length;p++)if(i=l[p],z=c.x+":"+c.y+":"+i,void></h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function></=d?[g,h]:></z||z<i)return[];k=l*n-k*q;if(0<k||k<i)return[]}if(0==k)return!f||0!=z&&z!=i?[a]:[];if(k==i)return!f||0!=z&&z!=i?[b]:[];if(0==z)return[d];></=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=></g.y||a.y></d;c++){var></g&&(g=h.z)),n.add(h);a={minx:e,miny:f,maxx:b,maxy:c};q&&(a.maxz=d,a.minz=g);return></f&&(f=h.y),q&&(h.z></e&&(e=h.x),h.y></d;c++)b+=this.curves[c].getlength(),a.push(b);return></a&&(a=1);b=this.getpoint(b);return></k)h=d-1;else{h=d;break}d=h;if(c[d]==f)return></e;r++)if(d=a[g[r]].x,a=a[g[r]].y,!(d===t&&a===s||d===p&&a===v||d===w&&a===u)&&(n=d-t,ba=a-s,p=d-p,o=a-v,d-=w,a-=u,p=x*o-c*p,n=y*ba-k*n,ba=i*a-z*d,-1e-10<=p&&-1e-10<=ba&&-1e-10<=n)){r=!1;break></=k&&(k=0);l=k+1;e<=l&&(l=0);n=l+1;e<=n&&(n=0);var></b(a))for(l=0;l<e;l++)g[l]=l;else></s;t++){var></b;q++)r=h[q],v[r]=f.getuniformlocation(g,r);this.uniforms=v;q="position></d.numsupportedmorphtargets;)h[p]?(r=h[p][1],0<=c["morphtarget"+p]&&(m.bindbuffer(m.array_buffer,e.__webglmorphtargetsbuffers[r]),l(c["morphtarget"+p]),m.vertexattribpointer(c["morphtarget"+p],3,m.float,!1,0,0)),0<=c["morphnormal"+p]&&d.morphnormals&&(m.bindbuffer(m.array_buffer,e.__webglmorphnormalsbuffers[r]),></c;a++)if(d=ba[a],d.program===b){d.usedtimes--;0===d.usedtimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=ba.length;a<c;a++)d=ba[a],d.program!==b&&e.push(d);ba=e;m.deleteprogram(b);g.info.memory.programs--}}};this.renderbufferimmediate=function(a,b,c){k();a.haspositions&&!a.__webglvertexbuffer&&(a.__webglvertexbuffer=m.createbuffer());a.hasnormals&&!a.__webglnormalbuffer&&></b.anisotropy||b.__oldanisotropy)&&(m.texparameterf(a,ta.texture_max_anisotropy_ext,math.min(b.anisotropy,rb)),b.__oldanisotropy=b.anisotropy)}function></x;v++)q=u[v],a.format!==three.rgbaformat?m.compressedteximage2d(m.texture_cube_map_positive_x+c,v,f,q.width,q.height,0,q.data):m.teximage2d(m.texture_cube_map_positive_x+c,v,f,q.width,q.height,0,f,r,q.data);else></=u&&r.height<=u||(v=math.max(r.width,r.height),q=math.floor(r.width*u></za&&(m.bindbuffer(m.array_buffer,y.__webgluv2buffer),m.bufferdata(m.array_buffer,fb,i))}if(db){b=0;for(n=ka.length;b<n;b++)pb[ta]=db,pb[ta+1]=db+1,pb[ta+2]=db+2,ta+=3,zb[ub]=db,zb[ub+1]=db+1,zb[ub+2]=db,zb[ub+3]=db+2,zb[ub+4]=db+1,zb[ub+5]=db+2,ub+=6,db+=3;m.bindbuffer(m.element_array_buffer,y.__webglfacebuffer);m.bufferdata(m.element_array_buffer,pb,i);m.bindbuffer(m.element_array_buffer,y.__webgllinebuffer);m.bufferdata(m.element_array_buffer,></sa&&(m.bindbuffer(m.array_buffer,y.__webgluvbuffer),m.bufferdata(m.array_buffer,cb,i))}if(xb&&ib&&q){b=0;for(n=ka.length;b<n;b++)if(p=ka[b],za=ib[p],void></n;b++)if(p=ka[b],v=hb[p],void></c.facevertexuvs.length&&(a.__uvarray=new></=></=></t.positionscreen.z)continue;$.positionscreen.x*=z;$.positionscreen.y*=y;x.positionscreen.x*=z;x.positionscreen.y*=y;t.positionscreen.x*=z;t.positionscreen.y*=y;0<b.overdraw&&></x.positionscreen.z)continue;if(-1></$.positionscreen.z)continue;if(-1></e&&(k(three.normalblending),h(1),t("rgba("+math.floor(255*j.r)+","+math.floor(255*j.g)+","+math.floor(255*j.b)+","+e+")"),o.fillrect(aa.min.x|0,aa.min.y|0,aa.max.x-aa.min.x|0,aa.max.y-aa.min.y|0)),aa.makeempty())};this.clearcolor=function(){};this.cleardepth=function(){};this.clearstencil=function(){};this.render=function(a,x){if(!1===x></a.children.length;b++)this.__addobject(a.children[b])};></e;d++)this.objects[d].object.visible=!1}}}();></f;e++)d[e]=0;-1<a&&(d[a]=1-c);-1<b&&(d[b]=c)};></this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.bonematrices=new></u;w++)if(d=k.faces[w],l=!0===s?p[d.materialindex]:this.material,void></a;k+=3,s+=9)n=k,q=k+1,r=k+2,d.set(p[s],p[s+1],p[s+2]),e.set(p[s+3],p[s+4],p[s+5]),f.set(p[s+6],p[s+7],p[s+8]),x=l.side===three.backside?b.intersecttriangle(f,e,d,!0):b.intersecttriangle(d,e,f,l.side!==three.doubleside),null!==x&&(x.applymatrix4(this.matrixworld),></this.geometry.morphtargets.length){this.morphtargetbase=-1;this.morphtargetforcedorder=[];this.morphtargetinfluences=[];this.morphtargetdictionary={};for(var></d.near||r></g;d+=b)c.skinweights.push(new></x;d++)for(v=a.uvs[d],c.facevertexuvs[d][h]=[],g=0;3></c;b+=2){var></d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=></=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,g=this.facevertexuvs.length;c<g;c++)this.facevertexuvs[c].splice(e,></d;c++)0<c&&(a+=b[c].distanceto(b[c-1])),this.linedistances[c]=a},computeboundingbox:function(){null===this.boundingbox&&(this.boundingbox=new></f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1></p&&p<k.index&&(q[n+1]=-1);for(n=0;6></k.index?(q[2*p]=s,q[2*p+1]=-1,l++):(q[2*p]=s,q[2*p+1]=r[s]);if(g+n></g;n++)k[n]=new></f;e+=3)b.set(c[e],c[e+1],c[e+2]),a.expandbypoint(b);a.center(d);for(var></b.min.z?b.min.z=g:g></b.min.y?b.min.y=f:f></c;b++)a.vertexnormals[b]=this.vertexnormals[b].clone();b=0;for(c=this.vertexcolors.length;b<c;b++)a.vertexcolors[b]=this.vertexcolors[b].clone();b=0;for(c=this.vertextangents.length;b<c;b++)a.vertextangents[b]=this.vertextangents[b].clone();return></y;x+=3)x.pushvertex(g[x],g[x+1],g[x+2]);if(void></w;n++){var></=c.z&&1></=c.y&&1></c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var></d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}};></c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return></a?1:0},degtorad:function(){var></=b)return></b?b:a},maplinear:function(a,b,c,d,e){return></b?b:a></f?void></b},intersectline:function(){var></a||0></f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var></a)return!1;return!0},intersectsbox:function(){var></=></g;f++)e=math.max(e,d.distancetosquared(b[f]));this.radius=math.sqrt(e);return></=c?c:d,b)},intersecttriangle:function(){var></d||d!==d)d=g;return></d||d!==d)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*g,g*=a.min.z-h.z);if(c></=a?a:null},intersectplane:function(a,b){var></=r?(g=1></=n?(h=a*k-b,q=a*b-k,r=g*n,0<=h?q></d;e+=3,c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applymatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return></this.min.z||a.min.z></this.min.y||a.min.y></=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getparameter:function(a,b){return(b||new></this.min.z||a.z></this.min.y||a.y></c;b++)this.expandbypoint(a[b]);return></this.min.y||a.min.y></=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getparameter:function(a,b){return(b||new></this.min.y||a.y></c;b++)this.expandbypoint(a[b]);return></a.w?this.w=a.w:this.w></a.z?this.z=a.z:this.z></a.y?this.y=a.y:this.y></a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<></a.z?this.z=a.z:this.z></a.y?this.y=a.y:this.y></a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return></a.y?this.y=a.y:this.y></a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return></=g)return></d?6:0);break;case></16^255*this.g<<></2></c&&(c-=1);return>